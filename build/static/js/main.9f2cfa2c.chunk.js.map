{"version":3,"sources":["store/actions.js","constants/constants_replicies.js","helpers/util_translate.js","componentsReact/UserReplicies.js","componentsReact/BotAnswers.js","componentsReact/App.js","constants/constants_elements.js","store/createStore.js","helpers/utils_loadAssets.js","helpers/util_emitter.js","componentsReact/UI.js","shaders/saturate.js","entities/createStudio.js","helpers/util_keyBoard.js","components/component_collisionFloor.js","components/component_collisionWalls.js","entities/createPlayer.js","helpers/MaterialsLib.js","systems/system_level.js","assets/level-rooms.obj","assets/floor_outer_map.jpg","assets/skybox/px.jpg","assets/skybox/nx.jpg","assets/skybox/py.jpg","assets/skybox/ny.jpg","assets/skybox/pz.jpg","assets/skybox/nz.jpg","entities/Bot.js","helpers/util_GLTFcopy.js","systems/system_bots.js","assets/botMap.png","assets/botAnim2.glb","assets/matIronBox/posx.jpg","assets/matIronBox/negx.jpg","assets/matIronBox/posy.jpg","assets/matIronBox/negy.jpg","assets/matIronBox/posz.jpg","assets/matIronBox/negz.jpg","store/actionByChangeQuadrant.js","constants/constants_modules.js","helpers/util_deviceResizer.js","helpers/util_frameUpater.js","helpers/TweenUpdater.js","components/component_playerInBot.js","pipeLines/initPipeLine.js","index.js"],"names":["emitter","connectEmitterToActions","em","startPlay","dispatch","type","newQuadrant","environmentMode","showBackground","startFinalFog","clickFullScreen","exitFullScreen","clickInfo","val","mode","toggleDialog","clickPhrase","r","phrase","setTimeout","levelEvent","emit","is","isDialog","toggleButtonDialog","isButtonDialog","TRANSLATE_WORLDS","t","UserReplicies","connect","state","userReplicies","app","ui","props","className","map","item","onClick","q","Math","floor","random","BotAnswers","botAnswers","a","dispatcher","isShowClickFullScreen","isShowButtFullScreen","isShowInfo","isShowFinalMessage","onMouseDown","gameContext","onTouchStart","onMouseUp","onTouchEnd","href","target","MATERIALS_CONFIG","mat","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","skinning","S","FRAME_UPDATE","FLOORS_CONF","fogNear","fogFar","backgroundImgKey","studioConfig","canId","rendererCon","antialias","clearColor","backgroundColor","amb","strength","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","appData","sceneEnvironment","playerQuadrant","oldDialogPlayerQuadrant","oldQuadrant","counter","isStartCorridorShow","history","botIndex","phraseIndex","phrasesData","phrases","event","rootReducer","combineReducers","action","isNewBot","isCanChangeBotIndex","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","path","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","key","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","callback","push","filter","s","length","console","log","obj","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","style","marginLeft","UI","_gameContext","ReactDOM","render","getElementById","startButtons","progressWrapper","display","addEventListener","e","dataset","lang","hideStartScreen","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","assets","canvas","renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","lightA","getState","background","fog","add","_camera","_composer","EffectComposer","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","subscribe","oldFogNear","oldFogFar","oldColor","oldBackgroundImgKey","startData","endData","TWEEN","to","onUpdate","start","cam","addPass","RenderPass","ShaderPass","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","FLOORS_ARRAY","setItemToFloorsCollision","removeItemFromFloorsCollision","mesh","WALLS_ARRAY","createComponentCollisionWalls","objFromLink","objToLink","offset","objFrom","objTo","vec3Src2","vec3Ray2","raycasterWalls","check","getWorldPosition","copy","position","sub","intersectsWalls","intersectObjects","distance","setItemToWallCollision","removeItemFromWallCollision","Player","studio","pr","isButtonsDisabled","_isBlocked","_isCanMove","_mainObj","fromArray","rotation","frontObj","backObj","strenth","light","_checkFloors","delta","vec3Src","vec3Ray","isDisable","raycasterDown","updateData","intersectsFloor","y","count","point","toggleDisable","createComponentCollisionFloors","checkWallsFront","checkWallsBack","oldY","countDropped","isGameComplete","translateZ","dir","toggleFinalMessage","isOpen","setCamera","x","z","set","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","STANDART_ROOMS","START_ROOMS","createLevelMeshes","allMeshes","rooms","collisionsBotsRooms","traverse","child","name","includes","geometry","wall","green","road","OFFSETS","Bot","inScene","_state","_targetAngle","container","_modelGroup","PI","_objFrom","_objTo","gltf","clone","animations","scene","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","i","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","botScene","model","children","material","botMaterial","_animations","_mixer","_walkAction","clipAction","play","timeScale","_speakAction","update","_componentCollision","_updateState","_collisionMeshes","visible","stop","lookAt","_startRotate","abs","_startGo","arrWalls","intersectObject","CHANGE_LAYER_STATE","oldState","newState","emitData","emitKey","backgroundImg","levelState","getEmitsByChangeQuadrant","playerOldQ","playerNewQ","getData","conf","createCheckerNewQuadrant","currentQuadrant","isChanged","GAME_MODULES","constr","initStateKey","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","max","min","fullscreenElement","emitFrameUpdate","time","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","group","objRooms","createRoom","kv","instanceKey","objKey","typeLevelChange","isAddBot","removeRoom","remove","isRemoveBot","startL","l","wentLevels","flagIsSpecial","initState","saveOldQuadrant","saveNewQuadrant","saveIsStartCorridorShow","keyCreateRoom","newMode","oldKv","curKv","assetsToLoad","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","mapFloorOuter","wrap","iron","bot","groupBots","arrBots","botRooms","setCollisionMesh","removeCollisionMesh","botSrc","botMap","pxjpg2","nxjpg2","pyjpg2","nyjpg2","pzjpg2","nzjpg2","checkerNewQuadrant","arrEmitData","player","bots","keyBoard","botWorldPos","objToCompare","oldDisabledDir","vec","downKey","keyDirInBot","distanceTo","prepareToSay","toggleCanMove","initModulesByState","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","showStartButton","toggleBlocked","modulesData","arr","j"],"mappings":"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","file":"static/js/main.9f2cfa2c.chunk.js","sourcesContent":["//import { emitter } from '../helpers/util_emitter'\r\nlet emitter = null\r\nexport const connectEmitterToActions = em => {\r\n    emitter = em\r\n}\r\n\r\n\r\nexport const startPlay = dispatch => ({\r\n    startPlay: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'outer',\r\n    }),\r\n    showBackground: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'back',\r\n    }),\r\n    startFinalFog: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'start',\r\n    }),\r\n})\r\n\r\n\r\nexport const showMessages = dispatch => ({\r\n    toggleFinalMessage: val => dispatch({\r\n        type: 'TOGGLE_FINAL_MESSAGE',\r\n        mode: val,\r\n    })\r\n})\r\n\r\n\r\nexport const clickFullScreen = dispatch => ({\r\n    clickFullScreen: () => {\r\n        dispatch({\r\n            type: 'CLICK_FULL_SCREEN',\r\n        })\r\n    },\r\n\r\n    exitFullScreen: () => {\r\n        dispatch({\r\n            type: 'EXIT_FULL_SCREEN',\r\n        })\r\n    },\r\n})\r\n\r\n\r\nexport const clickInfo = dispatch => {\r\n    return ({\r\n        clickInfo: val => {\r\n            dispatch({\r\n                type: 'INFO_TOGGLE',\r\n                mode: val,\r\n            })\r\n        },\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const toggleDialog = dispatch => ({\r\n    clickPhrase: r => {\r\n        dispatch({\r\n            type: 'CLICK_PHRASE',\r\n            phrase: r,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'PHRASE_EVENT',\r\n                phrase: r,\r\n            })\r\n\r\n            r.levelEvent && emitter && emitter.emit('changeLevelMode')(r.levelEvent)\r\n        }, 1000)\r\n    },\r\n\r\n\r\n    toggleDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_DIALOG',\r\n            isDialog: is,\r\n        })\r\n    },\r\n\r\n\r\n    toggleButtonDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_BUTTON',\r\n            isButtonDialog: is,\r\n        })\r\n    }\r\n})\r\n","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'Hello there!': 'Привет !',\r\n        'Good day, carbon-based life form.':  'День добрый, кремниевая форма жизни.',\r\n    \r\n        'What is this place ?': 'Что это за место?',\r\n        'This is an entrance to the entropic hyper-maze.': 'Это вход в энтропийный гипер-куб.',\r\n    \r\n        'And what happens if I enter it ?': 'Что будет, если я войду в него?',\r\n        'This place is waiting.': 'Куб примет тебя.',\r\n    \r\n        'Say, where do these corridors lead ?': 'Куда ведут эти коридоры ?',\r\n        'They will lead you to the end.': 'Они приведут тебя к финалу.',\r\n    \r\n        'Ooook, I\\'m heading in then.': 'Я пошел дальше.',\r\n        'We will meet again.': 'Мы еще увидимся.',\r\n    \r\n        'What do you do here ?': 'Что ты здесь делаешь ?',\r\n        'Collecting the energy of the night.':  'Собираю энергию ночи.',\r\n    \r\n        'Can you tell me which way is out of here ?': 'В какую сторону мне идти ?',\r\n        'It is about the journey, not the destination': 'Здесь нет сторон. Здесь важна только длина пути.',\r\n    \r\n        'Hey, it looks like I\\'m walking in circles.': 'Я уже долго иду.',\r\n        'You have walked long enough.': 'Ты прошел достаточно для этого уровня.',\r\n    \r\n        'Meaning?': 'Что это значит?',\r\n        'The way to the next level is open to you.': 'Тебе открыт путь на одну ступень выше.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hi, I heard I can find the \"end\" around here?': 'Я ищу финал.',\r\n        'Yes, I told you this is where the corridors lead.': 'Я помню о твоем пути.',\r\n\r\n        'Man, you all look the same.': 'Вы все так похожи.',\r\n        'We will meet again.': 'Мы еще встретимся.',\r\n\r\n        'Soooo, is that you again ?': 'Это снова ты?',\r\n        'Yes. All of me are myself.': 'Да, мы все едины.',\r\n\r\n        'Yeah, just like those corridors.': 'Тут все коридоры повторяются.',\r\n        'The meaning of everything is in being whole.': 'Суть всего в едином.',\r\n\r\n        'Am I there yet?': 'Как долго еще идти.',\r\n        'The sign will be given when you are.': 'Тебе будет знак, когда ты будешь готов.',\r\n\r\n        'How do I know what it is?': 'Как я узнаю этот знак.',\r\n        'I will give it to you.': 'Я подам его.',\r\n\r\n        'That\\'s the same exact corridor with you again.':  'Это одинаковый сегмент коридора с тобой.',\r\n        'You are ready for the next level.': 'Ты готов к новому уровню.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hey man, seriously, how do I get out of here ?':'Привет снова. Как выбраться. Уже надоело.',\r\n        'You have not reached the end.':'Ты не постиг дзен.',\r\n\r\n        'We\\'ll how do you reach it ?':'Ты-то как выходишь на поверхность?',\r\n        'I have my way.':'У меня свой путь.',\r\n\r\n        'So how\\'s your way btw ?':'Ты все на своем пути?',\r\n        'It is like yourself.': 'Как и ты.',\r\n\r\n        'And how long you\\'ve been on it ?': 'Как долго ты на нем?',\r\n        'These walls can hear us.': 'Эти стены нас слышат.',\r\n\r\n\r\n        'I think you\\'re weighing this corridor down.': 'Мне кажется, ты идешь в нагрузку к этому сегменту коридора.',\r\n        'The next level is open to you.': 'Тебе открыт следующий уровень.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n\r\n        'Look bud, next level or not, nothing\\'s changed at all !':  'Ничего не меняется.',\r\n        'Except the number of steps.': 'Меняется количество пройденных шагов.',\r\n        \r\n        'So this place counts steps ?': 'Это место считает шаги?',\r\n        'This is place is waiting.': 'Это место ждет.',\r\n        \r\n        'How long have you been here ?': 'Как давно ты здесь?',\r\n        'How long is irrelevant. What matters is the journey.': 'Время не имеет значения, значение имеет лишь путь.',\r\n        \r\n        'Then why aren\\'t you on one?': 'Но ты же не идешь.',\r\n        'With you walking for both of us, I do not have to.': 'Зато ты каждый раз проходишь мимо.',\r\n        \r\n        'Look, just make a new level, please.': 'Сделай новый уровень.',\r\n        'You are ready. It is waiting for you.': 'Ты готов - новый уровень ждет тебя.',\r\n\r\n    \r\n        // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n    \r\n        'Wait, you are this place! You control all its fragments.': 'Ты и есть это место. Ты управляешь сегментами.',\r\n        'You have almost reached the end.': 'Ты почти дошел до края.',\r\n        \r\n        'Why do you do this ?': 'Зачем тебе это?',\r\n        'It is my way to warp space. More movement. More fragments.': 'Это способ свернуть пространство. Больше движения. Больше сегментов.',\r\n        \r\n        'How many people have been through here ?': 'Как много путников попадало сюда?',\r\n        'Many are still here.': 'Многие из них до сих пор тут.',\r\n        \r\n        'So where are they?': 'Почему я их не встретил?',\r\n        'Everyone has a different system of fragments.': 'У каждого своя система сегментов.',\r\n        \r\n        'Will you let me out ?': 'Ты выпустишь меня?',\r\n        'All ways lead to the end.': 'Все стороны света открыты тебе.',\r\n        \r\n        'I wanna meet the others.': 'Я хочу встретить других.',\r\n        'The next level is waiting for you.': 'Тебе открыт новый уровень.',\r\n\r\n        // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n\r\n        'Everything\\'s looped here.': 'Я вижу зарево?',\r\n        'Everything is looped with small differences.': 'Это зарево просветления. Ты близок',\r\n\r\n        'How many levels even are there ?': 'Все коридоры повторяются.',\r\n        'It all depends on you.': 'Все повторяется с небольшой разницей.',\r\n\r\n        'That\\'s it, I\\'m done.': 'Все мой путь окончен.',\r\n        'Have you reached your journey\\'s end ?': 'Ты отказываешься идти?',\r\n\r\n        'Yes, you mad bastard! I have !': 'Да, ты безумен.',\r\n        'Then I am giving you the sign.': 'Я освобождаю тебя.',\r\n\r\n\r\n\r\n\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'To be continued': 'Продолжение следует',\r\n        'chapter': 'глава',\r\n        'open': 'пуск',\r\n        'Author: ': 'Автор: ',\r\n        'link': 'ссылка',\r\n    }\r\n}\r\n","//import { emitter } from './util_emitter'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nlet currentLanguage = 'en'\r\n\r\n// emitter.subscribe('setLanguage')(keyLanguage => {\r\n//     currentLanguage = keyLanguage\r\n// })\r\n\r\n\r\nexport const t = val => (TRANSLATE_WORLDS[currentLanguage] && TRANSLATE_WORLDS[currentLanguage][val]) || val\r\n","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\nimport { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.app.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"userReplicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {t(item.q)}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { connect } from 'react-redux'\r\nimport { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.app.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"botAnswers\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{t(item.q)}</div>\r\n                    <div className=\"a\">{t(item.a)}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { toggleDialog, clickFullScreen, clickInfo } from '../store/actions'\r\n// import { emitter } from '../helpers/util_emitter'\r\nimport { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isButtonDialog: state.app.ui.isButtonDialog,\r\n    isDialog: state.app.ui.isDialog,\r\n    isShowClickFullScreen: state.app.ui.isShowButtFullScreen,\r\n    isShowInfo: state.app.ui.isShowInfo,\r\n    isShowFinalMessage: state.app.ui.isShowFinalMessage,\r\n})\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ui\">\r\n            {props.isButtonDialog && (\r\n                <button\r\n                    className=\"butt-toggleDialog control\"\r\n                    onClick={() => {toggleDialog(props.dispatch).toggleDialog(!props.isDialog)}}>\r\n                    {props.isDialog ? t('close dialog') : t('open dialog') }\r\n                </button>)}\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-left control\"\r\n                    onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                    onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                    onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                    onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                    >\r\n                    &#9668;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-right control\"\r\n                    onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                    onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                    onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                    onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                    >\r\n                    &#9658;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-front control\"\r\n                    onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                    onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                    onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                    onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                    >\r\n                    &#9650;\r\n                </button>)}\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-back control\"\r\n                    onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                    onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                    onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                    onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                    >\r\n                    &#x25BC;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && props.isShowClickFullScreen && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        clickFullScreen(props.dispatch).clickFullScreen()\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && !props.isShowInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => clickInfo(props.dispatch).clickInfo(true)}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n\r\n\r\n            {props.isDialog && (\r\n                <div className=\"dialog\">\r\n                    <div className=\"dialog-inner\">\r\n                        <BotAnswers />\r\n                        <UserReplicies />\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner final-message\">\r\n                        {/*<button*/}\r\n                            {/*className=\"control butt-infoClose\"*/}\r\n                            {/*onClick={() => showMessages(props.dispatch).toggleFinalMessage(false)}>*/}\r\n                            {/*x*/}\r\n                        {/*</button>*/}\r\n                        <p>{t('To be continued')}</p>\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowInfo && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner\">\r\n                        <button\r\n                            className=\"control butt-infoClose\"\r\n                            onClick={() => clickInfo(props.dispatch).clickInfo(false)}>\r\n                            x\r\n                        </button>\r\n                        <p>\r\n                            {`1 ${t('chapter')}: `}\r\n                            <a href=\"http://js.otrisovano.ru/factory/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {`2 ${t('chapter')}: `}\r\n                            <a href=\"http://js.otrisovano.ru/bridge/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p><br /><br />\r\n                            {t('Author: ')}\r\n                            <a href=\"http://otrisovano.ru\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {t('Github: ')}\r\n                            <a href=\"https://github.com/fire888/levels/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                    </div>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","\r\n\r\nexport const MATERIALS_CONFIG = {\r\n\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'green': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xa1129f,\r\n            emissive: 0xa1129f,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/** size element */\r\nexport const S = 175.335\r\nexport const H = 70\r\n\r\n\r\n\r\n/** emitter constants */\r\nexport const FRAME_UPDATE = 'FRAME_UPDATE'\r\n\r\n\r\n\r\n\r\nexport const FLOORS_CONF = {\r\n    '-2': {\r\n        'outer': { fogNear: -200, fogFar: 500, color: 0x18257d },\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x8805a8 },\r\n    },\r\n\r\n   \r\n\r\n    '-1': {\r\n        'start': { fogNear: 0, fogFar: 5, color: 0x18257d },\r\n        'outer': { fogNear: 20, fogFar: 500, color: 0x18257d },\r\n        'back': { fogNear: 20, fogFar: 500, color: 0x18257d, backgroundImgKey: 'skyBox' },\r\n        'firstRoomLight': { fogNear: -40, fogFar: 150, color: 0x00235e},\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x2e118b },\r\n    },\r\n\r\n\r\n    '0': { 'default': { fogNear: -40, fogFar: 150, color: 0x3c4900 }, },\r\n\r\n    \r\n    '1': { 'default': { fogNear: -40, fogFar: 150, color: 0x0e3e52 }, },\r\n\r\n\r\n    '2': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a1763 }, },\r\n\r\n\r\n    '3': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a6340 }, },\r\n\r\n\r\n    '4': { 'default': { fogNear: 0, fogFar: 80, color: 0xac0000 }, },\r\n}\r\n\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    clearColor: FLOORS_CONF[-1]['outer'].color,\r\n    backgroundColor: FLOORS_CONF[-1]['outer'].color,\r\n    amb: {\r\n        color: FLOORS_CONF[-1]['outer'].color,\r\n        strength: 0.7,\r\n    },\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [100, -78, 1000],\r\n    //startPos: [90, -10, 360.7140705920112], // beginPlay\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0xffffff,\r\n        strength: 5000,\r\n        pos: [0, 50, 5],\r\n    },\r\n}\r\n","import { createStore , applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\nimport { FLOORS_CONF } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\nconst DIALOGS_DATA = [\r\n    {\r\n     phrases: [\r\n         {\r\n             q: 'Hello there!',\r\n             a: 'Good day, carbon-based life form.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'What is this place ?',\r\n             a: 'This is an entrance to the entropic hyper-maze.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'And what happens if I enter it ?',\r\n             a: 'This place is waiting.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  }, {\r\n     phrases: [\r\n         {\r\n             q: 'Say, where do these corridors lead ?',\r\n             a: 'They will lead you to the end.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Ooook, I\\'m heading in then.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  }, {\r\n  \r\n  \r\n  \r\n     phrases: [\r\n         {\r\n             q: 'What do you do here ?',\r\n             a: 'Collecting the energy of the night.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         },\r\n         {\r\n             q: 'Can you tell me which way is out of here ?',\r\n             a: 'It is about the journey, not the destination',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  },\r\n  \r\n  \r\n  \r\n     {\r\n     phrases: [\r\n         {\r\n         q: 'Hey, it looks like I\\'m walking in circles.',\r\n         a: 'You have walked long enough.',\r\n         event: 'nextReply',\r\n         levelEvent: null,\r\n     },{\r\n         q: 'Meaning?',\r\n         a: 'The way to the next level is open to you.',\r\n         event: 'close',\r\n         levelEvent: 'addStairs',\r\n     },\r\n     ]\r\n  },\r\n  \r\n  \r\n     // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n  \r\n     {\r\n     phrases: [\r\n         {\r\n             q: 'Hi, I heard I can find the \"end\" around here?',\r\n             a: 'Yes, I told you this is where the corridors lead.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Man, you all look the same.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n  },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Soooo, is that you again ?',\r\n                 a: 'Yes. All of me are myself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'Yeah, just like those corridors.',\r\n                 a: 'The meaning of everything is in being whole.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Am I there yet?',\r\n                 a: 'The sign will be given when you are.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'How do I know what it is?',\r\n                 a: 'I will give it to you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s the same exact corridor with you again.',\r\n                 a: 'You are ready for the next level.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n     // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Hey man, seriously, how do I get out of here ?',\r\n                 a: 'You have not reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'We\\'ll how do you reach it ?',\r\n                 a: 'I have my way.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'So how\\'s your way btw ?',\r\n                 a: 'It is like yourself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'And how long you\\'ve been on it ?',\r\n                 a: 'These walls can hear us.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'I think you\\'re weighing this corridor down.',\r\n                 a: 'The next level is open to you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look bud, next level or not, nothing\\'s changed at all !',\r\n                 a: 'Except the number of steps.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So this place counts steps ?',\r\n                 a: 'This is place is waiting.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How long have you been here ?',\r\n                 a: 'How long is irrelevant. What matters is the journey.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Then why aren\\'t you on one?',\r\n                 a: 'With you walking for both of us, I do not have to.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look, just make a new level, please.',\r\n                 a: 'You are ready. It is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Wait, you are this place! You control all its fragments.',\r\n                 a: 'You have almost reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Why do you do this ?',\r\n                 a: 'It is my way to warp space. More movement. More fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How many people have been through here ?',\r\n                 a: 'Many are still here.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So where are they?',\r\n                 a: 'Everyone has a different system of fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Will you let me out ?',\r\n                 a: 'All ways lead to the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'I wanna meet the others.',\r\n                 a: 'The next level is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n    // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Everything\\'s looped here.',\r\n                 a: 'Everything is looped with small differences.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'How many levels even are there ?',\r\n                 a: 'It all depends on you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s it, I\\'m done.',\r\n                 a: 'Have you reached your journey\\'s end ?',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Yes, you mad bastard! I have !',\r\n                 a: 'Then I am giving you the sign.',\r\n                 event: 'close',\r\n                 levelEvent: 'addWell',\r\n             },\r\n         ]\r\n     },\r\n  ]  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst appData = {\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['start'].color,\r\n        fogNear: FLOORS_CONF['-1']['start'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['start'].fogFar,\r\n        backgroundImgKey: null,\r\n    },\r\n\r\n    playerQuadrant: {\r\n        oldDialogPlayerQuadrant: [0, 0, -50],\r\n        oldQuadrant: [0, 0, 0],\r\n        newQuadrant: [0, 0, 0],\r\n        counter: null,\r\n    },\r\n\r\n    level: {\r\n        isStartCorridorShow: true,\r\n    },\r\n\r\n    ui: {\r\n        isShowButtFullScreen: true,\r\n        isShowInfo: false,\r\n        isShowFinalMessage: false,\r\n        botAnswers: [],\r\n        userReplicies: [],\r\n        history: [],\r\n        isDialog: false,\r\n        isButtonDialog: false,\r\n    },\r\n\r\n    botIndex: -1,\r\n    phraseIndex: 0,\r\n    phrasesData: DIALOGS_DATA,\r\n}\r\n\r\n\r\n\r\nconst app = function(state = appData, action) {\r\n    if (action.type === 'CLICK_FULL_SCREEN') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowButtFullScreen: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'EXIT_FULL_SCREEN') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowButtFullScreen: true,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'INFO_TOGGLE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowFinalMessage: false,\r\n                isShowInfo: action.mode,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'TOGGLE_FINAL_MESSAGE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowFinalMessage: action.mode,\r\n                isShowInfo: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (action.type === 'CHANGE_ENVIRONMENT') {\r\n        const { newQuadrant, environmentMode } = action\r\n\r\n        if (!FLOORS_CONF[newQuadrant[1]]) return state;\r\n\r\n        const { fogNear, fogFar, color, backgroundImgKey } = FLOORS_CONF[newQuadrant[1]][environmentMode]\r\n\r\n        return ({\r\n            ...state,\r\n            sceneEnvironment: {\r\n                fogNear,\r\n                fogFar,\r\n                color,\r\n                backgroundImgKey,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'CHANGE_QUADRANT') {\r\n        return ({\r\n            ...state,\r\n            playerQuadrant: {\r\n                ...state.playerQuadrant,\r\n                ...action,\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'DESTROY_START_CORRIDOR') {\r\n        return ({\r\n            ...state,\r\n            level: {\r\n                ...state.level,\r\n                isStartCorridorShow: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'CLICK_PHRASE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                botAnswers: [\r\n                    ...state.ui.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'PHRASE_EVENT') {\r\n        const { event } = action.phrase\r\n\r\n        if (event === 'nextReply') {\r\n            const userReplicies = [state.phrasesData[state.botIndex].phrases[state.phraseIndex + 1]]\r\n\r\n            return ({\r\n                ...state,\r\n                phraseIndex: state.phraseIndex + 1,\r\n                ui: {\r\n                    ...state.ui,\r\n                    userReplicies,\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        if (event === 'close') {\r\n            return ({\r\n                ...state,\r\n                ui: {\r\n                    ...state.ui,\r\n                    userReplicies: [],\r\n                    isButtonDialog: true,\r\n                },\r\n                playerQuadrant: {\r\n                    ...state.playerQuadrant,\r\n                    oldDialogPlayerQuadrant: [...state.playerQuadrant.newQuadrant]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'TOGGLE_DIALOG') {\r\n\r\n        let isNewBot = false\r\n        const { oldDialogPlayerQuadrant, newQuadrant } = state.playerQuadrant\r\n        if (\r\n            oldDialogPlayerQuadrant[0] !== newQuadrant[0] ||\r\n            oldDialogPlayerQuadrant[1] !== newQuadrant[1] ||\r\n            oldDialogPlayerQuadrant[2] !== newQuadrant[2]\r\n        ) isNewBot = true\r\n\r\n\r\n\r\n\r\n        if (!isNewBot) {\r\n            return ({\r\n                ...state,\r\n                ui: {\r\n                    ...state.ui,\r\n                    isDialog: action.isDialog,\r\n                    isButtonDialog: true,\r\n                },\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n        const phraseIndex = 0\r\n        const botIndex = state.botIndex + 1\r\n        const isButtonDialog = false\r\n        /////////////////////////////////////////////////////\r\n\r\n\r\n        ///////////////////////////////////////////// TODO: REMOVE\r\n        // let botIndex = state.botIndex\r\n        // let phraseIndex = state.phraseIndex\r\n        // if (action.isDialog) {\r\n        //     botIndex = state.botIndex + 1\r\n        //     phraseIndex = 0\r\n        // }\r\n        // const isButtonDialog = !action.isDialog\r\n        // /////////////////////////////////////////////////\r\n\r\n\r\n        const userReplicies = state.phrasesData[botIndex] ? [state.phrasesData[botIndex].phrases[phraseIndex]] : []\r\n\r\n        return ({\r\n            ...state,\r\n\r\n            ui: {\r\n                ...state.ui,\r\n                userReplicies,\r\n                botAnswers: [],\r\n                isDialog: action.isDialog,\r\n                isButtonDialog,\r\n            },\r\n\r\n            isCanChangeBotIndex: false,\r\n            botIndex,\r\n            phraseIndex,\r\n        })\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isDialog: false,\r\n                isButtonDialog: action.isButtonDialog,\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({ app })\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures')\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => getterLoader(type).load(path, resolve))\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport '../stylesheets/style.css'\r\n\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(gameContext) {\r\n        this._gameContext = gameContext\r\n\r\n        ReactDOM.render(\r\n            <Provider store={gameContext.store}>\r\n                <App\r\n                    gameContext={gameContext}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            this._gameContext.emitter.emit('setLanguage')(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// import saturateVert from './saturate.vert'\r\n// import saturateFrag from './saturate.frag'\r\n\r\n\r\nexport const Saturate = {\r\n    uniforms: {\r\n        \"tDiffuse\": { value: null },\r\n    },\r\n\r\n    //vertexShader: saturateVert,\r\n    //fragmentShader: saturateFrag,\r\n\r\n\r\n\r\n    vertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n    fragmentShader: `\r\n\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n    vec4 texel = texture2D( tDiffuse, vUv );\r\n    gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { studioConfig } from '../constants/constants_elements'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(gameContext) {\r\n        const { store, assets, emitter, } = gameContext\r\n        const { canId, rendererCon, clearColor, amb } = studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        const renderer = new THREE.WebGLRenderer(rendererCon)\r\n        renderer.setClearColor(clearColor)\r\n        renderer.setPixelRatio(window.devicePixelRatio)\r\n        renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = store.getState().app.sceneEnvironment\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        let lightA\r\n        {\r\n            const { color, strength } = amb\r\n            lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( lightA )\r\n        }\r\n\r\n        this._camera = null\r\n\r\n\r\n        this._composer = new EffectComposer(renderer)\r\n        //composer.addPass(new RenderPass(scene, camera))\r\n\r\n\r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._camera) {\r\n                this._camera.aspect = size.width/size.height\r\n                this._camera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        const drawFrame = () => this._camera && this._composer.render(this._scene, this._camera)\r\n        emitter.subscribe(FRAME_UPDATE)(drawFrame)\r\n\r\n\r\n\r\n\r\n\r\n        let\r\n            oldFogNear = this._scene.fog.near,\r\n            oldFogFar = this._scene.fog.far,\r\n            oldColor = this._scene.fog.color,\r\n            oldBackgroundImgKey = store.getState().app.sceneEnvironment.backgroundImgKey\r\n\r\n\r\n\r\n\r\n        store.subscribe(() => {\r\n            const newState = store.getState()\r\n            const { fogNear, fogFar, color, backgroundImgKey } = newState.app.sceneEnvironment\r\n\r\n            if (fogNear !== oldFogNear || fogFar !== oldFogFar || color !== oldColor ) {\r\n                let startData = {\r\n                    color: this._scene.fog.color,\r\n                    near: this._scene.fog.near,\r\n                    far: this._scene.fog.far,\r\n                }\r\n                let endData = {\r\n                    color: new THREE.Color(color),\r\n                    near: fogNear,\r\n                    far: fogFar,\r\n                }\r\n\r\n                oldFogNear = fogNear\r\n                oldFogFar = fogFar\r\n                oldColor = color\r\n\r\n                new TWEEN.Tween(startData)\r\n                    .to(endData, 3000)\r\n                    .onUpdate(() => {\r\n                        this._scene.fog.color = startData.color\r\n                        this._scene.fog.near = startData.near\r\n                        this._scene.fog.far = startData.far\r\n                        lightA.color = startData.color\r\n                        renderer.setClearColor(startData.color)\r\n                    })\r\n                    .start()\r\n            }\r\n\r\n\r\n            if (backgroundImgKey !== oldBackgroundImgKey) {\r\n                oldBackgroundImgKey = backgroundImgKey\r\n                this._scene.background = assets[backgroundImgKey] || null\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    setCamera (cam) {\r\n        this._camera = cam\r\n        this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n        this._composer.addPass(new ShaderPass(Saturate))\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet FLOORS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionFloors = (objFromLink, offset, delta, speed) => {\r\n    const objFrom = objFromLink\r\n    const offsetFromFloor = offset\r\n    const offsetFromFloorFactor = delta\r\n    const speedDown = speed\r\n\r\n    const vec3Src = new THREE.Vector3()\r\n    const vec3Ray = new THREE.Vector3(0, -1, 0)\r\n\r\n    let isDisable = false\r\n    \r\n    const raycasterDown = new THREE.Raycaster(vec3Src, vec3Ray)\r\n\r\n    return {\r\n        check: updateData => {\r\n            if (isDisable) return;\r\n\r\n            vec3Src.copy(objFrom.position)\r\n            const intersectsFloor = raycasterDown.intersectObjects(FLOORS_ARRAY)\r\n            if (intersectsFloor && intersectsFloor[0] && intersectsFloor[0].distance > offsetFromFloor + offsetFromFloorFactor) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            }\r\n            if (intersectsFloor && !intersectsFloor[0]) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            } \r\n            objFrom.position.y = intersectsFloor[0].point.y + offsetFromFloor\r\n        },\r\n        toggleDisable: val => {\r\n            isDisable = val\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToFloorsCollision = item => FLOORS_ARRAY.push(item)\r\nexport const removeItemFromFloorsCollision = item => FLOORS_ARRAY = FLOORS_ARRAY.filter(mesh => mesh !== item) \r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet WALLS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFromLink, objToLink, offset) => {\r\n    const offsetWallCollision = offset\r\n    const objFrom = objFromLink\r\n    const objTo = objToLink\r\n\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2)\r\n    \r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            vec3Src2.copy(objFrom.position)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            \r\n            const intersectsWalls = raycasterWalls.intersectObjects(WALLS_ARRAY)\r\n\r\n            return intersectsWalls[0] && intersectsWalls[0].distance < offsetWallCollision\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setItemToWallCollision = item => WALLS_ARRAY.push(item)\r\nexport const removeItemFromWallCollision = item => WALLS_ARRAY = WALLS_ARRAY.filter(mesh => item !== mesh)\r\n","import * as THREE from 'three'\r\n\r\nimport { playerConfig } from '../constants/constants_elements'\r\n\r\nimport { createComponentCollisionFloors } from '../components/component_collisionFloor'\r\nimport { createComponentCollisionWalls } from '../components/component_collisionWalls'\r\n\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { showMessages, startPlay } from '../store/actions'\r\n\r\n\r\n\r\nexport class Player {\r\n    constructor (gameContext) {\r\n        const { emitter, studio, pr } = gameContext\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n            speed,\r\n            offsetFromFloor,\r\n            offsetFromFloorFactor,\r\n            speedDown,\r\n            offsetWallCollision,\r\n            speedRot,\r\n        } = playerConfig\r\n\r\n\r\n        this._camera = null\r\n        let keys = {}\r\n        let isButtonsDisabled = false\r\n        this._isBlocked = true\r\n        this._isCanMove = {\r\n            'up': true,\r\n            'down': true,\r\n        }\r\n\r\n        this._mainObj = new THREE.Object3D()\r\n        this._mainObj.position.fromArray(startPos)\r\n        this._mainObj.rotation.fromArray(startRot)\r\n\r\n        const frontObj = new THREE.Object3D()\r\n        frontObj.position.fromArray(frontObjPos)\r\n        this._mainObj.add(frontObj)\r\n        this.frontObj = frontObj\r\n\r\n        const backObj = new THREE.Object3D()\r\n        backObj.position.fromArray(backObjPos)\r\n        this._mainObj.add(backObj)\r\n        this.backObj = backObj\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray(pos)\r\n            this._mainObj.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this._mainObj.add(light)\r\n        }\r\n\r\n\r\n        this._checkFloors = createComponentCollisionFloors(this._mainObj, offsetFromFloor, offsetFromFloorFactor, speedDown)\r\n        const checkWallsFront = createComponentCollisionWalls(this._mainObj, frontObj, offsetWallCollision)\r\n        const checkWallsBack = createComponentCollisionWalls(this._mainObj, backObj, offsetWallCollision)\r\n\r\n        let oldY = this._mainObj.position.y\r\n        let countDropped = 0\r\n        let isGameComplete = false\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n            if (this._isBlocked) return;\r\n\r\n            this._checkFloors.check(data)\r\n\r\n            if (!keys) return;\r\n\r\n            if (keys['up']) {\r\n                if (checkWallsFront.check()) return;\r\n                if (!this._isCanMove['up']) return;\r\n\r\n                this._mainObj.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'up' })\r\n            }\r\n\r\n            if (keys['down']) {\r\n                if (checkWallsBack.check()) return;\r\n                if (!this._isCanMove['down']) return;\r\n\r\n                this._mainObj.translateZ(speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'down' })\r\n            }\r\n            keys['left'] && (this._mainObj.rotation.y += (speedRot * data.count))\r\n            keys['right'] && (this._mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n            if (oldY > this._mainObj.position.y) {\r\n                ++countDropped\r\n            } else {\r\n                countDropped = 0\r\n            }\r\n            oldY = this._mainObj.position.y\r\n\r\n            if (countDropped > 800 && !isGameComplete) {\r\n                isGameComplete = true\r\n                setTimeout(() => {\r\n                    startPlay(pr.dispatch).startFinalFog()\r\n                    setTimeout(() => {\r\n                        showMessages(pr.dispatch).toggleFinalMessage(true)\r\n                    }, 6000)\r\n                }, 10000)\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe(FRAME_UPDATE)(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this._mainObj)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this._mainObj\r\n    }\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    setToPos (x, y, z) {\r\n        this._mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n","import { MATERIALS_CONFIG } from '../constants/constants_elements'\r\nimport * as THREE from 'three'\r\n\r\nexport class MaterialsLib {\r\n    constructor (gameContext) {\r\n        const {assets} = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = assets => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","import {\r\n    setItemToFloorsCollision,\r\n    removeItemFromFloorsCollision, \r\n} from '../components/component_collisionFloor'\r\nimport {\r\n    setItemToWallCollision,\r\n    removeItemFromWallCollision,\r\n} from '../components/component_collisionWalls'\r\nimport * as THREE from 'three'\r\nimport { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst STANDART_ROOMS = ['room_02', 'room_03', 'room_04', 'room_05']\r\nconst START_ROOMS = ['outer_walls', 'outer_floor', 'outer_road']\r\n\r\n\r\n\r\nexport class Level {\r\n    constructor(gameContext) {\r\n        const { emitter, studio, store, assets, materials } = gameContext\r\n        const { rooms, allMeshes, collisionsBotsRooms } = createLevelMeshes(assets, materials)\r\n\r\n        this.collisionsBotsRooms = collisionsBotsRooms\r\n\r\n        const group = new THREE.Group()\r\n        studio.addToScene(group)\r\n        const objRooms = {}\r\n\r\n\r\n\r\n        let state = 'normal' // 'addBot' || 'addStairs' || 'addWell'\r\n\r\n\r\n        const createRoom = (kv, key) => {\r\n            const instanceKey = key || STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n\r\n            const objKey = `r_${kv[0]}_${kv[1]}_${kv[2]}`\r\n\r\n            const mesh = rooms[instanceKey].clone()\r\n            mesh.position.set(kv[0] * S, kv[1] * H, kv[2] * S)\r\n            setItemToFloorsCollision(mesh)\r\n            setItemToWallCollision(mesh)\r\n            group.add(mesh)\r\n            objRooms[objKey] = mesh\r\n\r\n\r\n            emitter.emit('levelChanged')({\r\n                typeLevelChange: 'createRoom',\r\n                instanceKey,\r\n                objKey,\r\n                kv,\r\n                isAddBot: instanceKey === 'room_01'\r\n            })\r\n\r\n            instanceKey === 'room_06' && createRoom([kv[0], kv[1] + 1, kv[2]], 'room_dummy')\r\n        }\r\n\r\n\r\n        const removeRoom = kv => {\r\n            const objKey = `r_${ kv[0] }_${ kv[1] }_${ kv[2] }`\r\n            if (!objRooms[objKey]) return;\r\n\r\n\r\n            const instanceKey = objRooms[objKey].name\r\n\r\n\r\n            group.remove(objRooms[objKey])\r\n            removeItemFromFloorsCollision(objRooms[objKey])\r\n            removeItemFromWallCollision(objRooms[objKey])\r\n            delete objRooms[objKey]\r\n\r\n\r\n            emitter.emit('levelChanged')({\r\n                typeLevelChange: 'destroyRoom',\r\n                instanceKey,\r\n                objKey,\r\n                kv,\r\n                isRemoveBot: instanceKey === 'room_01'\r\n            })\r\n\r\n            instanceKey === 'room_dummy' && removeRoom([kv[0], kv[1] - 1, kv[2]])\r\n            instanceKey === 'room_06' && removeRoom([kv[0], kv[1] + 1, kv[2]])\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        createRoom([0, -1, 0], 'room_02')\r\n        createRoom([0, -1, -1], 'room_02')\r\n        createRoom([-1, -1, 0], 'room_02')\r\n        createRoom([1, -1, 0], 'room_02')\r\n\r\n\r\n\r\n        /** add remove start corridors */\r\n        const startL = {}\r\n        for (let i = 0; i < START_ROOMS.length; ++i) {\r\n            const l = allMeshes[START_ROOMS[i]].clone()\r\n            setItemToFloorsCollision(l)\r\n            setItemToWallCollision(l)\r\n            group.add(l)\r\n            l.position.set(0, -1 * H, 0)\r\n            startL[START_ROOMS[i]] = l\r\n        }\r\n\r\n\r\n\r\n\r\n        let wentLevels = 0\r\n        let flagIsSpecial = false\r\n\r\n        const initState = store.getState()\r\n        let saveOldQuadrant = initState.app.playerQuadrant.oldQuadrant\r\n        let saveNewQuadrant = initState.app.playerQuadrant.newQuadrant\r\n        let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n\r\n\r\n\r\n\r\n        store.subscribe(() => {\r\n            const newState = store.getState()\r\n\r\n            if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n                saveIsStartCorridorShow = false\r\n                for (let key in startL) {\r\n                    removeItemFromFloorsCollision(startL[key])\r\n                    removeItemFromWallCollision(startL[key])\r\n                    group.remove(startL[key])\r\n                }\r\n            }\r\n\r\n\r\n            const { type, oldQuadrant, newQuadrant, counter } = newState.app.playerQuadrant\r\n\r\n\r\n            if ( type !== 'CHANGE_QUADRANT' ) return;\r\n\r\n\r\n            if (\r\n                saveOldQuadrant[0] !== oldQuadrant[0] ||\r\n                saveOldQuadrant[1] !== oldQuadrant[1] ||\r\n                saveOldQuadrant[2] !== oldQuadrant[2] ||\r\n                saveNewQuadrant[0] !== newQuadrant[0] ||\r\n                saveNewQuadrant[1] !== newQuadrant[1] ||\r\n                saveNewQuadrant[2] !== newQuadrant[2]\r\n            ) {\r\n                saveOldQuadrant = [...oldQuadrant]\r\n                saveNewQuadrant = [...newQuadrant]\r\n            } else {\r\n                return;\r\n            }\r\n\r\n\r\n\r\n            let keyCreateRoom = STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n            if (counter) {\r\n                wentLevels = counter(wentLevels)\r\n\r\n                if (flagIsSpecial) {\r\n                    flagIsSpecial = false\r\n                } else {\r\n                    if (wentLevels < 3) {\r\n                        state = 'normal'\r\n                    } else if (wentLevels < 100) {\r\n                        if (state === 'normal') {\r\n                            state = 'addBot'\r\n                        }\r\n                    } else {\r\n                        state = 'addStairs'\r\n                    }\r\n\r\n\r\n                    if (state === 'addBot') {\r\n                        keyCreateRoom = 'room_01'\r\n                        flagIsSpecial = true\r\n                    }\r\n                    if (state === 'addStairs') {\r\n                        keyCreateRoom = 'room_06'\r\n                        flagIsSpecial = true\r\n                    }\r\n                    if (state === 'addWell') {\r\n                        keyCreateRoom = 'room_07'\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            emitter.subscribe('changeLevelMode')(newMode => state = newMode)\r\n\r\n\r\n            const oldKv = oldQuadrant, curKv = newQuadrant\r\n            // move west\r\n            if (curKv[0] < oldKv[0]) {\r\n                console.log('----------- west')\r\n                // remove east\r\n                removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n\r\n                // set center to east\r\n                objRooms[`r_${curKv[0] + 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n                // create west\r\n                createRoom([oldKv[0] - 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n                // remove north\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n                // remove south\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create soush\r\n                createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n            }\r\n\r\n            // move east\r\n            if (curKv[0] > oldKv[0]) {\r\n                console.log('----------- east')\r\n                // remove west\r\n                removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n\r\n                // set center to east\r\n                objRooms[`r_${curKv[0] - 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n                // create east\r\n                createRoom([oldKv[0] + 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n                // remove north\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n                // remove south\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create south\r\n                createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n            }\r\n\r\n\r\n            // move north\r\n            if (curKv[2] < oldKv[2]) {\r\n                console.log('-----------north')\r\n                // remove south\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n\r\n                // set center to south\r\n                objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] + 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n                // create north\r\n                createRoom([oldKv[0], oldKv[1], oldKv[2] - 2], keyCreateRoom)\r\n\r\n                // remove west\r\n                removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create west\r\n                createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n                // remove east\r\n                removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create east\r\n                createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n            }\r\n\r\n\r\n            // move south\r\n            if (curKv[2] > oldKv[2]) {\r\n                console.log('-----------south')\r\n                // remove north\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n\r\n                // set center to north\r\n                objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] - 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n                // create south\r\n                createRoom([oldKv[0], oldKv[1], oldKv[2] + 2], keyCreateRoom)\r\n\r\n                // remove west\r\n                removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create west\r\n                createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n                // remove east\r\n                removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create east\r\n                createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n            }\r\n\r\n            // move top\r\n            if (curKv[1] > oldKv[1] || curKv[1] < oldKv[1]) {\r\n                console.log('-----------top')\r\n                // remove north\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                createRoom([curKv[0], curKv[1], curKv[2] - 1])\r\n                // remove south\r\n                removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create south\r\n                createRoom([curKv[0], curKv[1], curKv[2] + 1])\r\n                // remove left\r\n                removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create left\r\n                createRoom([curKv[0] - 1, curKv[1], curKv[2]])\r\n                // remove right\r\n                removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create right\r\n                createRoom([curKv[0] + 1, curKv[1], curKv[2]])\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const rooms = {}\r\n    const collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"room_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            rooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"collision_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            collisionsBotsRooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_walls\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_road\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_floor\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        collisionsBotsRooms,\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level-rooms.5251ade2.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/px.2be78f43.jpg\";","export default __webpack_public_path__ + \"static/media/nx.b2401269.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.462f1251.jpg\";","export default __webpack_public_path__ + \"static/media/pz.8ea5ba14.jpg\";","export default __webpack_public_path__ + \"static/media/nz.7f255b96.jpg\";","import * as THREE from 'three'\r\nimport { GLTFCopy } from '../helpers/util_GLTFcopy'\r\n\r\n\r\nconst OFFSETS = {\r\n    'room_01': { x: 55, z: 75}\r\n}\r\n\r\nexport class Bot {\r\n    constructor () {\r\n        this.inScene = false\r\n\r\n        this._state = 'go' // || 'rotate' || 'say'\r\n\r\n        this._targetAngle = null\r\n\r\n\r\n        this.container = new THREE.Group()\r\n\r\n        this._modelGroup = new THREE.Group()\r\n        this._modelGroup.position.x = OFFSETS['room_01'].x\r\n        this._modelGroup.position.z = OFFSETS['room_01'].z\r\n        this._modelGroup.rotation.y = Math.random() * (2 * Math.PI)\r\n        this.container.add(this._modelGroup)\r\n\r\n        this._objFrom = new THREE.Object3D()\r\n        this._modelGroup.add(this._objFrom)\r\n\r\n\r\n        this._objTo = new THREE.Object3D()\r\n        this._objTo.position.set(0, 0, 1)\r\n        this._modelGroup.add(this._objTo)\r\n\r\n\r\n        const copy = GLTFCopy(Bot.botScene)\r\n        this.model = copy.scene.children[0]\r\n        this.model.children[1].material = Bot.botMaterial\r\n        this._animations = Bot.botScene.animations\r\n        this._mixer = new THREE.AnimationMixer(this.model.children[1])\r\n        this._walkAction = this._mixer.clipAction(this._animations[1])\r\n        this._walkAction.play()\r\n        this._walkAction.timeScale = .7\r\n\r\n        this._speakAction = this._mixer.clipAction(this._animations[0])\r\n        this._speakAction.timeScale = .4\r\n\r\n        this._modelGroup.add(this.model)\r\n    }\r\n\r\n\r\n    update (data) {\r\n        this._mixer.update(data.delta)\r\n\r\n        if (!this._componentCollision) return;\r\n\r\n        this._updateState()\r\n    }\r\n\r\n\r\n    setCollisionMesh (mesh) {\r\n        this._collisionMeshes = [mesh]\r\n        this.container.add(mesh)\r\n        mesh.material.visible = false\r\n\r\n\r\n        this._componentCollision = createComponentCollisionWalls(this._objFrom, this._objTo, 7, this._collisionMeshes)\r\n    }\r\n\r\n    removeCollisionMesh () {\r\n        this._collisionMeshes = null\r\n        this._componentCollision = null\r\n    }\r\n\r\n\r\n    prepareToSay (pos) {\r\n        this._state = 'say'\r\n        this._walkAction.stop()\r\n        this._speakAction.play()\r\n        this._modelGroup.lookAt(pos.x, this.container.position.y, pos.z)\r\n    }\r\n\r\n\r\n    /** internal *****************************/\r\n\r\n    _updateState () {\r\n        if (this._state === 'go') {\r\n            const isNear = this._componentCollision.check()\r\n            if (!isNear) {\r\n                this._modelGroup.translateZ(0.05)\r\n            } else {\r\n                this._startRotate()\r\n            }\r\n        }\r\n\r\n        if (this._state === 'rotate') {\r\n            this._modelGroup.rotation.y += ((this._targetAngle - this._modelGroup.rotation.y) < 0) ? -.01 : .01\r\n            this._modelGroup.rotation.y %= 2 * Math.PI\r\n            const isComplete = Math.abs(this._modelGroup.rotation.y - this._targetAngle) < .5\r\n            isComplete && this._startGo()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _startGo () {\r\n        this._state = 'go'\r\n        this._walkAction.play()\r\n        this._speakAction.stop()\r\n    }\r\n\r\n\r\n    _startRotate() {\r\n        this._state = 'rotate'\r\n        this._targetAngle = (this._modelGroup.rotation.y + 1.5 + Math.random() * 4) % (2 * Math.PI)\r\n    }\r\n}\r\n\r\nBot.botScene = null\r\nBot.botMaterial = null\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFrom, objTo, offset, arrWalls) => {\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            objFrom.getWorldPosition(vec3Src2)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2, 0, 20)\r\n            const intersectsWalls = raycasterWalls.intersectObject(arrWalls[0], true)\r\n\r\n            return !!intersectsWalls[0]\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","import * as THREE from 'three'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { Bot } from '../entities/Bot'\r\n\r\n\r\nconst S = 175.335\r\nconst H = 70\r\nconst H_BOT = 14\r\n\r\n\r\nexport class Bots {\r\n    constructor(gameContext) {\r\n        const { assets, emitter, store, studio, materials } = gameContext\r\n\r\n        Bot.botMaterial = materials.iron\r\n        Bot.botScene = assets.bot\r\n\r\n\r\n\r\n        const groupBots = new THREE.Group()\r\n        studio.addToScene(groupBots)\r\n\r\n\r\n        const arrBots = []\r\n        this.arrBots = arrBots\r\n\r\n\r\n        let botRooms = null\r\n        if (gameContext['level'] && gameContext['level'].collisionsBotsRooms) {\r\n            botRooms = gameContext['level'].collisionsBotsRooms\r\n        }\r\n\r\n\r\n        for (let i = 0; i < 5; ++i) {\r\n            const bot = new Bot()\r\n            groupBots.add(bot.container)\r\n            bot.container.position.set(-30 + i * 30, -92, 750)\r\n            bot.inScene = 'aaa'\r\n            botRooms && bot.setCollisionMesh(botRooms['collision_r_01'].clone())\r\n            arrBots.push(bot)\r\n        }\r\n\r\n\r\n\r\n\r\n        emitter.subscribe(FRAME_UPDATE)(data => {\r\n            for (let i = 0; i < arrBots.length; ++i) arrBots[i].inScene && arrBots[i].update(data)\r\n        })\r\n\r\n\r\n\r\n\r\n        const initState = store.getState()\r\n        let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n        store.subscribe(() => {\r\n            const newState = store.getState()\r\n            if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n                saveIsStartCorridorShow = newState.app.level.isStartCorridorShow\r\n\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    arrBots[i].inScene = null\r\n                    arrBots[i].container.position.y = -10000\r\n                    arrBots[i].removeCollisionMesh()\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n        emitter.subscribe('levelChanged')(({ objKey, kv, isAddBot, isRemoveBot }) => {\r\n            if (isAddBot) {\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    if (!arrBots[i].inScene) {\r\n                        arrBots[i].inScene = objKey\r\n                        arrBots[i].container.position.set(kv[0] * S, kv[1] * H + H_BOT, kv[2] * S)\r\n                        botRooms && arrBots[i].setCollisionMesh(botRooms['collision_r_01'].clone())\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (isRemoveBot) {\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    if (arrBots[i].inScene === objKey) {\r\n                        arrBots[i].inScene = null\r\n                        arrBots[i].container.position.y = -10000\r\n                        arrBots[i].removeCollisionMesh()\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/botMap.972e276e.png\";","export default __webpack_public_path__ + \"static/media/botAnim2.47b6030d.glb\";","export default __webpack_public_path__ + \"static/media/posx.be2d83a2.jpg\";","export default __webpack_public_path__ + \"static/media/negx.d016c8e7.jpg\";","export default __webpack_public_path__ + \"static/media/posy.01cfd221.jpg\";","export default __webpack_public_path__ + \"static/media/negy.f01f8356.jpg\";","export default __webpack_public_path__ + \"static/media/posz.ef37b8e1.jpg\";","export default __webpack_public_path__ + \"static/media/negz.f346a80a.jpg\";","import { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport const START_LAYER_STATE = 'outer'\r\n\r\n\r\n\r\n\r\n\r\nexport const CHANGE_LAYER_STATE = [\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'outer', newState: 'corridor',\r\n        oldQuadrant: [0, -2, 4], newQuadrant: [0, -2, 3],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n                backgroundImg: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'corridor', newState: 'outer',\r\n        oldQuadrant: [0, -2, 3], newQuadrant: [0, -2, 4],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'outer',\r\n            },\r\n        ]\r\n    },\r\n\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'corridor', newState: 'firstRoom',\r\n        oldQuadrant: [0, -1, 2], newQuadrant: [0, -1, 1],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'firstRoomLight',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'corridor',\r\n        oldQuadrant: [0, -1, 1], newQuadrant: [0, -1, 2],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: [0, -1, 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_MINUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_PLUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_PLUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: () => 0,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: () => 100,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_MINUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_PLUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_PLUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n]\r\n\r\n\r\n\r\nexport class ChangerQuadrant {\r\n    constructor(gameContext) {\r\n        const { pr, emitter } = gameContext\r\n        const checkerNewQuadrant = createCheckerNewQuadrant()\r\n\r\n\r\n        emitter.subscribe('playerMove')(({ pos }) => {\r\n            const data = checkerNewQuadrant.update(pos)\r\n            const { currentQuadrant, oldQuadrant, isChanged } = data\r\n\r\n            if (!isChanged) return;\r\n\r\n            const arrEmitData = getEmitsByChangeQuadrant(oldQuadrant, currentQuadrant)\r\n\r\n            arrEmitData.length && arrEmitData.forEach(item => pr.dispatch({\r\n                ...item,\r\n                type: item.emitKey,\r\n            }))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet levelState = START_LAYER_STATE\r\n\r\n\r\nexport const getEmitsByChangeQuadrant = (playerOldQ, playerNewQ) => {\r\n    for (let i = 0; i < CHANGE_LAYER_STATE.length; ++i) {\r\n        const data = getData(\r\n            [...playerOldQ],\r\n            [...playerNewQ],\r\n            {\r\n                ...CHANGE_LAYER_STATE[i],\r\n                oldQuadrant: [...CHANGE_LAYER_STATE[i].oldQuadrant],\r\n                newQuadrant: [...CHANGE_LAYER_STATE[i].newQuadrant],\r\n            }\r\n        )\r\n        if (data) return data;\r\n    }\r\n    return { levelState }\r\n}\r\n\r\n\r\n\r\n\r\nconst getData = (playerOldQ, playerNewQ, conf) => {\r\n    const { oldState, newState, oldQuadrant, newQuadrant, emitData } = conf\r\n\r\n    if (levelState !== oldState)\r\n        return;\r\n\r\n\r\n    if (oldQuadrant[0] === 'ANY') oldQuadrant[0] = playerOldQ[0]\r\n    if (oldQuadrant[1] === 'ANY') oldQuadrant[1] = playerOldQ[1]\r\n    if (oldQuadrant[2] === 'ANY') oldQuadrant[2] = playerOldQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY') newQuadrant[0] = playerNewQ[0]\r\n    if (newQuadrant[1] === 'ANY') newQuadrant[1] = playerNewQ[1]\r\n    if (newQuadrant[2] === 'ANY') newQuadrant[2] = playerNewQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY_PLUS_ONE') newQuadrant[0] = playerOldQ[0] + 1\r\n    if (newQuadrant[1] === 'ANY_PLUS_ONE') newQuadrant[1] = playerOldQ[1] + 1\r\n    if (newQuadrant[2] === 'ANY_PLUS_ONE') newQuadrant[2] = playerOldQ[2] + 1\r\n\r\n    if (newQuadrant[0] === 'ANY_MINUS_ONE') newQuadrant[0] = playerOldQ[0] - 1\r\n    if (newQuadrant[1] === 'ANY_MINUS_ONE') newQuadrant[1] = playerOldQ[1] - 1\r\n    if (newQuadrant[2] === 'ANY_MINUS_ONE') newQuadrant[2] = playerOldQ[2] - 1\r\n\r\n\r\n    if (\r\n        oldQuadrant[0] !== playerOldQ[0] ||\r\n        oldQuadrant[1] !== playerOldQ[1] ||\r\n        oldQuadrant[2] !== playerOldQ[2] ||\r\n        newQuadrant[0] !== playerNewQ[0] ||\r\n        newQuadrant[1] !== playerNewQ[1] ||\r\n        newQuadrant[2] !== playerNewQ[2]\r\n    ) return;\r\n\r\n\r\n    levelState = newState\r\n\r\n    return emitData.map(item => ({\r\n        ...item,\r\n        levelState,\r\n        oldQuadrant: [...oldQuadrant],\r\n        newQuadrant: [...newQuadrant],\r\n    }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst createCheckerNewQuadrant = function () {\r\n    let oldQuadrant = []\r\n\r\n    return {\r\n        update ({ x, y, z}) {\r\n            const currentQuadrant = [Math.floor(x / S), Math.floor(y / H), Math.floor(z / S)]\r\n\r\n            if (\r\n                currentQuadrant[0] !== oldQuadrant[0] ||\r\n                currentQuadrant[1] !== oldQuadrant[1] ||\r\n                currentQuadrant[2] !== oldQuadrant[2]\r\n            ) {\r\n                const data = {\r\n                    isChanged: true,\r\n                    currentQuadrant,\r\n                    oldQuadrant,\r\n                }\r\n                oldQuadrant = [...currentQuadrant]\r\n\r\n                return data\r\n            } else {\r\n                return { isChanged: false }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { LoaderAssets } from '../helpers/utils_loadAssets'\r\nimport { EventEmitter } from \"../helpers/util_emitter\"\r\nimport { UI } from '../componentsReact/UI'\r\nimport { DeviceResizer } from \"../helpers/util_deviceResizer\"\r\nimport { FrameUpdater } from \"../helpers/util_frameUpater\"\r\nimport { TweenUpdater } from \"../helpers/TweenUpdater\"\r\nimport { Studio } from '../entities/createStudio'\r\nimport { KeyBoard } from \"../helpers/util_keyBoard\"\r\nimport { Player } from '../entities/createPlayer'\r\n\r\nimport { MaterialsLib } from '../helpers/MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../assets/level-rooms.obj'\r\nimport mapFloorOuter from '../assets/floor_outer_map.jpg'\r\nimport pxjpg from '../assets/skybox/px.jpg'\r\nimport nxjpg from '../assets/skybox/nx.jpg'\r\nimport pyjpg from '../assets/skybox/py.jpg'\r\nimport nyjpg from '../assets/skybox/ny.jpg'\r\nimport pzjpg from '../assets/skybox/pz.jpg'\r\nimport nzjpg from '../assets/skybox/nz.jpg'\r\n\r\n\r\nimport { Bots } from '../systems/system_bots'\r\nimport botMap from '../assets/botMap.png'\r\nimport botSrc from '../assets/botAnim2.glb'\r\nimport pxjpg2 from '../assets/matIronBox/posx.jpg'\r\nimport nxjpg2 from '../assets/matIronBox/negx.jpg'\r\nimport pyjpg2 from '../assets/matIronBox/posy.jpg'\r\nimport nyjpg2 from '../assets/matIronBox/negy.jpg'\r\nimport pzjpg2 from '../assets/matIronBox/posz.jpg'\r\nimport nzjpg2 from '../assets/matIronBox/negz.jpg'\r\n\r\n\r\nimport { ChangerQuadrant } from \"../store/actionByChangeQuadrant\"\r\nimport { Component_PlayerInBot } from '../components/component_playerInBot'\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'ui',\r\n        constr: UI,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'bots',\r\n        constr: Bots,\r\n        initStateKey: 'beforeStartPlay',\r\n            assetsToLoad: [\r\n                { type: 'glb', path: botSrc, key: 'bot' },\r\n                { type: 'img', path: botMap, key: 'botMap' },\r\n                { type: 'cubeTextures', path: [  pxjpg2, nxjpg2, pyjpg2, nyjpg2, pzjpg2, nzjpg2, ], key: 'ironEnv' },\r\n            ]\r\n    },\r\n    {\r\n        key: 'changerQuadrant',\r\n        constr: ChangerQuadrant,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'playerInBot',\r\n        constr: Component_PlayerInBot,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","import { clickFullScreen } from '../store/actions'\r\n\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        const { emitter, appWrapper, pr } = gameContext\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                pr && clickFullScreen(pr.dispatch).exitFullScreen()\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit(FRAME_UPDATE)\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        // const logger = data => {\r\n        //     console.log(data)\r\n        //     return data\r\n        // }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}\r\n//\r\n//\r\n// export function createFrameUpdater (eventEmitter) {\r\n//\r\n//     const emitFrameUpdate = eventEmitter.emit(FRAME_UPDATE)\r\n//\r\n//     let data = {\r\n//         time: 0,\r\n//         delta: 0,\r\n//         count: 0,\r\n//         oldTime: 0\r\n//     }\r\n//\r\n//     const getDataFromGlobalVar = () => data\r\n//\r\n//     const updateTime = data => {\r\n//         data.time = Date.now()\r\n//         return data\r\n//     }\r\n//\r\n//     const updateDelta = data => {\r\n//         data.delta = (data.time - data.oldTime) * 0.001\r\n//         if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n//             data.delta = 1000/60 * 0.001;\r\n//         }\r\n//         return data\r\n//     }\r\n//\r\n//     const updateCount = data => {\r\n//         data.count = data.delta / (1/60)\r\n//         return data\r\n//     }\r\n//\r\n//     const emit = data => {\r\n//         emitFrameUpdate(data)\r\n//         return data\r\n//     }\r\n//\r\n//     const updateOldTime = data => {\r\n//         data.oldTime = data.time\r\n//         return data\r\n//     }\r\n//\r\n//     const saveDataInGlobalVar = dataFromChine => {\r\n//         data = dataFromChine\r\n//         return data\r\n//     }\r\n//\r\n//     // const logger = data => {\r\n//     //     console.log(data)\r\n//     //     return data\r\n//     // }\r\n//\r\n//     const update = R.pipe(\r\n//         getDataFromGlobalVar,\r\n//         updateTime,\r\n//         updateDelta,\r\n//         updateCount,\r\n//         emit,\r\n//         updateOldTime,\r\n//         saveDataInGlobalVar\r\n//     )\r\n//\r\n//     const animate = () => {\r\n//         requestAnimationFrame(animate)\r\n//         update(data)\r\n//     }\r\n//\r\n//     animate()\r\n// }\r\n//\r\n","import * as TWEEN from '@tweenjs/tween.js'\r\nimport { FRAME_UPDATE } from \"../constants/constants_elements\";\r\n\r\nexport class TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe(FRAME_UPDATE)(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from \"three\";\r\nimport {FRAME_UPDATE} from \"../constants/constants_elements\";\r\nimport { toggleDialog } from '../store/actions'\r\n\r\nconst MIN_DIST_TO_BOT = 12\r\nconst MAX_DIALOG_DIST_TO_BOT = 30\r\n\r\nexport class Component_PlayerInBot {\r\n    constructor(gameContext) {\r\n        const { player, bots, emitter, keyBoard, pr } = gameContext\r\n\r\n        const botWorldPos = new THREE.Vector3()\r\n\r\n\r\n        const objToCompare = {\r\n            'up': player.frontObj,\r\n            'down': player.backObj,\r\n        }\r\n\r\n\r\n        let oldDisabledDir = null\r\n        const vec = new THREE.Vector3()\r\n\r\n\r\n        emitter.subscribe(FRAME_UPDATE)(() => {\r\n            let downKey = null\r\n            if (keyBoard.keys['up']) downKey = 'up'\r\n            if (keyBoard.keys['down']) downKey = 'down'\r\n            if (!downKey) return;\r\n\r\n            let keyDirInBot = null\r\n\r\n            for (let i = 0; i < bots.arrBots.length; ++i) {\r\n                if (!bots.arrBots[i].inScene) continue;\r\n\r\n                bots.arrBots[i]._modelGroup.getWorldPosition(botWorldPos)\r\n                const distance = botWorldPos.distanceTo(objToCompare[downKey].getWorldPosition(vec))\r\n\r\n\r\n                distance < MIN_DIST_TO_BOT && (keyDirInBot = downKey)\r\n\r\n\r\n                if (bots.arrBots[i]._state === 'say' && distance > MAX_DIALOG_DIST_TO_BOT) {\r\n                    bots.arrBots[i]._startRotate()\r\n                    toggleDialog(pr.dispatch).toggleButtonDialog(false)\r\n                }\r\n\r\n\r\n                if (bots.arrBots[i]._state !== 'say' && distance < MAX_DIALOG_DIST_TO_BOT) {\r\n                    bots.arrBots[i].prepareToSay(player._mainObj.position)\r\n                    toggleDialog(pr.dispatch).toggleButtonDialog(true)\r\n                 }\r\n            }\r\n\r\n\r\n            if (keyDirInBot) {\r\n                if (oldDisabledDir !== keyDirInBot) {\r\n                    oldDisabledDir = downKey\r\n                    player.toggleCanMove('up', true)\r\n                    player.toggleCanMove('down', true)\r\n                    player.toggleCanMove(downKey, false)\r\n                }\r\n            } else {\r\n                if (oldDisabledDir) {\r\n                    player.toggleCanMove('up', true)\r\n                    player.toggleCanMove('down', true)\r\n                    oldDisabledDir = null\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","import {dispatcher} from \"../componentsReact/App\";\r\nimport {store} from \"../store/createStore\";\r\nimport {GAME_MODULES} from \"../constants/constants_modules\";\r\nimport {startPlay} from \"../store/actions\";\r\nimport { connectEmitterToActions } from \"../store/actions\";\r\n\r\n\r\nexport async function pipeLineForInit () {\r\n    const gameContext = {\r\n        pr: dispatcher,\r\n        store,\r\n        appWrapper: document.querySelector('.app-wrapper'),\r\n    }\r\n\r\n    initModulesByState('pageLoaded', GAME_MODULES, gameContext)\r\n\r\n    const { loaderAssets, emitter } = gameContext\r\n\r\n    connectEmitterToActions(emitter)\r\n\r\n    const dataToLoad = getAssetsFromModulesData(GAME_MODULES)\r\n    gameContext.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', GAME_MODULES, gameContext)\r\n\r\n    const { player, ui } = gameContext\r\n    ui.showStartButton(() => {\r\n        startPlay(dispatcher.dispatch).startPlay()\r\n        startPlay(dispatcher.dispatch).showBackground()\r\n        player.toggleBlocked(false)\r\n    })\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, gameContext) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = GAME_MODULES[i]\r\n        initStateKey === state && (gameContext[key] = new constr(gameContext))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","import { pipeLineForInit } from './pipeLines/initPipeLine'\r\nwindow.addEventListener('load', pipeLineForInit)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}