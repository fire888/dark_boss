{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","chapter01/src/constants/constants_elements.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/helpers/helper_translate.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","chapter01/src/constants/translate.js","chapter01/src/ui/DialogPallete.js","chapter01/src/ui/CustomReactComponent.js","chapter01/src/ui/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer.js","_CORE/systems/SystemCollisionsItems.js","_CORE/helpers/helper_MaterialsLib.js","assets/chapter01/level_01.obj","assets/chapter01/wall.jpg","assets/chapter01/level-ray.obj","_CORE/components/funcs/transformProp.js","_CORE/utils/iterate.js","chapter01/src/systems/system_Doors.js","_CORE/components/componentTweenProp.js","assets/chapter01/door.jpg","_CORE/components/componentFreeWalKWithCustomWalls.js","chapter01/src/entities/Bot.js","_CORE/helpers/helper_GLTFcopy.js","assets/chapter01/monster-animate3.glb","assets/chapter01/monster-skin.jpg","_CORE/systems/SystemCheckerNearItem.js","chapter01/src/constants/constants_modules.js","chapter01/src/ui/Ui.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter01/src/systems/system_Level.js","chapter01/src/systems/system_Bots.js","chapter01/src/systems/system_CheckerDialogWithBot.js","chapter01/src/actions/AdderActions.js","chapter01/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","PI","Math","hPI","CURRENT_CHAPTER","MATERIALS_CONFIG","mat","props","color","emissive","map","bumpMap","bumpScale","envMap","reflectivity","specular","shininess","skinning","studioConfig","canId","rendererCon","antialias","amb","strength","clearColor","sceneEnvironment","fogNear","fogFar","backgroundImgKey","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","BOT","BOTS","name","rot","keyWallToWalkCollisions","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","createTranslater","vocab","word","t","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseDown","emit","onTouchStart","onMouseUp","onTouchEnd","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","VOC","LIBA","replicies","dialogs","currentBotKey","messages","arrM","ind","isDone","player","nps","arrR","phraseIndex","isButtonDialog","isCloseisButtonDialog","isShowPalleteDialog","DialogPallete","is","storeStartState","mechanic","event","idDoor","programmer","engineer","scientist","master","guard_Super_02","guard_01","scout","currentLanguage","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_camera","_composer","EffectComposer","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","_backgroundImgKey","cam","addPass","RenderPass","composerAddPass","ShaderPass","_changeFog","_changeBackground","startData","endData","TWEEN","to","onUpdate","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","Player","studio","isButtonsDisabled","_isBlocked","_isCanMove","_mainObj","position","fromArray","rotation","userData","bottomObj","frontObj","backObj","strenth","light","y","count","systemCollisionFloor","checkCollisions","isBlockedByItem","offset","point","systemCollisionItems","translateZ","dir","isOpen","setCamera","x","z","set","SystemCollisionWithItems","_arrMeshes","_vecStart","_vecDir","_rayCaster","mesh","itemKeyEmitCollision","isStopUnits","objFrom","objTo","d","getWorldPosition","sub","intersects","intersectObjects","distance","object","type2","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","timer","on","tween","prop","fromVal","toVal","time","timerStep","currentCount","step","iterateArrF","arrF","SystemDoors","_doors","traverse","child","includes","split","geometry","door","part","setItemToCollision","dist","_openDoor","pause","animateToOffsetAndReturn","ran","random","startRotate","angleRot","countRotation","startGo","numsMove","countMove","createBot","monsterModel","monsterMat","botData","group","scene","children","animations","mixer","m","objRay","material","walkAnimate","clipAction","actionAnimate","timeScale","play","freeWalk","meshFrontObj","wallOffset","arrWalls","collisions","actions","currentAction","toggleAction","update","componentFreeWalkWithCustomWalls","botsCustomWallsCollisions","boxCollisionWithPlayer","visible","isUpdate","delta","stay","playerPos","vec3","copy","lookAt","stop","walk","startUpdate","stopUpdate","SystemCheckerNearItem","_itemWorldPos","_mainCheckerWorldPos","_arr","mainMesh","inScene","distanceTo","GAME_MODULES","appWrapper","toggleBlocked","JSON","parse","stringify","isBotDone","createCustomStore","ui","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","max","min","fullscreenElement","emitFrameUpdate","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","wall","easyMaterial","levelSrc","levelCollisionSrc","wallTextureSrc","wrap","doorTextureSrc","bots","unit","gltf","clone","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","bot","botSrc","botMap","checkerNear","checkerNearBlock","setItemToCheck","keyBotNear","checkNear","isNear","isNearBot","botKey","showStartButton","pipeLineForInit"],"mappings":"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","file":"static/js/main.4946f638.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","const PI = Math.PI\r\nconst hPI = PI / 2\r\n\r\n\r\nexport const CURRENT_CHAPTER = 0\r\n\r\nexport const MATERIALS_CONFIG = {\r\n    'easyMaterial': {\r\n        mat: 'MeshBasicMaterial',\r\n        props: {},\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x000000,\r\n            map: 'wallTexture',\r\n            bumpMap: 'mapFloorOuter',    \r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'door': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x000000,\r\n            map: 'doorTexture',\r\n            bumpMap: 'doorTexture',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'bot': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: { \r\n            color: 0xa7b4b2,\r\n            map: 'monster-skin',\r\n            emissive: 0x191c38,\r\n            bumpMap: 'monster-skin',\r\n            bumpScale: 0.2,\r\n            shininess: 500,\r\n            specular: 0xffffff,\r\n            skinning: true,\r\n        }, \r\n    }\r\n}\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    amb: {\r\n        color: 0xccccff,\r\n        strength: 0.6,\r\n    },\r\n    clearColor: 0x0e2535,\r\n    sceneEnvironment: {\r\n        fogNear: 10,\r\n        fogFar: 80,\r\n        color: 0x0e2535, \r\n        backgroundImgKey: null, \r\n    },\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 5.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [48, 28, 10],\r\n    //startPos: [-200, 28, 10],\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0xccccff, \r\n        strength: 0.3,\r\n        pos: [0, 50, 0],\r\n    },\r\n}\r\n\r\nexport const BOT = {\r\n    offsetWallCollision: 5,\r\n}\r\n\r\nexport const BOTS = [\r\n    {\r\n        name: 'guard_01',\r\n        pos: [-53, 26.316999435, 27],\r\n        rot: 0,\r\n        keyWallToWalkCollisions: 'collision_bot_guardsmall',\r\n    },\r\n    {\r\n        name: 'guard_Super_02',\r\n        pos: [-39, 45.317001, -112],\r\n        rot: 0,\r\n        keyWallToWalkCollisions: 'collision_bot_guardsuper',\r\n    },\r\n    {\r\n        name: 'master',\r\n        pos: [-91, 26.316999435, 35],\r\n        rot: hPI - 1,\r\n        keyWallToWalkCollisions: 'collision_bot_lab',\r\n    },\r\n    {\r\n        name: 'scientist',\r\n        pos: [31, 64.3152008, -48],\r\n        rot: hPI,\r\n        keyWallToWalkCollisions: 'collision_bot_sciensist',\r\n    },\r\n    {\r\n        name: 'engineer',\r\n        pos: [-1, 25.31520, -69],\r\n        rot: PI,\r\n        keyWallToWalkCollisions: 'collision_bot_engeneer',\r\n    },\r\n    {\r\n        name: 'programmer',\r\n        pos: [25, 64.3152008, -4],\r\n        rot: 0,\r\n        keyWallToWalkCollisions: 'collision_bot_programmer', \r\n    },\r\n    {\r\n        name: 'mechanic',\r\n        pos: [11, 25.31520, -8],\r\n        rot: hPI,\r\n        keyWallToWalkCollisions: 'collision_bot_start', \r\n    },\r\n    {\r\n        name: 'scout',\r\n        pos: [-49, 26.316999435, 172],\r\n        rot: hPI,\r\n        keyWallToWalkCollisions: 'collision_bot_scout',\r\n    }\r\n]\r\n\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures')\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => getterLoader(type).load(path, resolve))\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","export const VOC = {\r\n    'ru': {\r\n        'I ...?': 'Я ...?', \r\n        'You ...?': 'Ты ...?', \r\n        'MM ...?': 'М ...?', \r\n        'You is new droid.': 'Ты новый дроид.',\r\n        'I am mechanic. I create your body.': 'Механик. Делаю корпусы дроидов.',\r\n        'Go. Door is unblocked.... Beeeb.': 'Иди, дверь разблокирована.... Бииб.',\r\n        'Once .... Beeeb.. I set basic program in your memory.': 'Секунду .... Бииб.. Программа в память загружена.',\r\n        'I am programmer.': 'Программирую дроидов.',\r\n        'Go. Once... Beeeb.. Door to laboratory unblocked.': 'Ты должен идти в отдел тестирования. Бииб.. Доступ разрешен.',\r\n        'Once .. Beeeb! I give name to you. Droid_Id: 17543-06767-6767': 'Секунду... Бииб. Тестирование прошло успешно.',\r\n        'I am engineer. I test new droids.': 'Тестестировщик, тестирую новых дроидов.',\r\n        'Go.': 'Иди на приемку.',\r\n        'Droid_Id: 17543-06767-6767, Hmm.., marriage. crap.': 'Секунду... Бииб. Халтура, брак ... Ладно ты теперь дроид_17543-06767-6767.',\r\n        'I am scientist. I check your abilities. ... garbage.': 'Приемщик. Проверяю качество сборки. ',\r\n        'Go to store. Doors unblocked.': 'Иди на склад. Доступ дан.',\r\n        'I don’t know anything, go to the boss. ... Beeeb. You have the accesses.': 'Ничего для тебя нет, иди в штаб... Бииб. Статус: модель укомлектована.',\r\n        'You want see Boss. He is absent.': 'Ищешь босса, его нет.',\r\n        'I am guard. I give you a secret mission.':  'Помошник. Я даю тебе секретную миссию.',\r\n        'You must see all around base, and return. Doors unblocked.': 'Ты должен сходить на разведку вокруг базы и доложить. Вперед.',\r\n        'Droid_Id: 17543-06767-6767 with secret mission. I know.': 'Ты дроид с важной секретной миссией.',\r\n        'I am gateman. Beeeb... Door is opened! Good bye!': 'Ответственный за внешний периметр. Бииб... Доступ к воротам дан.',\r\n        'It does not matter.': 'Это не имеет значения.',\r\n        'I am scout. Crazy factory create droids and close gates. You alone in this desert.': 'Дроид. Суммасшедшая фабрика клепает дроидов, дает секретиные миссии и закрывает ворота.',\r\n        'This is the end.': 'Это все. The end.',\r\n\r\n        'open': 'диалог',\r\n        'close': 'закрыть',\r\n    },\r\n}\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { VOC } from \"../constants/translate\";\r\nimport * as LIBA from '../../../_CORE/'\r\nconst t = LIBA.createTranslater(VOC)\r\n\r\n\r\nexport default connect(\r\n    state => { \r\n        return ({\r\n        replicies: state.dialogs.replicies,\r\n        currentBotKey: state.dialogs.currentBotKey, \r\n    }) }\r\n)(\r\n    function (props) {\r\n        const { messages } = props.replicies[props.currentBotKey]\r\n\r\n        const arrM = messages.map((item, ind)=> {\r\n            if (!item.isDone) return <div key={ind}></div>\r\n\r\n            return (\r\n                <div \r\n                    key={ind}\r\n                    className='marTop-small'>\r\n                    <p className='player'>{t(item.player)}</p>\r\n                    <p>{t(item.nps)}</p>\r\n                </div>)\r\n        })\r\n\r\n\r\n        const arrR = messages.map((item, ind)=> {\r\n            if (item.isDone) return <div key={ind}></div>\r\n\r\n            return (\r\n                <button\r\n                    key={ind}\r\n                    onClick={()=>props.dispatch({ type: 'CLICK_ON_PLAYER_PHRASE', currentBotKey: props.currentBotKey, phraseIndex: ind, })}>\r\n                    {t(item.player)}\r\n                </button>)\r\n        })\r\n\r\n\r\n        return (\r\n                <div className=\"messages-wrapper\">\r\n                    <div className=\"messages\">\r\n                        {arrM}\r\n                    </div>\r\n                    <div className=\"replicies\">\r\n                        {arrR}\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n)","import { connect } from 'react-redux'\r\nimport DialogPallete from \"./DialogPallete\"\r\nimport './stylesheets/CustomReactComponent.css'\r\nimport { VOC } from '../constants/translate'\r\nimport { createTranslater } from \"../../../_CORE/helpers/helper_translate\";\r\nconst t = createTranslater(VOC)\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        isButtonDialog: state.dialogs.isButtonDialog,\r\n        isCloseisButtonDialog: state.dialogs.isCloseisButtonDialog,\r\n        isShowPalleteDialog: state.dialogs.isShowPalleteDialog,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction CustomReactComponent(props) {\r\n    if (!(props.isButtonDialog || props.isShowPalleteDialog)) { \r\n      return <div></div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"dialog-wrapper\">\r\n          <div className=\"dialog-content\">           \r\n            {props.isShowPalleteDialog && <DialogPallete />}\r\n            {(props.isButtonDialog || props.isShowPalleteDialog) && \r\n                  <button \r\n                      className=\"dialog-button-toggle\" \r\n                      onClick={() => props.dispatch({ \r\n                                  type: 'SHOW_PALLETE_DIALOG', \r\n                                  is:  (props.isButtonDialog && true) || \r\n                                    (props.isShowPalleteDialog && false)\r\n                                })}            \r\n                      style={{ \"display\": props.display }}>\r\n                      {\r\n                        (props.isButtonDialog && t('open')) ||\r\n                        (props.isShowPalleteDialog && t('close'))\r\n                      }       \r\n                  </button>}\r\n           </div>     \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomReactComponent)\r\n","\r\n\r\nconst storeStartState = {\r\n    replicies: {\r\n        mechanic: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'You is new droid.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am mechanic. I create your body.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go. Door is unblocked.... Beeeb.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['factory'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        programmer: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Once .... Beeeb.. I set basic program in your memory.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am programmer.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go. Once... Beeeb.. Door to laboratory unblocked.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['fromLaboratory001'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        engineer: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Once .. Beeeb! I give name to you. Droid_Id: 17543-06767-6767',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am engineer. I test new droids.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go.',\r\n                isDone: false,\r\n            }]\r\n        },\r\n        scientist: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Droid_Id: 17543-06767-6767, Hmm.., marriage. crap.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am scientist. I check your abilities. ... garbage.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go to store. Doors unblocked.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['fromFactoryCorpus', 'toLab', 'toGarage'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        master: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'I don’t know anything, go to the boss. ... Beeeb. You have the accesses.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['toBoss'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        guard_Super_02: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'You want see Boss. He is absent.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am guard. I give you a secret mission.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'You must see all around base, and return. Doors unblocked.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['fromStore', 'fromSecurity', 'toArsenal',],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        guard_01: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Droid_Id: 17543-06767-6767 with secret mission. I know.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am gateman. Beeeb... Door is opened! Good bye!',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['toWorld',],\r\n                    }\r\n                }\r\n            },]\r\n        },\r\n        scout: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'It does not matter.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'blockDoor',\r\n                    data: {\r\n                        idDoor: ['toWorld',],\r\n                    }\r\n                }\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am scout. Crazy factory create droids and close gates. You alone in this desert.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'This is the end.',\r\n                isDone: false,\r\n            },]\r\n        },\r\n    },\r\n    isCloseisButtonDialog: false,\r\n    isButtonDialog: false,\r\n    isShowPalleteDialog: false,\r\n    currentBotKey: null,\r\n    currentLanguage: 'en',\r\n} \r\n\r\n\r\nexport const createCustomStore = root => {\r\n    \r\n    const dialogs = (store = storeStartState, action) => {\r\n        if (action.type === 'BUTTON_DIALOG_TOGGLE') {\r\n            const {  isButtonDialog, currentBotKey } = action\r\n            return {\r\n                ...store,\r\n                isButtonDialog,\r\n                currentBotKey,\r\n            }\r\n        }\r\n\r\n        if (action.type === 'SHOW_PALLETE_DIALOG') {\r\n            root.player.toggleBlocked(action.is)\r\n            return {\r\n                ...store,\r\n                isButtonDialog: !action.is,\r\n                isShowPalleteDialog: action.is,\r\n            }\r\n        }\r\n\r\n        if (action.type === 'CLICK_ON_PLAYER_PHRASE') {\r\n            const replicies = JSON.parse(JSON.stringify(store.replicies))\r\n            replicies[action.currentBotKey].messages[action.phraseIndex].isDone = true\r\n\r\n            /** emit event */\r\n            if (replicies[action.currentBotKey].messages[action.phraseIndex].event) {\r\n                const { type, data } = replicies[action.currentBotKey].messages[action.phraseIndex].event\r\n                root.emitter.emit(type)(data) \r\n            }\r\n\r\n            let isBotDone = true\r\n            for (let i = 0; i < replicies[action.currentBotKey].messages.length; ++i) {\r\n                replicies[action.currentBotKey].messages[i].isDone === false && (isBotDone = false)\r\n            }\r\n            replicies[action.currentBotKey].isDone = isBotDone\r\n            \r\n            return ({\r\n                ...store,\r\n                replicies,\r\n                isCloseisButtonDialog: isBotDone,\r\n            })\r\n        }\r\n\r\n        return store\r\n    }\r\n\r\n\r\n    return { \r\n        dialogs \r\n    }\r\n}\r\n\r\n\r\n\r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._camera = null\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        //this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n\r\n\r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._camera) {\r\n                this._camera.aspect = size.width/size.height\r\n                this._camera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        const drawFrame = () => this._camera && this._composer.render(this._scene, this._camera)\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n\r\n\r\n\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    \r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._camera = cam\r\n        this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n        \r\n        if (!this._root.CONSTANTS.studioConfig.composerAddPass) return; \r\n        \r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n            this._composer.addPass(new ShaderPass(Saturate))\r\n        }  \r\n    }\r\n\r\n    changeEnvironment (sceneEnvironment) {\r\n        this._changeFog(sceneEnvironment)\r\n        this._changeBackground(sceneEnvironment)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    this._lightA.color = startData.color\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        this._root = root\r\n\r\n        const { emitter, studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n            speed,\r\n            offsetFromFloor,\r\n            offsetFromFloorFactor,\r\n            offsetWallCollision,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        let keys = {}\r\n        let isButtonsDisabled = false\r\n        this._isBlocked = true\r\n        this._isCanMove = {\r\n            'up': true,\r\n            'down': true,\r\n        }\r\n\r\n        this._mainObj = new THREE.Object3D()\r\n        this._mainObj.position.fromArray(startPos)\r\n        this._mainObj.rotation.fromArray(startRot)\r\n        this._mainObj.userData.type = 'player'\r\n\r\n        const bottomObj = new THREE.Object3D() \r\n        bottomObj.position.fromArray([0, -.05, 0])\r\n        this._mainObj.add(bottomObj)\r\n\r\n        const frontObj = new THREE.Object3D()\r\n        frontObj.position.fromArray(frontObjPos)\r\n        this._mainObj.add(frontObj)\r\n        this.frontObj = frontObj\r\n\r\n        const backObj = new THREE.Object3D()\r\n        backObj.position.fromArray(backObjPos)\r\n        this._mainObj.add(backObj)\r\n        this.backObj = backObj\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray(pos)\r\n            this._mainObj.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this._mainObj.add(light)\r\n        }\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && (this._mainObj.rotation.y += (speedRot * data.count))\r\n            keys['right'] && (this._mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n            if (this._isBlocked) return;\r\n\r\n            /** check bottom floors */\r\n            if (this._root.systemCollisionFloor) {\r\n                const [\r\n                    isBlockedByItem, \r\n                    offset,\r\n                    point, \r\n                ] = this._root.systemCollisionFloor.checkCollisions(this._mainObj, bottomObj, offsetFromFloor)\r\n                \r\n                if (!isBlockedByItem) {\r\n                    this._mainObj.position.y += speedDown\r\n                } else {\r\n                    if (offset < (offsetFromFloor - offsetFromFloorFactor))  {\r\n                        this._mainObj.position.y = point.y + offsetFromFloor\r\n                    }                        \r\n                }\r\n            }\r\n\r\n\r\n            if (!keys) return;\r\n\r\n            if (keys['up']) {\r\n                if (!this._isCanMove['up']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, frontObj, offsetWallCollision)\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'up' })\r\n            }\r\n\r\n            if (keys['down']) {\r\n                if (!this._isCanMove['down']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, backObj, offsetWallCollision)\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'down' })\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this._mainObj)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this._mainObj\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this._mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCollisionWithItems {\r\n    constructor(root) {\r\n        this._root = root\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision ({\r\n        mesh,\r\n        itemKeyEmitCollision = null,\r\n        isStopUnits = true\r\n    }) {\r\n        mesh.userData.itemKeyEmitCollision = itemKeyEmitCollision\r\n        mesh.userData.isStopUnits = isStopUnits\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, d) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0]) {\r\n            if (intersects[0].distance < d) {\r\n                if (intersects[0].object.userData.itemKeyEmitCollision) {\r\n                    this._root.emitter.emit('collision')({ \r\n                        ...intersects[0].object.userData.itemKeyEmitCollision, \r\n                        type2: objFrom.userData.type \r\n                    })\r\n                }\r\n\r\n                if (intersects[0].object.userData.isStopUnits) {\r\n                    return [ true, intersects[0].distance, intersects[0].point ]\r\n                }\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","export default __webpack_public_path__ + \"static/media/level_01.bcfccfd8.obj\";","export default __webpack_public_path__ + \"static/media/wall.ccfc1f44.jpg\";","export default __webpack_public_path__ + \"static/media/level-ray.2b82bfff.obj\";","/**\r\n * Functions call callback after execution\r\n */\r\n\r\n\r\nexport const timer = (t, on) => setTimeout(on, t)\r\nexport const tween = (prop, key, fromVal, toVal, time, callback) => {\r\n    const timerStep = 16.666\r\n    const count = time / timerStep\r\n    const speed = (toVal - fromVal) / count\r\n\r\n    let currentCount = 0\r\n\r\n    const step = () => {\r\n        ++currentCount\r\n\r\n        if (currentCount > count) {\r\n            prop[key] = toVal\r\n            return void callback()\r\n        }\r\n\r\n        prop[key] += speed\r\n        setTimeout(step, timerStep)\r\n    }\r\n    step()\r\n}","/**\r\n * Function 'start' get arr of arr with func and its arguments\r\n * arr = [\r\n *   [func, [arg1, arg2, ...]], \r\n *   [func, [arg1, arg2, ...]], \r\n *    ...\r\n * ]\r\n * And execute as pipline one after anoter. \r\n * All functions must call its callbacks \r\n */\r\n\r\n\r\nexport const start = arr => iterateArrF(arr.map(data => on => () => data[0](...data[1], on)))\r\n\r\nconst iterateArrF = arrF => {\r\n    const iterate = i => arrF[i] && arrF[i](() => iterate(++i))()\r\n    iterate(0)\r\n}","import * as THREE from \"three\"\r\nimport { animateToOffsetAndReturn } from '../../../_CORE/components/componentTweenProp'\r\n\r\nconst OFFSET_PLAYER_FROM_DOOR = 7\r\n\r\nexport class SystemDoors {\r\n    constructor (root) {\r\n        const {\r\n            assets,\r\n            materials,\r\n            studio,\r\n            emitter,\r\n            systemCollisionItems,\r\n        } = root\r\n\r\n        this._doors = {}\r\n\r\n        assets['level-rooms'].traverse(child => {\r\n            if (child.name.includes(\"doormesh_\")) {\r\n                const key = child.name.split('_')[1]\r\n                !this._doors[key] && (this._doors[key] = {})\r\n                this._doors[key]['mesh'] = new THREE.Mesh(child.geometry, materials.door)\r\n                this._doors[key]['state'] = 'closed'\r\n                this._doors[key]['access'] = 'denied' //'confirm' // ||'denied' || 'confirm'\r\n                this._doors[key]['mesh']['userData'] = {\r\n                    part: 'mesh',\r\n                    type: 'door',\r\n                    id: key,\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        for (let key in this._doors) {\r\n            studio.addToScene(this._doors[key]['mesh'])\r\n            systemCollisionItems && systemCollisionItems.setItemToCollision({\r\n                mesh: this._doors[key]['mesh'],\r\n                dist: OFFSET_PLAYER_FROM_DOOR,\r\n                itemKeyEmitCollision: { key, type: 'door' },\r\n                isStopUnits: true\r\n            })\r\n        }\r\n\r\n\r\n        emitter.subscribe('collision')(data => {\r\n            data.type === 'door' \r\n                && data.type2 \r\n                    && data.type2 === 'player'\r\n                        && this._doors[data.key]['access'] === 'confirm'\r\n                            && this._doors[data.key].state === 'closed'\r\n                                && this._openDoor(data.key)\r\n            }\r\n        )\r\n\r\n        emitter.subscribe('unblockDoor')(data => { \r\n            for (let i = 0; i < data.idDoor.length; i++) {\r\n                this._doors[data.idDoor[i]]['access'] = 'confirm'\r\n            } \r\n        }) \r\n\r\n\r\n        emitter.subscribe('blockDoor')(data => { \r\n            for (let i = 0; i < data.idDoor.length; i++) {\r\n                this._doors[data.idDoor[i]]['access'] = 'denied'\r\n            } \r\n        }) \r\n    }\r\n\r\n\r\n\r\n    _openDoor (key) {\r\n        this._doors[key].state = 'opened'\r\n\r\n        const data = {\r\n            prop: this._doors[key]['mesh'].position,\r\n            key: 'y',\r\n            fromVal: this._doors[key]['mesh'].position.y,\r\n            offset: 15,\r\n            time: 500,\r\n            pause: 2000,\r\n        }\r\n        animateToOffsetAndReturn(data, () => this._doors[key].state = 'closed')\r\n    }\r\n}","/** \r\n * Small scenarious to change one prop of object \r\n */\r\n\r\n \r\nimport { timer, tween } from \"./funcs/transformProp\";\r\nimport { start } from \"../utils/iterate\";\r\n\r\n\r\nexport function animateToOffsetAndReturn (\r\n    { prop, key, fromVal, offset, time = 1000, pause = 2000 },\r\n    onAllComplete = () => {},\r\n) {\r\n    const\r\n        animateToOffset = [tween, [prop, key, fromVal, fromVal + offset, time]], \r\n        wait = [timer, [pause]],\r\n        animateFromOffsetToStart = [tween, [prop, key, fromVal + offset, fromVal, time]],\r\n        onComplete = [onAllComplete, []]\r\n\r\n    start([\r\n        animateToOffset, \r\n        wait, \r\n        animateFromOffsetToStart, \r\n        onComplete,\r\n    ])\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/door.edd859db.jpg\";","import { SystemCollisionWithItems } from '../systems/SystemCollisionsItems'\r\n\r\nexport function componentFreeWalkWithCustomWalls (mesh, meshFrontObj, wallOffset, arrWalls, root) {\r\n\r\n\r\n    const collisions = new SystemCollisionWithItems(root)\r\n    for (let i = 0; i < arrWalls.length; ++i) {\r\n        collisions.setItemToCollision({ mesh: arrWalls[i] })\r\n    }\r\n\r\n\r\n\r\n    const actions = {\r\n        'rotate': startRotate,\r\n        'go': startGo,\r\n    }\r\n\r\n\r\n\r\n    let state = 'rotate' // || 'go'\r\n    let currentAction = null\r\n\r\n    \r\n    const toggleAction = key => {\r\n        if (!key) {\r\n            state === 'rotate' && (key = 'go')\r\n            state === 'go' && (key = 'rotate')\r\n        }\r\n\r\n        state = key\r\n        currentAction = actions[key](mesh)      \r\n    }\r\n\r\n\r\n    toggleAction(state)\r\n\r\n\r\n    return {\r\n        update: () => {\r\n            if (state === 'go') {    \r\n                const [ isBlockedByItem ] = collisions.checkCollisions(mesh, meshFrontObj, wallOffset)\r\n\r\n                isBlockedByItem && toggleAction('rotate')\r\n            }\r\n\r\n            !currentAction() && toggleAction()       \r\n        }, \r\n    }\r\n}\r\n\r\n\r\n\r\nconst ran = Math.random\r\n\r\nconst startRotate = mesh => {\r\n    const angleRot = (ran() * Math.PI * 1.5 + 1) * ran() < 0.5 ? 1 : -1\r\n    const numRotations = 40\r\n    const speed = angleRot / numRotations\r\n\r\n    let countRotation = 0\r\n\r\n    return () => {\r\n        mesh.rotation.y += speed\r\n        return ++countRotation < numRotations  \r\n    }\r\n}\r\n\r\n\r\n\r\nconst startGo = mesh => {\r\n    const numsMove = ran() * 300\r\n\r\n    let countMove = 0 \r\n\r\n    return () => {\r\n        mesh.translateZ(0.11)\r\n        return ++countMove < numsMove\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\nimport { componentFreeWalkWithCustomWalls } from \"../../../_CORE/components/componentFreeWalKWithCustomWalls\";\r\n\r\nexport function createBot (monsterModel, monsterMat, botData, root) {\r\n    const {\r\n        offsetWallCollision,\r\n    } = root.CONSTANTS.BOT\r\n\r\n\r\n    const group = new THREE.Group()\r\n\r\n    const obj = monsterModel.scene.children[1]\r\n    obj.position.set(0, -8, 0)\r\n    const m = obj.children[1] \r\n\r\n\r\n    const objRay = new THREE.Object3D()\r\n    objRay.position.set(0, 0, 1)\r\n    group.add(objRay)\r\n\r\n\r\n    m.material = monsterMat \r\n    group.add(obj)\r\n    let animations, mixer\r\n\r\n\r\n    animations = monsterModel.animations\r\n    mixer = new THREE.AnimationMixer(m)\r\n    const walkAnimate = mixer.clipAction(animations[ 2 ])\r\n    const actionAnimate = mixer.clipAction(animations[ 0 ])\r\n    mixer.timeScale = 0.7 \r\n    walkAnimate.play()\r\n\r\n\r\n    let state = 'walk' // || 'stay' || 'walk' \r\n    let isUpdate = false\r\n\r\n    let freeWalk = null\r\n    if (botData.keyWallToWalkCollisions) {\r\n        freeWalk = componentFreeWalkWithCustomWalls(\r\n            group, \r\n            objRay, \r\n            offsetWallCollision,\r\n            [root.botsCustomWallsCollisions[botData.keyWallToWalkCollisions]], \r\n            root,\r\n        )   \r\n    }\r\n\r\n    const boxCollisionWithPlayer = new THREE.Mesh(\r\n        new THREE.BoxGeometry(6, 6, 6),\r\n        new THREE.MeshBasicMaterial()\r\n    )\r\n    boxCollisionWithPlayer.position.y = -5\r\n    boxCollisionWithPlayer.visible = false\r\n    group.add(boxCollisionWithPlayer)\r\n    root.systemCollisionItems.setItemToCollision({ mesh: boxCollisionWithPlayer })\r\n\r\n\r\n\r\n    return ({ \r\n        mesh: group,\r\n        isUpdate,\r\n        update (data) {\r\n            if (state === 'walk') { \r\n                freeWalk && freeWalk.update(data)\r\n            }\r\n            mixer.update(data.delta)\r\n        },\r\n        stay (playerPos) { \r\n            if (state === 'stay') return;\r\n            state = 'stay'\r\n\r\n            const vec3 = new THREE.Vector3()\r\n            vec3.copy(playerPos)\r\n            vec3.y = group.position.y\r\n            group.lookAt(vec3)\r\n\r\n            walkAnimate.stop()\r\n            actionAnimate.play()\r\n            mixer.timeScale = 0.3 \r\n        },\r\n        walk () { \r\n            if (state === 'walk') return; \r\n            state = 'walk'\r\n            actionAnimate.stop()\r\n            walkAnimate.play()\r\n            mixer.timeScale = 0.7\r\n        },\r\n        startUpdate () {\r\n            if (this.isUpdate) return;\r\n            this.isUpdate = true\r\n            walkAnimate.play()\r\n            mixer.timeScale = 0.7 \r\n        },\r\n        stopUpdate () {\r\n            if (!this.isUpdate) return;\r\n            this.isUpdate = false\r\n            walkAnimate.stop()\r\n            actionAnimate.play()\r\n            actionAnimate.stop()\r\n        },\r\n    })\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","export default __webpack_public_path__ + \"static/media/monster-animate3.f32b90f6.glb\";","export default __webpack_public_path__ + \"static/media/monster-skin.64f3a049.jpg\";","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCheckerNearItem {\r\n    constructor() {\r\n        this._itemWorldPos = new THREE.Vector3()\r\n        this._mainCheckerWorldPos = new THREE.Vector3()\r\n\r\n        this._arr = []\r\n    }\r\n\r\n\r\n    setItemToCheck (mesh) {\r\n        this._arr.push(mesh)\r\n    }\r\n\r\n    checkNear (mainMesh, dist) {\r\n        mainMesh.getWorldPosition(this._mainCheckerWorldPos)\r\n\r\n        for (let i = 0; i < this._arr.length; ++i) {\r\n            if (!this._arr[i].userData.inScene) continue;\r\n\r\n            this._arr[i].getWorldPosition(this._itemWorldPos)\r\n            const distance = this._itemWorldPos.distanceTo(this._mainCheckerWorldPos)\r\n            if (distance < dist) {\r\n                return [true, this._arr[i].userData]\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}\r\n\r\n","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { CustomUi } from '../ui/Ui'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer'\r\nimport { SystemCollisionWithItems } from '../../../_CORE/systems/SystemCollisionsItems'\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { SystemLevel } from '../systems/system_Level'\r\nimport levelSrc from '../../../assets/chapter01/level_01.obj'\r\nimport wallTextureSrc from '../../../assets/chapter01/wall.jpg' \r\nimport levelCollisionSrc from '../../../assets/chapter01/level-ray.obj'\r\n\r\n\r\nimport { SystemDoors } from '../systems/system_Doors'\r\nimport doorTextureSrc from '../../../assets/chapter01/door.jpg'\r\n\r\n\r\nimport { SystemBots } from \"../systems/system_Bots\"\r\nimport botSrc from '../../../assets/chapter01/monster-animate3.glb'\r\nimport botMap from \"../../../assets/chapter01/monster-skin.jpg\";\r\nimport { CheckerDialogWithBot } from \"../systems/system_CheckerDialogWithBot\";\r\n\r\n\r\nimport { AdderActions } from \"../actions/AdderActions\"\r\n\r\n\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'customUi',\r\n        constr: CustomUi,\r\n        initStateKey: 'pageLoaded',  \r\n    },\r\n    {\r\n         key: 'deviceResizer',\r\n         constr: DeviceResizer,\r\n         initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    // /////////////////////////////////////////\r\n\r\n    {\r\n         key: 'frameUpdater',\r\n         constr: FrameUpdater,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'tweenUpdater',\r\n         constr: Helper_TweenUpdater,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'studio',\r\n         constr: Studio,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'keyBoard',\r\n         constr: KeyBoard,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'player',\r\n         constr: Player,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionItems',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionFloor',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'materialsLib',\r\n         constr: Helper_MaterialsLib,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: SystemLevel,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelSrc, key: 'level-rooms' },\r\n            { type: 'obj', path: levelCollisionSrc, key: 'levelCollisions' },\r\n            { type: 'img', path: wallTextureSrc, key: 'wallTexture', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'doors',\r\n        constr: SystemDoors,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'img', path: doorTextureSrc, key: 'doorTexture', wrap: false }, \r\n        ] \r\n    },\r\n    {\r\n        key: 'bots',\r\n        constr: SystemBots ,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'glb', path: botSrc, key: 'bot' },\r\n            { type: 'img', path: botMap, key: 'monster-skin' },\r\n        ]\r\n    },\r\n    {\r\n        key: 'playerNearBot',\r\n        constr: CheckerDialogWithBot,\r\n        initStateKey: 'beforeStartPlay',   \r\n    },\r\n    {\r\n        key: 'adderActions',\r\n        constr: AdderActions,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]\r\n\r\n","import { UI } from '../../../_CORE/ui/UI'\r\nimport CustomReactComponent from \"./CustomReactComponent\";\r\nimport { createCustomStore  } from \"./createStore\";\r\n\r\nexport class CustomUi {\r\n    constructor(root) {\r\n\r\n        root.appWrapper = document.querySelector('.app-wrapper')\r\n        root.CustomReactComponent = CustomReactComponent\r\n        root.customStore = createCustomStore(root)\r\n\r\n        root.ui = new UI(root)\r\n    } \r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from \"three\";\r\n\r\nexport class SystemLevel {\r\n    constructor (root) {\r\n        const { \r\n            assets, \r\n            materials, \r\n            studio, \r\n            systemCollisionItems,\r\n            systemCollisionFloor,\r\n        } = root\r\n\r\n        const {\r\n            offsetFromFloor,\r\n        } = root.CONSTANTS.playerConfig\r\n\r\n\r\n        const botsCustomWallsCollisions = {}\r\n\r\n        assets['level-rooms'].traverse(child => {\r\n            child.name.includes(\"room_\") \r\n                && studio.addToScene(new THREE.Mesh(child.geometry, materials.wall))\r\n                \r\n                \r\n            if (child.name.includes(\"collision_bot\")) {\r\n                botsCustomWallsCollisions[child.name] = child \r\n            }    \r\n        })\r\n\r\n        root.botsCustomWallsCollisions = botsCustomWallsCollisions\r\n\r\n\r\n\r\n        assets['levelCollisions'].traverse(child => {\r\n            child.name === \"wall_collision\" \r\n                && systemCollisionItems\r\n                    && systemCollisionItems.setItemToCollision({\r\n                            mesh: new THREE.Mesh(child.geometry, materials.easyMaterial),\r\n                            dist: 5,\r\n                            isStopUnits: true\r\n                        })\r\n            child.name === \"floor_collision\" \r\n                && systemCollisionFloor     \r\n                    && systemCollisionFloor.setItemToCollision({ \r\n                        mesh: new THREE.Mesh(child.geometry, materials.easyMaterial), \r\n                        dist: offsetFromFloor,\r\n                        isStopUnits: true,\r\n                    })\r\n        })\r\n    }\r\n}","import { createBot } from '../entities/Bot'\r\nimport { GLTFCopy } from '../../../_CORE/helpers/helper_GLTFcopy' \r\n\r\n\r\nexport class SystemBots {\r\n    constructor (root) {\r\n        const { \r\n            assets, \r\n            materials, \r\n            studio, \r\n            emitter,\r\n        } = root\r\n    \r\n        this.bots = {}\r\n\r\n        root.CONSTANTS.BOTS.forEach(item => {\r\n            const unit = createBot(\r\n                GLTFCopy(assets.bot), \r\n                materials.bot, \r\n                item,\r\n                root,\r\n            )\r\n            unit.mesh.position.set(item.pos[0], item.pos[1], item.pos[2])\r\n            unit.mesh.rotation.y = item.rot\r\n            unit.name = item.name\r\n            studio.addToScene(unit.mesh)\r\n            unit.mesh.userData.inScene = true\r\n            unit.mesh.userData.key = item.name\r\n            this.bots[item.name] = unit\r\n        })\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(data => {\r\n            for (let key in this.bots) {\r\n                this.bots[key].update(data)\r\n            }\r\n        })\r\n    }\r\n}","import { SystemCheckerNearItem } from \"../../../_CORE/systems/SystemCheckerNearItem\";\r\n\r\n\r\nexport class CheckerDialogWithBot {\r\n    constructor(root) {\r\n        const { player, bots, emitter } = root\r\n\r\n        const checkerNear = new SystemCheckerNearItem()\r\n        const checkerNearBlock = new SystemCheckerNearItem()\r\n        for (let key in bots.bots) {\r\n            checkerNear.setItemToCheck(bots.bots[key].mesh)\r\n            checkerNearBlock.setItemToCheck(bots.bots[key].mesh)\r\n        }\r\n\r\n\r\n        const mesh = {\r\n            'up': player.frontObj,\r\n            'down': player.backObj,\r\n        }\r\n\r\n        let keyBotNear = null\r\n\r\n        emitter.subscribe('playerMove')(({ dir }) => {\r\n            /** check dialog */\r\n            {\r\n                const [ isNear, data ] = checkerNear.checkNear(mesh[dir], 20)\r\n\r\n                if (!isNear) {\r\n                    if (keyBotNear) {\r\n                        bots.bots[keyBotNear].walk(player._mainObj.position)\r\n                        keyBotNear = null\r\n                        emitter.emit('nearBot')({ isNearBot: false, botKey: keyBotNear })\r\n                    }\r\n                } else {\r\n                    if (!keyBotNear) {\r\n                        keyBotNear = data.key\r\n                        bots.bots[keyBotNear].stay(player._mainObj.position)\r\n                        emitter.emit('nearBot')({ isNearBot: true, botKey: keyBotNear })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","\r\n\r\nexport class AdderActions {\r\n    constructor (_root) {\r\n        const { player, ui, dispatcher, emitter } = _root\r\n\r\n        dispatcher.dispatch({ type: 'CHANGE_INFO_CHAPTER', currentChapterIndex: 0 })\r\n        ui.showStartButton(() => player.toggleBlocked(false))\r\n\r\n        emitter.subscribe('nearBot')(({ isNearBot, botKey }) => {\r\n            dispatcher.dispatch({ type: 'BUTTON_DIALOG_TOGGLE', isButtonDialog: isNearBot, currentBotKey: botKey })\r\n        })\r\n    }\r\n}\r\n","import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\n\r\n\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, CONSTANTS))\r\n"],"sourceRoot":""}