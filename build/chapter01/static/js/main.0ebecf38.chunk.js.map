{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","chapter01/src/constants/constants_elements.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/helpers/helper_translate.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","chapter01/src/constants/translate.js","chapter01/src/ui/DialogPallete.js","chapter01/src/ui/CustomReactComponent.js","chapter01/src/ui/createStore.js","_CORE/shaders/saturate.js","_CORE/shaders/saturate2.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer.js","_CORE/systems/SystemCollisionsItems.js","_CORE/helpers/helper_MaterialsLib.js","assets/chapter01/level_01.obj","assets/chapter01/wall.jpg","assets/chapter01/level-ray.obj","_CORE/components/funcs/transformProp.js","_CORE/utils/iterate.js","chapter01/src/systems/system_Doors.js","_CORE/components/componentTweenProp.js","assets/chapter01/door.jpg","chapter01/src/entities/Bot.js","assets/chapter01/monster-animate3.glb","assets/chapter01/monster-skin.jpg","_CORE/systems/SystemCheckerNearItem.js","chapter01/src/constants/constants_modules.js","chapter01/src/ui/Ui.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter01/src/systems/system_Level.js","chapter01/src/systems/system_Bots.js","_CORE/helpers/helper_GLTFcopy.js","chapter01/src/systems/system_CheckerDialogWithBot.js","chapter01/src/actions/AdderActions.js","chapter01/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","PI","Math","hPI","CURRENT_CHAPTER","MATERIALS_CONFIG","mat","props","color","emissive","map","bumpMap","bumpScale","envMap","reflectivity","specular","shininess","skinning","END_ENV","fogNear","fogFar","backgroundImgKey","studioConfig","canId","rendererCon","antialias","amb","strength","clearColor","sceneEnvironment","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","BOT","BOTS","name","rot","keyWallToWalkCollisions","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","soundLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","createTranslater","vocab","word","t","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","isShowControlSound","isMute","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseUp","emit","is","onTouchEnd","onMouseDown","onTouchStart","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","VOC","LIBA","replicies","dialogs","currentBotKey","messages","arrM","ind","isDone","player","nps","arrR","phraseIndex","isButtonDialog","isCloseisButtonDialog","isShowPalleteDialog","isShowFinalMessage","DialogPallete","location","replace","storeStartState","mechanic","event","idDoor","programmer","engineer","scientist","master","guard_Super_02","guard_01","scout","currentLanguage","Saturate","uniforms","value","vertexShader","fragmentShader","Saturate2","Studio","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_playerCamera","_controlsCamera","position","set","OrbitControls","domElement","update","_composer","EffectComposer","_renderPass","RenderPass","addPass","composerAddPass","ShaderPass","vec3","isPlayerView","saveFogData","camera","getWorldPosition","x","y","z","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","removeFromScene","remove","_backgroundImgKey","cam","conf","_changeFog","_changeBackground","startData","endData","TWEEN","to","time","onUpdate","updateAmb","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","Player","studio","_camera","isButtonsDisabled","_isBlocked","_isCanMove","_mainObj","fromArray","rotation","userData","bottomObj","frontObj","backObj","strenth","dist","decay","light","count","systemCollisionFloor","checkCollisions","isBlockedByItem","offset","translateY","systemCollisionItems","translateZ","dir","isOpen","setCamera","SystemCollisionWithItems","_arrMeshes","_vecStart","_vecDir","_rayCaster","mesh","itemKeyEmitCollision","isStopUnits","objFrom","objTo","d","sub","intersects","intersectObjects","distance","object","type2","point","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","timer","on","tween","prop","fromVal","toVal","timerStep","currentCount","step","iterateArrF","arrF","SystemDoors","_doors","traverse","child","includes","split","geometry","door","part","setItemToCollision","_openDoor","pause","animateToOffsetAndReturn","ran","random","createAnimations","monsterModel","animations","mixer","scene","children","dialog","clipAction","timeScale","walk","play","actions","currentAction","stopAllAction","startRotate","angleRot","countRotation","startGo","numsMove","min","countMove","createFreeWalk","meshFrontObj","wallOffset","isUpdate","collisions","createCollisionWithItems","toggleAction","max","stop","removeItemFromCollision","clearCollisions","arrMeshes","vecStart","vecDir","rayCaster","SystemCheckerNearItem","_itemWorldPos","_mainCheckerWorldPos","_arr","mainMesh","inScene","distanceTo","GAME_MODULES","appWrapper","toggleBlocked","JSON","parse","stringify","changeEnvironment","isBotDone","createCustomStore","ui","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","fullscreenElement","emitFrameUpdate","delta","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","botsCustomWallsCollisions","wall","easyMaterial","levelSrc","levelCollisionSrc","wallTextureSrc","wrap","doorTextureSrc","bots","unit","monsterMat","botData","group","material","objRay","freeWalk","boxCollisionWithPlayer","visible","stay","playerPos","copy","lookAt","startUpdate","stopUpdate","createBot","gltf","clone","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","bot","botSrc","botMap","checkerNear","checkerNearBlock","setItemToCheck","keyBotNear","checkNear","isNear","isNearBot","botKey","showStartButton","pipeLineForInit"],"mappings":"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","file":"static/js/main.0ebecf38.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","const PI = Math.PI\r\nconst hPI = PI / 2\r\n\r\n\r\nexport const CURRENT_CHAPTER = 0\r\n\r\nexport const MATERIALS_CONFIG = {\r\n    'easyMaterial': {\r\n        mat: 'MeshBasicMaterial',\r\n        props: {},\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x000000,\r\n            map: 'wallTexture',\r\n            bumpMap: 'mapFloorOuter',    \r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'door': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x000000,\r\n            map: 'doorTexture',\r\n            bumpMap: 'doorTexture',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'bot': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: { \r\n            color: 0xa7b4b2,\r\n            map: 'monster-skin',\r\n            emissive: 0x191c38,\r\n            bumpMap: 'monster-skin',\r\n            bumpScale: 0.2,\r\n            shininess: 500,\r\n            specular: 0xffffff,\r\n            skinning: true,\r\n        }, \r\n    }\r\n}\r\n\r\n\r\nexport const END_ENV = { fogNear: -10, fogFar: 0, color: 0x0e2535, backgroundImgKey: null }\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true,\r\n    },\r\n    amb: {\r\n        color: 0xccccff,\r\n        strength: 0.6,\r\n    },\r\n    clearColor: 0x0e2535,\r\n    sceneEnvironment: {\r\n        fogNear: 10,\r\n        fogFar: 80,\r\n        color: 0x0e2535, \r\n        backgroundImgKey: null, \r\n    },\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.6,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 5.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    //startPos: [-42.580326256838035, 22.917001342773393, 143.03375162223674 ],\r\n    startPos: [48, 28, 10],\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0xccccff, \r\n        strength: 0.3,\r\n        pos: [0, 50, 0],\r\n    },\r\n}\r\n\r\nexport const BOT = {\r\n    offsetWallCollision: 5,\r\n}\r\n\r\nexport const BOTS = [\r\n    {\r\n        name: 'guard_01',\r\n        pos: [-53, 26.316999435, 27],\r\n        rot: 0,\r\n        keyWallToWalkCollisions: 'collision_bot_guardsmall',\r\n    },\r\n    {\r\n        name: 'guard_Super_02',\r\n        pos: [-39, 45.317001, -112],\r\n        rot: 0,\r\n        keyWallToWalkCollisions: 'collision_bot_guardsuper',\r\n    },\r\n    {\r\n        name: 'master',\r\n        pos: [-91, 26.316999435, 35],\r\n        rot: hPI - 1,\r\n        keyWallToWalkCollisions: 'collision_bot_lab',\r\n    },\r\n    {\r\n        name: 'scientist',\r\n        pos: [31, 64.3152008, -48],\r\n        rot: hPI,\r\n        keyWallToWalkCollisions: 'collision_bot_sciensist',\r\n    },\r\n    {\r\n        name: 'engineer',\r\n        pos: [-1, 25.31520, -69],\r\n        rot: PI,\r\n        keyWallToWalkCollisions: 'collision_bot_engeneer',\r\n    },\r\n    {\r\n        name: 'programmer',\r\n        pos: [25, 64.3152008, -4],\r\n        rot: 0,\r\n        keyWallToWalkCollisions: 'collision_bot_programmer', \r\n    },\r\n    {\r\n        name: 'mechanic',\r\n        pos: [11, 25.31520, -8],\r\n        rot: hPI,\r\n        keyWallToWalkCollisions: 'collision_bot_start', \r\n    },\r\n    {\r\n        name: 'scout',\r\n        pos: [-49, 26.316999435, 172],\r\n        rot: hPI,\r\n        keyWallToWalkCollisions: 'collision_bot_scout',\r\n    }\r\n]\r\n\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null,\r\n        soundLoader = null\r\n\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures') {\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n        }\r\n        if (type === 'soundMp3') {\r\n            return soundLoader = (soundLoader || new THREE.AudioLoader())\r\n        }\r\n\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => {\r\n        getterLoader(type).load(path, resolve)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control-small butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'Endways': 'Напрямик',\r\n        'Machine': 'Машина',\r\n        'Rooms': 'Комнаты',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n            isShowControlSound: state.controls.isShowControlSound,\r\n            isMute: state.controls.isMute,\r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n            {props.isShowControls && props.isShowControlSound && <button\r\n                className={`${props.isMute ? 'butt-sound-n' : 'butt-sound' } control-small`}\r\n                onMouseUp={() => { \r\n                    props.gameContext.emitter.emit('toggleSound')(!props.isMute) \r\n                    props.dispatch({ type: 'TOGGLE_MUTE', is: !props.isMute })\r\n                }}\r\n                onTouchEnd={() => { \r\n                    props.gameContext.emitter.emit('toggleSound')(!props.isMute) \r\n                    props.dispatch({ type: 'TOGGLE_MUTE', is: !props.isMute })\r\n                }}\r\n            >\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control-small\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control-small\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isShowControlSound: false,\r\n    isMute: false, \r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            // { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            // { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            // { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            // { text: 'Endways', href: 'http://js.otrisovano.ru/endways/' },\r\n\r\n            { text: 'Factory', href: './../chapter01' },\r\n            { text: 'Brige', href: './../chapter02' },\r\n            { text: 'Cube', href: './../chapter03' },\r\n            { text: 'Endways', href: './../chapter04' },\r\n            { text: 'Machine', href: './../chapter05' },\r\n            { text: 'Rooms', href: './../chapter06' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        if (action.type === \"TOGGLE_CONTROLS\") {\r\n            return ({\r\n                ...state,\r\n                isShowControls: action.is,\r\n            })\r\n        }\r\n        if (action.type === 'ENABLE_CONTROL_SOUND') {\r\n            return ({\r\n                ...state,\r\n                isShowControlSound: true,\r\n            })\r\n        }\r\n        if (action.type === 'TOGGLE_MUTE') {\r\n            return ({\r\n                ...state,\r\n                isMute: action.is,\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","export const VOC = {\r\n    'ru': {\r\n        'I ...?': 'Я ...?', \r\n        'You ...?': 'Ты ...?', \r\n        'MM ...?': 'М ...?', \r\n        'You is new droid.': 'Ты новый дроид.',\r\n        'I am mechanic. I create your body.': 'Механик. Делаю корпусы дроидов.',\r\n        'Go. Door is unblocked.... Beeeb.': 'Иди, дверь разблокирована.... Бииб.',\r\n        'Once .... Beeeb.. I set basic program in your memory.': 'Секунду .... Бииб.. Программа в память загружена.',\r\n        'I am programmer.': 'Программирую дроидов.',\r\n        'Go. Once... Beeeb.. Door to laboratory unblocked.': 'Ты должен идти в отдел тестирования. Бииб.. Доступ разрешен.',\r\n        'Once .. Beeeb! I give name to you. Droid_Id: 17543-06767-6767': 'Секунду... Бииб. Тестирование прошло успешно.',\r\n        'I am engineer. I test new droids.': 'Тестестировщик, тестирую новых дроидов.',\r\n        'Go.': 'Иди на приемку.',\r\n        'Droid_Id: 17543-06767-6767, Hmm.., marriage. crap.': 'Секунду... Бииб. Халтура, брак ... Ладно ты теперь дроид_17543-06767-6767.',\r\n        'I am scientist. I check your abilities. ... garbage.': 'Приемщик. Проверяю качество сборки. ',\r\n        'Go to store. Doors unblocked.': 'Иди на склад. Доступ дан.',\r\n        'I don’t know anything, go to the boss. ... Beeeb. You have the accesses.': 'Ничего для тебя нет, иди в штаб... Бииб. Статус: модель укомлектована.',\r\n        'You want see Boss. He is absent.': 'Ищешь босса, его нет.',\r\n        'I am guard. I give you a secret mission.':  'Помошник. Я даю тебе секретную миссию.',\r\n        'You must see all around base, and return. Doors unblocked.': 'Ты должен сходить на разведку вокруг базы и доложить. Вперед.',\r\n        'Droid_Id: 17543-06767-6767 with secret mission. I know.': 'Ты дроид с важной секретной миссией.',\r\n        'I am gateman. Beeeb... Door is opened! Good bye!': 'Ответственный за внешний периметр. Бииб... Доступ к воротам дан.',\r\n        'It does not matter.': 'Это не имеет значения.',\r\n        'I am scout. Crazy factory create droids and close gates. You alone in this desert.': 'Дроид. Суммасшедшая фабрика клепает дроидов, дает секретиные миссии и закрывает ворота.',\r\n        'This is the end.': 'Это все. The end.',\r\n\r\n        'open': 'диалог',\r\n        'close': 'закрыть',\r\n    },\r\n}\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { VOC } from \"../constants/translate\";\r\nimport * as LIBA from '../../../_CORE/'\r\nconst t = LIBA.createTranslater(VOC)\r\n\r\n\r\nexport default connect(\r\n    state => { \r\n        return ({\r\n        replicies: state.dialogs.replicies,\r\n        currentBotKey: state.dialogs.currentBotKey, \r\n    }) }\r\n)(\r\n    function (props) {\r\n        const { messages } = props.replicies[props.currentBotKey]\r\n\r\n        const arrM = messages.map((item, ind)=> {\r\n            if (!item.isDone) return <div key={ind}></div>\r\n\r\n            return (\r\n                <div \r\n                    key={ind}\r\n                    className='marTop-small'>\r\n                    <p className='player'>{t(item.player)}</p>\r\n                    <p>{t(item.nps)}</p>\r\n                </div>)\r\n        })\r\n\r\n\r\n        const arrR = messages.map((item, ind)=> {\r\n            if (item.isDone) return <div key={ind}></div>\r\n\r\n            return (\r\n                <button\r\n                    key={ind}\r\n                    onClick={()=>props.dispatch({ type: 'CLICK_ON_PLAYER_PHRASE', currentBotKey: props.currentBotKey, phraseIndex: ind, })}>\r\n                    {t(item.player)}\r\n                </button>)\r\n        })\r\n\r\n\r\n        return (\r\n                <div className=\"messages-wrapper\">\r\n                    <div className=\"messages\">\r\n                        {arrM}\r\n                    </div>\r\n                    <div className=\"replicies\">\r\n                        {arrR}\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n)","import { connect } from 'react-redux'\r\nimport DialogPallete from \"./DialogPallete\"\r\nimport './stylesheets/CustomReactComponent.css'\r\nimport { VOC } from '../constants/translate'\r\nimport { createTranslater } from \"../../../_CORE/helpers/helper_translate\";\r\nconst t = createTranslater(VOC)\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        isButtonDialog: state.dialogs.isButtonDialog,\r\n        isCloseisButtonDialog: state.dialogs.isCloseisButtonDialog,\r\n        isShowPalleteDialog: state.dialogs.isShowPalleteDialog,\r\n        isShowFinalMessage: state.dialogs.isShowFinalMessage,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction CustomReactComponent(props) {\r\n    // if (!(props.isButtonDialog || props.isShowPalleteDialog)) { \r\n    //   return <div></div>\r\n    // }\r\n\r\n    return (\r\n      <>\r\n         {(!props.isShowFinalMessage && props.isButtonDialog || props.isShowPalleteDialog) && (\r\n          <div className=\"dialog-wrapper\">\r\n              <div className=\"dialog-content\">           \r\n                {props.isShowPalleteDialog && <DialogPallete />}\r\n                {(props.isButtonDialog || props.isShowPalleteDialog) && \r\n                      <button \r\n                          className=\"dialog-button-toggle\" \r\n                          onClick={() => props.dispatch({ \r\n                                      type: 'SHOW_PALLETE_DIALOG', \r\n                                      is:  (props.isButtonDialog && true) || \r\n                                        (props.isShowPalleteDialog && false)\r\n                                    })}            \r\n                          style={{ \"display\": props.display }}>\r\n                          {\r\n                            (props.isButtonDialog && t('open')) ||\r\n                            (props.isShowPalleteDialog && t('close'))\r\n                          }       \r\n                      </button>}\r\n              </div>     \r\n            </div>\r\n        )}\r\n\r\n        {props.isShowFinalMessage && (\r\n          <div className='final-mess'>\r\n            <button\r\n              onClick={() => {\r\n                window.location.replace('./../chapter02')\r\n              }}>\r\n              {t('Continue')}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </>  \r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomReactComponent)\r\n","import { END_ENV } from '../constants/constants_elements'\r\n\r\nconst storeStartState = {\r\n    replicies: {\r\n        mechanic: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'You is new droid.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am mechanic. I create your body.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go. Door is unblocked.... Beeeb.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['factory'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        programmer: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Once .... Beeeb.. I set basic program in your memory.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am programmer.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go. Once... Beeeb.. Door to laboratory unblocked.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['fromLaboratory001'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        engineer: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Once .. Beeeb! I give name to you. Droid_Id: 17543-06767-6767',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am engineer. I test new droids.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go.',\r\n                isDone: false,\r\n            }]\r\n        },\r\n        scientist: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Droid_Id: 17543-06767-6767, Hmm.., marriage. crap.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am scientist. I check your abilities. ... garbage.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'Go to store. Doors unblocked.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['fromFactoryCorpus', 'toLab', 'toGarage'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        master: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'I don’t know anything, go to the boss. ... Beeeb. You have the accesses.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['toBoss'],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        guard_Super_02: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'You want see Boss. He is absent.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am guard. I give you a secret mission.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'You must see all around base, and return. Doors unblocked.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['fromStore', 'fromSecurity', 'toArsenal',],\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n        guard_01: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'Droid_Id: 17543-06767-6767 with secret mission. I know.',\r\n                isDone: false,\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am gateman. Beeeb... Door is opened! Good bye!',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'unblockDoor',\r\n                    data: {\r\n                        idDoor: ['toWorld',],\r\n                    }\r\n                }\r\n            },]\r\n        },\r\n        scout: {\r\n            isDone: false,\r\n            messages: [{ \r\n                player: 'I ...?', \r\n                nps: 'It does not matter.',\r\n                isDone: false,\r\n                event: {\r\n                    type: 'blockDoor',\r\n                    data: {\r\n                        idDoor: ['toWorld',],\r\n                    }\r\n                }\r\n            },{\r\n                player: 'You ...?', \r\n                nps: 'I am scout. Crazy factory create droids and close gates. You alone in this desert.',\r\n                isDone: false,\r\n            },{\r\n                player: 'MM ...?', \r\n                nps: 'This is the end.',\r\n                isDone: false,\r\n            },]\r\n        },\r\n    },\r\n    isCloseisButtonDialog: false,\r\n    isButtonDialog: false,\r\n    isShowPalleteDialog: false,\r\n    isShowFinalMessage: false,\r\n    currentBotKey: null,\r\n    currentLanguage: 'en',\r\n} \r\n\r\n\r\nexport const createCustomStore = root => {\r\n    \r\n    const dialogs = (store = storeStartState, action) => {\r\n        if (action.type === 'BUTTON_DIALOG_TOGGLE') {\r\n            const {  isButtonDialog, currentBotKey } = action\r\n            return {\r\n                ...store,\r\n                isButtonDialog,\r\n                currentBotKey,\r\n            }\r\n        }\r\n\r\n        if (action.type === 'SHOW_PALLETE_DIALOG') {\r\n            root.player.toggleBlocked(action.is)\r\n            return {\r\n                ...store,\r\n                isButtonDialog: !action.is,\r\n                isShowPalleteDialog: action.is,\r\n            }\r\n        }\r\n\r\n        if (action.type === 'CLICK_ON_PLAYER_PHRASE') {\r\n            const replicies = JSON.parse(JSON.stringify(store.replicies))\r\n            replicies[action.currentBotKey].messages[action.phraseIndex].isDone = true\r\n\r\n            /** emit event */\r\n            if (replicies[action.currentBotKey].messages[action.phraseIndex].event) {\r\n                const { type, data } = replicies[action.currentBotKey].messages[action.phraseIndex].event\r\n                console.log(type, data)\r\n\r\n                if (type === 'blockDoor' && data.idDoor && data.idDoor.length && data.idDoor[0] ===  \"toWorld\") {\r\n                    setTimeout(() => {\r\n                        root.player.toggleBlocked(true)\r\n                        root.studio.changeEnvironment(END_ENV, { updateAmb: false, time: 1500 }) \r\n\r\n                        setTimeout(() => root.dispatcher.dispatch({ type: 'SHOW_FINAL_MESSAGE' }), 3000)\r\n                    }, 20000)\r\n                }    \r\n\r\n                root.emitter.emit(type)(data) \r\n            }\r\n\r\n            let isBotDone = true\r\n            for (let i = 0; i < replicies[action.currentBotKey].messages.length; ++i) {\r\n                replicies[action.currentBotKey].messages[i].isDone === false && (isBotDone = false)\r\n            }\r\n            replicies[action.currentBotKey].isDone = isBotDone\r\n            \r\n            return ({\r\n                ...store,\r\n                replicies,\r\n                isCloseisButtonDialog: isBotDone,\r\n            })\r\n        }\r\n\r\n\r\n        if (action.type === 'SHOW_FINAL_MESSAGE') {\r\n            return ({\r\n                ...store,\r\n                isShowFinalMessage: true,\r\n            })\r\n        }\r\n\r\n\r\n        return store\r\n    }\r\n\r\n\r\n    return { \r\n        dialogs \r\n    }\r\n}\r\n\r\n\r\n\r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","export const Saturate2 = {\r\n    uniforms: {\r\n        \"tDiffuse\": { value: null },\r\n    },\r\n\r\n\r\n    vertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\n    fragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel + texel * 1.5) * vec4(0.5);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\nimport { Saturate2 } from '../shaders/saturate2'\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        console.log(clearColor)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n            console.log(color)\r\n\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            console.log(color)\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._playerCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n\r\n\r\n        this._controlsCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n        this._controlsCamera.position.set(0, 0, 20)\r\n        const controls = new OrbitControls(this._controlsCamera, this._renderer.domElement)\r\n        controls.target.set(0, 0, 0)\r\n        controls.update();\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        this._renderPass = new RenderPass(this._scene, this._controlsCamera)\r\n        this._composer.addPass(this._renderPass)\r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass) {\r\n            if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n                this._composer.addPass(new ShaderPass(Saturate))\r\n            }\r\n            if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate2') {\r\n                this._composer.addPass(new ShaderPass(Saturate2))\r\n            }\r\n        } \r\n\r\n\r\n\r\n        /** toggle view camera to debug by orbitControls */\r\n        const vec3 = new THREE.Vector3()\r\n        let isPlayerView = true \r\n        let saveFogData = null\r\n        emitter.subscribe('keyEvent')(data => {\r\n            if (!data['o']) {\r\n                return;\r\n            }\r\n\r\n            if (isPlayerView) {\r\n                saveFogData = { ...this._scene.fog }\r\n                this._scene.fog.near = 1000\r\n                this._scene.fog.far = 2000\r\n                isPlayerView = false\r\n                this._renderPass.camera = this._controlsCamera\r\n                this._playerCamera.getWorldPosition(vec3)\r\n                this._controlsCamera.position.x = vec3.x + 100\r\n                this._controlsCamera.position.y = vec3.y + 100\r\n                this._controlsCamera.position.z = vec3.z\r\n                controls.target.set(vec3.x, vec3.y, vec3.z)\r\n                controls.update()\r\n            } else {\r\n                this._scene.fog.near = saveFogData.near\r\n                this._scene.fog.far = saveFogData.far\r\n                isPlayerView = true \r\n                this._renderPass.camera = this._playerCamera\r\n            }\r\n        })\r\n    \r\n        \r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._controlsCamera) {\r\n                this._controlsCamera.aspect = size.width/size.height\r\n                this._controlsCamera.updateProjectionMatrix()\r\n            }\r\n            if (this._playerCamera) {\r\n                this._playerCamera.aspect = size.width/size.height\r\n                this._playerCamera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        this.removeFromScene = this._scene.remove.bind(this._scene)\r\n\r\n\r\n\r\n        const drawFrame = () => {\r\n            this._composer.render(this._scene, this._controlsCamera)\r\n        }\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._playerCamera = cam\r\n        this._renderPass.camera = this._playerCamera\r\n    }\r\n\r\n\r\n    changeEnvironment (sceneEnvironment, conf = null) {\r\n        this._changeFog(sceneEnvironment, conf)\r\n        this._changeBackground(sceneEnvironment, conf)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment, conf) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, (conf && conf.time) || 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    if (conf) { \r\n                        if (conf.updateAmb) this._lightA.color = startData.color\r\n                    } else {\r\n                        this._lightA.color = startData.color\r\n                    }\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n            'p': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break;\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break;\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break;\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break;\r\n                case 79: \r\n                    keys['o'] = isDown\r\n                    break;                \r\n                case 80: \r\n                    keys['p'] = isDown\r\n                    break;\r\n                default:\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        this._root = root\r\n\r\n        const { emitter, studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n            speed,\r\n            offsetFromFloor,\r\n            offsetFromFloorFactor,\r\n            offsetWallCollision,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        let keys = {}\r\n        let isButtonsDisabled = false\r\n        this._isBlocked = true\r\n        this._isCanMove = {\r\n            'up': true,\r\n            'down': true,\r\n        }\r\n\r\n        this._mainObj = new THREE.Object3D()\r\n        this._mainObj.position.fromArray(startPos)\r\n        this._mainObj.rotation.fromArray(startRot)\r\n        this._mainObj.userData.type = 'player'\r\n\r\n        const bottomObj = new THREE.Object3D() \r\n        bottomObj.position.fromArray([0, -.05, 0])\r\n        this._mainObj.add(bottomObj)\r\n\r\n        const frontObj = new THREE.Object3D()\r\n        frontObj.position.fromArray(frontObjPos)\r\n        this._mainObj.add(frontObj)\r\n        this.frontObj = frontObj\r\n\r\n        const backObj = new THREE.Object3D()\r\n        backObj.position.fromArray(backObjPos)\r\n        this._mainObj.add(backObj)\r\n        this.backObj = backObj\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray(pos)\r\n            this._mainObj.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos, dist, decay } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth, dist, decay)\r\n            light.position.fromArray(pos)\r\n            this._mainObj.add(light)\r\n        }\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && (this._mainObj.rotation.y += (speedRot * data.count))\r\n            keys['right'] && (this._mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n            if (this._isBlocked) return;\r\n\r\n            /** check bottom floors */\r\n            if (this._root.systemCollisionFloor) {\r\n                const [\r\n                    isBlockedByItem, \r\n                    offset,\r\n                    point, \r\n                ] = this._root.systemCollisionFloor.checkCollisions(this._mainObj, bottomObj, offsetFromFloor)\r\n                \r\n                if (!isBlockedByItem) {\r\n                    this._mainObj.position.y += speedDown\r\n                } else {\r\n                    if (offset < (offsetFromFloor - 1))  {\r\n                        this._mainObj.translateY(offsetFromFloor - offsetFromFloorFactor - offset)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (!keys) return;\r\n\r\n            if (keys['up']) {\r\n                if (!this._isCanMove['up']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, frontObj, offsetWallCollision)\r\n                   \r\n                        \r\n\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'up' })\r\n            }\r\n\r\n            if (keys['down']) {\r\n                if (!this._isCanMove['down']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, backObj, offsetWallCollision)\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'down' })\r\n            }\r\n\r\n            if (keys['p']) {\r\n                console.log(this._mainObj.position)\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this._mainObj)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this._mainObj\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this._mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCollisionWithItems {\r\n    constructor(root) {\r\n        this._root = root\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision ({\r\n        mesh,\r\n        itemKeyEmitCollision = null,\r\n        isStopUnits = true\r\n    }) {\r\n        mesh.userData.itemKeyEmitCollision = itemKeyEmitCollision\r\n        mesh.userData.isStopUnits = isStopUnits\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, d) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0]) {\r\n            if (intersects[0].distance < d) {\r\n                if (intersects[0].object.userData.itemKeyEmitCollision) {\r\n                    this._root.emitter.emit('collision')({ \r\n                        ...intersects[0].object.userData.itemKeyEmitCollision, \r\n                        type2: objFrom.userData.type \r\n                    })\r\n                }\r\n\r\n                if (intersects[0].object.userData.isStopUnits) {\r\n                    return [ true, intersects[0].distance, intersects[0].point ]\r\n                }\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap', 'alphaMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","export default __webpack_public_path__ + \"static/media/level_01.bcfccfd8.obj\";","export default __webpack_public_path__ + \"static/media/wall.ccfc1f44.jpg\";","export default __webpack_public_path__ + \"static/media/level-ray.2b82bfff.obj\";","/**\r\n * Functions call callback after execution\r\n */\r\n\r\n\r\nexport const timer = (t, on) => setTimeout(on, t)\r\nexport const tween = (prop, key, fromVal, toVal, time, callback) => {\r\n    const timerStep = 16.666\r\n    const count = time / timerStep\r\n    const speed = (toVal - fromVal) / count\r\n\r\n    let currentCount = 0\r\n\r\n    const step = () => {\r\n        ++currentCount\r\n\r\n        if (currentCount > count) {\r\n            prop[key] = toVal\r\n            return void callback()\r\n        }\r\n\r\n        prop[key] += speed\r\n        setTimeout(step, timerStep)\r\n    }\r\n    step()\r\n}","/**\r\n * Function 'start' get arr of arr with func and its arguments\r\n * arr = [\r\n *   [func, [arg1, arg2, ...]], \r\n *   [func, [arg1, arg2, ...]], \r\n *    ...\r\n * ]\r\n * And execute as pipline one after anoter. \r\n * All functions must call its callbacks \r\n */\r\n\r\n\r\nexport const start = arr => iterateArrF(arr.map(data => on => () => data[0](...data[1], on)))\r\n\r\nconst iterateArrF = arrF => {\r\n    const iterate = i => arrF[i] && arrF[i](() => iterate(++i))()\r\n    iterate(0)\r\n}","import * as THREE from \"three\"\r\nimport { animateToOffsetAndReturn } from '../../../_CORE/components/componentTweenProp'\r\n\r\nconst OFFSET_PLAYER_FROM_DOOR = 7\r\n\r\nexport class SystemDoors {\r\n    constructor (root) {\r\n        const {\r\n            assets,\r\n            materials,\r\n            studio,\r\n            emitter,\r\n            systemCollisionItems,\r\n        } = root\r\n\r\n        this._doors = {}\r\n\r\n        assets['level-rooms'].traverse(child => {\r\n            if (child.name.includes(\"doormesh_\")) {\r\n                const key = child.name.split('_')[1]\r\n                !this._doors[key] && (this._doors[key] = {})\r\n                this._doors[key]['mesh'] = new THREE.Mesh(child.geometry, materials.door)\r\n                this._doors[key]['state'] = 'closed'\r\n                this._doors[key]['access'] = 'denied' //'confirm' // ||'denied' || 'confirm'\r\n                //this._doors[key]['access'] = 'confirm'\r\n                this._doors[key]['mesh']['userData'] = {\r\n                    part: 'mesh',\r\n                    type: 'door',\r\n                    id: key,\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        for (let key in this._doors) {\r\n            studio.addToScene(this._doors[key]['mesh'])\r\n            systemCollisionItems && systemCollisionItems.setItemToCollision({\r\n                mesh: this._doors[key]['mesh'],\r\n                dist: OFFSET_PLAYER_FROM_DOOR,\r\n                itemKeyEmitCollision: { key, type: 'door' },\r\n                isStopUnits: true\r\n            })\r\n        }\r\n\r\n\r\n        emitter.subscribe('collision')(data => {\r\n            data.type === 'door' \r\n                && data.type2 \r\n                    && data.type2 === 'player'\r\n                        && this._doors[data.key]['access'] === 'confirm'\r\n                            && this._doors[data.key].state === 'closed'\r\n                                && this._openDoor(data.key)\r\n            }\r\n        )\r\n\r\n        emitter.subscribe('unblockDoor')(data => { \r\n            for (let i = 0; i < data.idDoor.length; i++) {\r\n                this._doors[data.idDoor[i]]['access'] = 'confirm'\r\n            } \r\n        }) \r\n\r\n\r\n        emitter.subscribe('blockDoor')(data => { \r\n            for (let i = 0; i < data.idDoor.length; i++) {\r\n                this._doors[data.idDoor[i]]['access'] = 'denied'\r\n            } \r\n        }) \r\n    }\r\n\r\n\r\n\r\n    _openDoor (key) {\r\n        this._doors[key].state = 'opened'\r\n\r\n        const data = {\r\n            prop: this._doors[key]['mesh'].position,\r\n            key: 'y',\r\n            fromVal: this._doors[key]['mesh'].position.y,\r\n            offset: 15,\r\n            time: 500,\r\n            pause: 2000,\r\n        }\r\n        animateToOffsetAndReturn(data, () => this._doors[key].state = 'closed')\r\n    }\r\n}","/** \r\n * Small scenarious to change one prop of object \r\n */\r\n\r\n \r\nimport { timer, tween } from \"./funcs/transformProp\";\r\nimport { start } from \"../utils/iterate\";\r\n\r\n\r\nexport function animateToOffsetAndReturn (\r\n    { prop, key, fromVal, offset, time = 1000, pause = 2000 },\r\n    onAllComplete = () => {},\r\n) {\r\n    const\r\n        animateToOffset = [tween, [prop, key, fromVal, fromVal + offset, time]], \r\n        wait = [timer, [pause]],\r\n        animateFromOffsetToStart = [tween, [prop, key, fromVal + offset, fromVal, time]],\r\n        onComplete = [onAllComplete, []]\r\n\r\n    start([\r\n        animateToOffset, \r\n        wait, \r\n        animateFromOffsetToStart, \r\n        onComplete,\r\n    ])\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/door.edd859db.jpg\";","import * as THREE from 'three'\r\n\r\n\r\nconst ran = Math.random\r\n\r\n\r\n\r\nexport function createBot (monsterModel, monsterMat, botData, root) {\r\n    const {\r\n        emitter,\r\n    } = root\r\n\r\n\r\n    const group = new THREE.Group()\r\n\r\n\r\n    const animations = createAnimations(monsterModel)\r\n    animations.play('walk')\r\n\r\n\r\n    const obj = monsterModel.scene.children[1]\r\n    obj.children[1].material = monsterMat\r\n    obj.position.set(0, -8, 0)\r\n\r\n\r\n    const objRay = new THREE.Object3D()\r\n    objRay.position.set(0, 0, 1)\r\n    group.add(objRay)\r\n\r\n\r\n    group.add(obj)\r\n\r\n\r\n    let isUpdate = false\r\n\r\n\r\n    const freeWalk = createFreeWalk(group, objRay, 20, emitter)\r\n    freeWalk.setItemToCollision(root.botsCustomWallsCollisions[botData.keyWallToWalkCollisions])\r\n    freeWalk.start()\r\n    \r\n\r\n    const boxCollisionWithPlayer = new THREE.Mesh(\r\n       new THREE.BoxGeometry(6, 6, 6),\r\n       new THREE.MeshBasicMaterial()\r\n    )\r\n    boxCollisionWithPlayer.position.y = -5\r\n    boxCollisionWithPlayer.visible = false\r\n    group.add(boxCollisionWithPlayer)\r\n    root.systemCollisionItems.setItemToCollision({ mesh: boxCollisionWithPlayer })\r\n\r\n\r\n\r\n    return ({ \r\n        mesh: group,\r\n        isUpdate,\r\n        update (data) {\r\n            if (isUpdate) {\r\n                return;\r\n            }\r\n            \r\n            animations.update(data.delta)\r\n        },\r\n        stay (playerPos) { \r\n            freeWalk.stop()\r\n            animations.play('dialog')\r\n\r\n            const vec3 = new THREE.Vector3()\r\n            vec3.copy(playerPos)\r\n            vec3.y = group.position.y\r\n            group.lookAt(vec3)\r\n        },\r\n        walk () { \r\n            freeWalk.start()\r\n            animations.play('walk')\r\n        },\r\n        startUpdate () {\r\n            if (isUpdate) return;\r\n            isUpdate = true\r\n            freeWalk.play()\r\n            animations.play('walk')\r\n        },\r\n        stopUpdate () {\r\n            if (!isUpdate) return;\r\n            isUpdate = false\r\n            freeWalk.stop()\r\n        },\r\n    })\r\n}\r\n\r\n\r\n\r\n/** ANIMATION MANAGER ****************************************/\r\n\r\nconst createAnimations = monsterModel => {\r\n    const animations = monsterModel.animations\r\n    const mixer = new THREE.AnimationMixer(monsterModel.scene.children[1].children[1])\r\n\r\n    const dialog = mixer.clipAction(animations[0])\r\n    dialog.timeScale = 0.3\r\n    const walk = mixer.clipAction(animations[2])\r\n    walk.timeScale = 0.7\r\n\r\n    walk.play()\r\n\r\n\r\n    const actions = { dialog, walk }\r\n    let currentAction = null\r\n\r\n    return {\r\n        update: d => { \r\n            mixer.update(d)\r\n        },\r\n        play: key => {\r\n            if (currentAction === key) return;\r\n\r\n            currentAction = key\r\n\r\n            mixer.stopAllAction()\r\n            actions[key].play()\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** WALKING ***************************************************/\r\n\r\n\r\nconst startRotate = mesh => {\r\n    const angleRot = (ran() * Math.PI * 1.5 + 1.3) * ran() < 0.5 ? 1 : -1\r\n    const numRotations = 40\r\n    const speed = angleRot / numRotations\r\n\r\n    let countRotation = 0\r\n\r\n    return () => {\r\n        mesh.rotation.y += speed\r\n        return ++countRotation < numRotations\r\n    }\r\n}\r\n\r\n\r\n\r\nconst startGo = (mesh, dist)  => {\r\n    const speed = 0.15\r\n    const numsMove = dist\r\n        ? Math.min(dist / speed, ran() * 800 + 300)\r\n        : null\r\n\r\n    let countMove = 0\r\n\r\n    return () => {\r\n        if (!dist) {\r\n            return false;\r\n        }\r\n        mesh.translateZ(speed)\r\n        return ++countMove < numsMove\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst createFreeWalk = (mesh, meshFrontObj, wallOffset, emitter) => {\r\n    let isUpdate = false\r\n    const collisions = createCollisionWithItems()\r\n\r\n    const actions = {\r\n        'rotate': startRotate,\r\n        'go': startGo,\r\n    }\r\n\r\n    let state = 'rotate' // || 'go'\r\n    let currentAction = null\r\n\r\n\r\n    const toggleAction = key => {\r\n        if (!key) {\r\n            state === 'rotate' && (key = 'go')\r\n            state === 'go' && (key = 'rotate')\r\n        }\r\n\r\n        state = key\r\n        const d = collisions.checkCollisions(mesh, meshFrontObj)\r\n        currentAction = actions[key](mesh, Math.max(d - 20, 0))\r\n    }\r\n\r\n\r\n    toggleAction(state)\r\n\r\n\r\n    emitter.subscribe('frameUpdate')(() => {\r\n        if (!isUpdate) {\r\n            return;\r\n        }\r\n        !currentAction() && toggleAction()\r\n    })\r\n\r\n\r\n    return {\r\n        start: () => {\r\n            toggleAction('rotate')\r\n            isUpdate = true\r\n        },\r\n        stop: () => isUpdate = false,\r\n        setItemToCollision: collisions.setItemToCollision,\r\n        removeItemFromCollision: collisions.removeItemFromCollision,\r\n        clearCollisions: collisions.clearCollisions,\r\n    }\r\n}\r\n\r\n\r\n\r\n/** COLLISIONS *************************************************/\r\n\r\nconst createCollisionWithItems = () => {\r\n        let arrMeshes = []\r\n\r\n        const vecStart = new THREE.Vector3()\r\n        const vecDir = new THREE.Vector3()\r\n        const rayCaster = new THREE.Raycaster(vecStart, vecDir)\r\n\r\n\r\n    return {\r\n        setItemToCollision (mesh) {\r\n            arrMeshes.push(mesh)\r\n        },\r\n        removeItemFromCollision (mesh) {\r\n            arrMeshes = arrMeshes.filter(item => item !== mesh)\r\n        },\r\n        clearCollisions () {\r\n            arrMeshes = []\r\n        },\r\n        checkCollisions (objFrom, objTo) {\r\n            objFrom.getWorldPosition(vecStart)\r\n            objTo.getWorldPosition(vecDir)\r\n\r\n            vecDir.sub(vecStart)\r\n\r\n            const intersects = rayCaster.intersectObjects(arrMeshes, true)\r\n\r\n            if (intersects[0]) {\r\n                return intersects[0].distance\r\n            }\r\n\r\n            return false\r\n        }\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/monster-animate3.f32b90f6.glb\";","export default __webpack_public_path__ + \"static/media/monster-skin.64f3a049.jpg\";","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCheckerNearItem {\r\n    constructor() {\r\n        this._itemWorldPos = new THREE.Vector3()\r\n        this._mainCheckerWorldPos = new THREE.Vector3()\r\n\r\n        this._arr = []\r\n    }\r\n\r\n\r\n    setItemToCheck (mesh) {\r\n        this._arr.push(mesh)\r\n    }\r\n\r\n    checkNear (mainMesh, dist) {\r\n        mainMesh.getWorldPosition(this._mainCheckerWorldPos)\r\n\r\n        for (let i = 0; i < this._arr.length; ++i) {\r\n            if (!this._arr[i].userData.inScene) continue;\r\n\r\n            this._arr[i].getWorldPosition(this._itemWorldPos)\r\n            const distance = this._itemWorldPos.distanceTo(this._mainCheckerWorldPos)\r\n            if (distance < dist) {\r\n                return [true, this._arr[i].userData]\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}\r\n\r\n","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { CustomUi } from '../ui/Ui'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer'\r\nimport { SystemCollisionWithItems } from '../../../_CORE/systems/SystemCollisionsItems'\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { SystemLevel } from '../systems/system_Level'\r\nimport levelSrc from '../../../assets/chapter01/level_01.obj'\r\nimport wallTextureSrc from '../../../assets/chapter01/wall.jpg' \r\nimport levelCollisionSrc from '../../../assets/chapter01/level-ray.obj'\r\n\r\n\r\nimport { SystemDoors } from '../systems/system_Doors'\r\nimport doorTextureSrc from '../../../assets/chapter01/door.jpg'\r\n\r\n\r\nimport { SystemBots } from \"../systems/system_Bots\"\r\nimport botSrc from '../../../assets/chapter01/monster-animate3.glb'\r\nimport botMap from \"../../../assets/chapter01/monster-skin.jpg\";\r\nimport { CheckerDialogWithBot } from \"../systems/system_CheckerDialogWithBot\";\r\n\r\n\r\nimport { AdderActions } from \"../actions/AdderActions\"\r\n\r\n\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'customUi',\r\n        constr: CustomUi,\r\n        initStateKey: 'pageLoaded',  \r\n    },\r\n    {\r\n         key: 'deviceResizer',\r\n         constr: DeviceResizer,\r\n         initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    // /////////////////////////////////////////\r\n\r\n    {\r\n         key: 'frameUpdater',\r\n         constr: FrameUpdater,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'tweenUpdater',\r\n         constr: Helper_TweenUpdater,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'studio',\r\n         constr: Studio,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'keyBoard',\r\n         constr: KeyBoard,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'player',\r\n         constr: Player,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionItems',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionFloor',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n         key: 'materialsLib',\r\n         constr: Helper_MaterialsLib,\r\n         initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: SystemLevel,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelSrc, key: 'level-rooms' },\r\n            { type: 'obj', path: levelCollisionSrc, key: 'levelCollisions' },\r\n            { type: 'img', path: wallTextureSrc, key: 'wallTexture', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'doors',\r\n        constr: SystemDoors,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'img', path: doorTextureSrc, key: 'doorTexture', wrap: false }, \r\n        ] \r\n    },\r\n    {\r\n        key: 'bots',\r\n        constr: SystemBots ,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'glb', path: botSrc, key: 'bot' },\r\n            { type: 'img', path: botMap, key: 'monster-skin' },\r\n        ]\r\n    },\r\n    {\r\n        key: 'playerNearBot',\r\n        constr: CheckerDialogWithBot,\r\n        initStateKey: 'beforeStartPlay',   \r\n    },\r\n    {\r\n        key: 'adderActions',\r\n        constr: AdderActions,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]\r\n\r\n","import { UI } from '../../../_CORE/ui/UI'\r\nimport CustomReactComponent from \"./CustomReactComponent\";\r\nimport { createCustomStore  } from \"./createStore\";\r\n\r\nexport class CustomUi {\r\n    constructor(root) {\r\n\r\n        root.appWrapper = document.querySelector('.app-wrapper')\r\n        root.CustomReactComponent = CustomReactComponent\r\n        root.customStore = createCustomStore(root)\r\n\r\n        root.ui = new UI(root)\r\n    } \r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000 / 60 * 0.001\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from \"three\";\r\n\r\nexport class SystemLevel {\r\n    constructor (root) {\r\n        const { \r\n            assets, \r\n            materials, \r\n            studio, \r\n            systemCollisionItems,\r\n            systemCollisionFloor,\r\n        } = root\r\n\r\n        const {\r\n            offsetFromFloor,\r\n        } = root.CONSTANTS.playerConfig\r\n\r\n\r\n        const botsCustomWallsCollisions = {}\r\n\r\n        assets['level-rooms'].traverse(child => {\r\n            child.name.includes(\"room_\") \r\n                && studio.addToScene(new THREE.Mesh(child.geometry, materials.wall))\r\n                \r\n                \r\n            if (child.name.includes(\"collision_bot\")) {\r\n                botsCustomWallsCollisions[child.name] = child \r\n            }    \r\n        })\r\n\r\n        root.botsCustomWallsCollisions = botsCustomWallsCollisions\r\n\r\n\r\n\r\n        assets['levelCollisions'].traverse(child => {\r\n            child.name === \"wall_collision\" \r\n                && systemCollisionItems\r\n                    && systemCollisionItems.setItemToCollision({\r\n                            mesh: new THREE.Mesh(child.geometry, materials.easyMaterial),\r\n                            dist: 5,\r\n                            isStopUnits: true\r\n                        })\r\n            child.name === \"floor_collision\" \r\n                && systemCollisionFloor     \r\n                    && systemCollisionFloor.setItemToCollision({ \r\n                        mesh: new THREE.Mesh(child.geometry, materials.easyMaterial), \r\n                        dist: offsetFromFloor,\r\n                        isStopUnits: true,\r\n                    })\r\n        })\r\n    }\r\n}","import { createBot } from '../entities/Bot'\r\nimport { GLTFCopy } from '../../../_CORE/helpers/helper_GLTFcopy' \r\n\r\n\r\nexport class SystemBots {\r\n    constructor (root) {\r\n        const { \r\n            assets, \r\n            materials, \r\n            studio, \r\n            emitter,\r\n        } = root\r\n    \r\n        this.bots = {}\r\n\r\n        root.CONSTANTS.BOTS.forEach(item => {\r\n            const unit = createBot(\r\n                GLTFCopy(assets.bot), \r\n                materials.bot, \r\n                item,\r\n                root,\r\n            )\r\n            unit.mesh.position.set(item.pos[0], item.pos[1], item.pos[2])\r\n            unit.mesh.rotation.y = item.rot\r\n            unit.name = item.name\r\n            studio.addToScene(unit.mesh)\r\n            unit.mesh.userData.inScene = true\r\n            unit.mesh.userData.key = item.name\r\n            this.bots[item.name] = unit\r\n        })\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(data => {\r\n            for (let key in this.bots) {\r\n                this.bots[key].update(data)\r\n            }\r\n        })\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","import { SystemCheckerNearItem } from \"../../../_CORE/systems/SystemCheckerNearItem\";\r\n\r\n\r\nexport class CheckerDialogWithBot {\r\n    constructor(root) {\r\n        const { player, bots, emitter } = root\r\n\r\n        const checkerNear = new SystemCheckerNearItem()\r\n        const checkerNearBlock = new SystemCheckerNearItem()\r\n        for (let key in bots.bots) {\r\n            checkerNear.setItemToCheck(bots.bots[key].mesh)\r\n            checkerNearBlock.setItemToCheck(bots.bots[key].mesh)\r\n        }\r\n\r\n\r\n        const mesh = {\r\n            'up': player.frontObj,\r\n            'down': player.backObj,\r\n        }\r\n\r\n        let keyBotNear = null\r\n\r\n        emitter.subscribe('playerMove')(({ dir }) => {\r\n            /** check dialog */\r\n            {\r\n                const [ isNear, data ] = checkerNear.checkNear(mesh[dir], 20)\r\n\r\n                if (!isNear) {\r\n                    if (keyBotNear) {\r\n                        bots.bots[keyBotNear].walk(player._mainObj.position)\r\n                        keyBotNear = null\r\n                        emitter.emit('nearBot')({ isNearBot: false, botKey: keyBotNear })\r\n                    }\r\n                } else {\r\n                    if (!keyBotNear) {\r\n                        keyBotNear = data.key\r\n                        bots.bots[keyBotNear].stay(player._mainObj.position)\r\n                        emitter.emit('nearBot')({ isNearBot: true, botKey: keyBotNear })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","\r\n\r\nexport class AdderActions {\r\n    constructor (_root) {\r\n        const { player, ui, dispatcher, emitter } = _root\r\n\r\n        dispatcher.dispatch({ type: 'CHANGE_INFO_CHAPTER', currentChapterIndex: 0 })\r\n        ui.showStartButton(() => player.toggleBlocked(false))\r\n\r\n        emitter.subscribe('nearBot')(({ isNearBot, botKey }) => {\r\n            dispatcher.dispatch({ type: 'BUTTON_DIALOG_TOGGLE', isButtonDialog: isNearBot, currentBotKey: botKey })\r\n        })\r\n    }\r\n}\r\n","import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\n\r\n\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, CONSTANTS))\r\n"],"sourceRoot":""}