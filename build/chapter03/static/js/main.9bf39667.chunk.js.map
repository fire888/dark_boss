{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","chapter03/src/constants/constants_elements.js","chapter03/src/constants/constants_replicies.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/helpers/helper_translate.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","chapter03/src/ui/UserReplicies.js","chapter03/src/store/actions.js","chapter03/src/ui/BotAnswers.js","chapter03/src/ui/CustomReactComponent.js","chapter03/src/store/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer.js","_CORE/helpers/helper_MaterialsLib.js","chapter03/src/systems/system_level.js","assets/level-rooms.obj","assets/floor_outer_map.jpg","assets/skybox/px.jpg","assets/skybox/nx.jpg","assets/skybox/py.jpg","assets/skybox/ny.jpg","assets/skybox/pz.jpg","assets/skybox/nz.jpg","chapter03/src/Entities/Bot.js","_CORE/helpers/helper_GLTFcopy.js","chapter03/src/systems/system_bots.js","assets/botMap.png","assets/botAnim2.glb","assets/matIronBox/posx.jpg","assets/matIronBox/negx.jpg","assets/matIronBox/posy.jpg","assets/matIronBox/negy.jpg","assets/matIronBox/posz.jpg","assets/matIronBox/negz.jpg","chapter03/src/store/actionByChangeQuadrant.js","_CORE/systems/SystemCheckerNearItem.js","_CORE/systems/SystemCollisionsItems.js","chapter03/src/constants/constants_modules.js","chapter03/src/ui/Ui.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter03/src/components/component_playerInBot.js","chapter03/src/actions/StarterPlay.js","chapter03/src/actions/EnderPlay.js","chapter03/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","MATERIALS_CONFIG","mat","props","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","map","skinning","S","H","FRAME_UPDATE","FLOORS_CONF","fogNear","fogFar","backgroundImgKey","studioConfig","canId","rendererCon","antialias","clearColor","backgroundColor","amb","strength","sceneEnvironment","composerAddPass","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","TRANSLATE_WORLDS","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","soundLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","createTranslater","vocab","word","t","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","isShowControlSound","isMute","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseUp","emit","is","onTouchEnd","onMouseDown","onTouchStart","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","CORE","UserReplicies","userReplicies","ui","clickPhrase","r","phrase","q","Math","floor","random","BotAnswers","botAnswers","isButtonDialog","isShowFinalMessage","isShowPalleteDialog","location","replace","uiState","playerQuadrant","oldDialogPlayerQuadrant","oldQuadrant","newQuadrant","counter","isStartCorridorShow","history","botIndex","phraseIndex","phrasesData","phrases","event","levelEvent","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_playerCamera","_controlsCamera","position","set","OrbitControls","domElement","update","_composer","EffectComposer","_renderPass","RenderPass","addPass","ShaderPass","vec3","isPlayerView","saveFogData","camera","getWorldPosition","x","y","z","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","removeFromScene","remove","_backgroundImgKey","cam","conf","_changeFog","_changeBackground","startData","endData","TWEEN","to","time","onUpdate","updateAmb","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","Player","studio","_camera","isButtonsDisabled","_isBlocked","_isCanMove","_mainObj","fromArray","rotation","userData","bottomObj","frontObj","backObj","strenth","light","count","systemCollisionFloor","checkCollisions","isBlockedByItem","offset","translateY","systemCollisionItems","translateZ","dir","isOpen","setCamera","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","STANDART_ROOMS","START_ROOMS","Level","createLevelMeshes","rooms","allMeshes","collisionsBotsRooms","_instanceRooms","_group","_objRooms","_state","newMode","_createRoom","_startL","clone","setItemToCollision","mesh","_wentLevels","_flagIsSpecial","_saveOldQuadrant","_saveNewQuadrant","_saveIsStartCorridorShow","removeItemFromCollision","keyCreateRoom","oldKv","curKv","_removeRoom","kv","instanceKey","objKey","typeLevelChange","isAddBot","name","isRemoveBot","traverse","child","includes","geometry","wall","green","road","OFFSETS","Bot","inScene","_targetAngle","container","PI","_objFrom","_objTo","copy","gltf","animations","scene","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","botScene","model","children","material","botMaterial","_animations","_mixer","_walkAction","clipAction","play","timeScale","_speakAction","delta","_componentCollision","_updateState","_collisionMeshes","visible","createComponentCollisionWalls","stop","lookAt","check","_startRotate","abs","_startGo","objFrom","objTo","arrWalls","vec3Src2","vec3Ray2","sub","intersectObject","CHANGE_LAYER_STATE","oldState","newState","emitData","environmentMode","backgroundImg","levelState","getEmitsByChangeQuadrant","playerOldQ","playerNewQ","getData","createCheckerNewQuadrant","currentQuadrant","isChanged","SystemCheckerNearItem","_itemWorldPos","_mainCheckerWorldPos","_arr","mainMesh","dist","distanceTo","SystemCollisionWithItems","_arrMeshes","_vecStart","_vecDir","_rayCaster","itemKeyEmitCollision","isStopUnits","d","intersects","intersectObjects","distance","object","type2","point","GAME_MODULES","appWrapper","mode","changeEnvironment","changeQuadrant","player","toggleBlocked","isNewBot","isCanChangeBotIndex","createCustomStore","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","max","min","fullscreenElement","emitFrameUpdate","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","mapFloorOuter","wrap","iron","bot","groupBots","arrBots","botRooms","setCollisionMesh","removeCollisionMesh","botSrc","botMap","pxjpg2","nxjpg2","pyjpg2","nyjpg2","pzjpg2","nzjpg2","checkerNewQuadrant","arrEmitData","bots","checkerNearItems","setItemToCheck","botWorldPos","isPlayerCanMove","blockBot","togglePlayerMove","indexBot","prepareToSay","toggleCanMove","showStartButton","playerObj","getObj","oldY","countDropped","isGameComplete","startPlay","startFinalFog","toggleFinalMessage","showMessages","pipeLineForInit"],"mappings":"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tB,EAAG,6CACH7L,EAAG,+BACHoN,MAAO,YACPC,WAAY,MACd,CACExB,EAAG,WACH7L,EAAG,4CACHoN,MAAO,QACPC,WAAY,eAKzB,CACKF,QAAS,CACL,CACItB,EAAG,gDACH7L,EAAG,oDACHoN,MAAO,YACPC,WAAY,MACb,CACCxB,EAAG,8BACH7L,EAAG,sBACHoN,MAAO,QACPC,WAAY,QAIzB,CACSF,QAAS,CACL,CACItB,EAAG,6BACH7L,EAAG,6BACHoN,MAAO,YACPC,WAAY,MACb,CACCxB,EAAG,mCACH7L,EAAG,+CACHoN,MAAO,QACPC,WAAY,QAI7B,CACSF,QAAS,CACL,CACItB,EAAG,kBACH7L,EAAG,uCACHoN,MAAO,YACPC,WAAY,MACb,CACCxB,EAAG,4BACH7L,EAAG,yBACHoN,MAAO,QACPC,WAAY,QAI5B,CACQF,QAAS,CACL,CACItB,EAAG,iDACH7L,EAAG,oCACHoN,MAAO,QACPC,WAAY,eAK7B,CACSF,QAAS,CACL,CACItB,EAAG,iDACH7L,EAAG,gCACHoN,MAAO,YACPC,WAAY,MAEhB,CACIxB,EAAG,8BACH7L,EAAG,iBACHoN,MAAO,QACPC,WAAY,QAI7B,CACUF,QAAS,CACN,CACItB,EAAG,0BACH7L,EAAG,uBACHoN,MAAO,YACPC,WAAY,MAEhB,CACIxB,EAAG,mCACH7L,EAAG,2BACHoN,MAAO,QACPC,WAAY,QAMxB,CACIF,QAAS,CACL,CACItB,EAAG,8CACH7L,EAAG,iCACHoN,MAAO,QACPC,WAAY,eAaxB,CACIF,QAAS,CACL,CACItB,EAAG,0DACH7L,EAAG,8BACHoN,MAAO,YACPC,WAAY,MAEhB,CACIxB,EAAG,+BACH7L,EAAG,4BACHoN,MAAO,QACPC,WAAY,QAOxB,CACIF,QAAS,CACL,CACItB,EAAG,gCACH7L,EAAG,uDACHoN,MAAO,YACPC,WAAY,MAEhB,CACIxB,EAAG,8BACH7L,EAAG,qDACHoN,MAAO,QACPC,WAAY,QAKxB,CACIF,QAAS,CACL,CACItB,EAAG,uCACH7L,EAAG,wCACHoN,MAAO,QACPC,WAAY,eAQxB,CACI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","file":"static/js/main.9bf39667.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","export const MATERIALS_CONFIG = {\r\n\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'green': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xa1129f,\r\n            emissive: 0xa1129f,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/** size element */\r\nexport const S = 175.335\r\nexport const H = 70\r\n\r\n\r\n\r\n/** emitter constants */\r\nexport const FRAME_UPDATE = 'FRAME_UPDATE'\r\n\r\n\r\n\r\n\r\nexport const FLOORS_CONF = {\r\n    '-2': {\r\n        'outer': { fogNear: -200, fogFar: 500, color: 0x18257d },\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x8805a8 },\r\n    },\r\n\r\n   \r\n\r\n    '-1': {\r\n        'start': { fogNear: 0, fogFar: 5, color: 0x18257d },\r\n        'outer': { fogNear: 20, fogFar: 500, color: 0x18257d },\r\n        'back': { fogNear: 20, fogFar: 500, color: 0x18257d, backgroundImgKey: 'skyBox' },\r\n        'firstRoomLight': { fogNear: -40, fogFar: 150, color: 0x00235e},\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x2e118b },\r\n    },\r\n\r\n\r\n    '0': { 'default': { fogNear: -40, fogFar: 150, color: 0x3c4900 }, },\r\n\r\n    \r\n    '1': { 'default': { fogNear: -40, fogFar: 150, color: 0x0e3e52 }, },\r\n\r\n\r\n    '2': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a1763 }, },\r\n\r\n\r\n    '3': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a6340 }, },\r\n\r\n\r\n    '4': { 'default': { fogNear: 0, fogFar: 80, color: 0xac0000 }, },\r\n}\r\n\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    clearColor: FLOORS_CONF[-1]['outer'].color,\r\n    backgroundColor: FLOORS_CONF[-1]['outer'].color,\r\n    amb: {\r\n        color: FLOORS_CONF[-1]['outer'].color,\r\n        strength: 0.7,\r\n    },\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['start'].color,\r\n        fogNear: FLOORS_CONF['-1']['start'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['start'].fogFar,\r\n        backgroundImgKey: null,\r\n    },\r\n    composerAddPass: 'Saturate',\r\n}\r\n\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [100, -78, 1000],\r\n    //startPos: [90, -10, 360.7140705920112], // beginPlay\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0xffffff,\r\n        strength: 5000,\r\n        pos: [0, 50, 5],\r\n    },\r\n}","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'Hello there!': 'Привет !',\r\n        'Good day, carbon-based life form.':  'День добрый, кремниевая форма жизни.',\r\n    \r\n        'What is this place ?': 'Что это за место?',\r\n        'This is an entrance to the entropic hyper-maze.': 'Это вход в энтропийный гипер-куб.',\r\n    \r\n        'And what happens if I enter it ?': 'Что будет, если я войду в него?',\r\n        'This place is waiting.': 'Куб примет тебя.',\r\n    \r\n        'Say, where do these corridors lead ?': 'Куда ведут эти коридоры ?',\r\n        'They will lead you to the end.': 'Они приведут тебя к финалу.',\r\n    \r\n        'Ooook, I\\'m heading in then.': 'Я пошел дальше.',\r\n        'We will meet again.': 'Мы еще увидимся.',\r\n    \r\n        'What do you do here ?': 'Что ты здесь делаешь ?',\r\n        'Collecting the energy of the night.':  'Собираю энергию ночи.',\r\n    \r\n        'Can you tell me which way is out of here ?': 'В какую сторону мне идти ?',\r\n        'It is about the journey, not the destination': 'Здесь нет сторон. Здесь важна только длина пути.',\r\n    \r\n        'Hey, it looks like I\\'m walking in circles.': 'Я уже долго иду.',\r\n        'You have walked long enough.': 'Ты прошел достаточно для этого уровня.',\r\n    \r\n        'Meaning?': 'Что это значит?',\r\n        'The way to the next level is open to you.': 'Тебе открыт путь на одну ступень выше.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hi, I heard I can find the \"end\" around here?': 'Я ищу финал.',\r\n        'Yes, I told you this is where the corridors lead.': 'Я помню о твоем пути.',\r\n\r\n        'Man, you all look the same.': 'Вы все так похожи.',\r\n        //'We will meet again.': 'Мы еще встретимся.',\r\n\r\n        'Soooo, is that you again ?': 'Это снова ты?',\r\n        'Yes. All of me are myself.': 'Да, мы все едины.',\r\n\r\n        'Yeah, just like those corridors.': 'Тут все коридоры повторяются.',\r\n        'The meaning of everything is in being whole.': 'Суть всего в едином.',\r\n\r\n        'Am I there yet?': 'Как долго еще идти.',\r\n        'The sign will be given when you are.': 'Тебе будет знак, когда ты будешь готов.',\r\n\r\n        'How do I know what it is?': 'Как я узнаю этот знак.',\r\n        'I will give it to you.': 'Я подам его.',\r\n\r\n        'That\\'s the same exact corridor with you again.':  'Это одинаковый сегмент коридора с тобой.',\r\n        'You are ready for the next level.': 'Ты готов к новому уровню.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hey man, seriously, how do I get out of here ?':'Привет снова. Как выбраться. Уже надоело.',\r\n        'You have not reached the end.':'Ты не постиг дзен.',\r\n\r\n        'We\\'ll how do you reach it ?':'Ты-то как выходишь на поверхность?',\r\n        'I have my way.':'У меня свой путь.',\r\n\r\n        'So how\\'s your way btw ?':'Ты все на своем пути?',\r\n        'It is like yourself.': 'Как и ты.',\r\n\r\n        'And how long you\\'ve been on it ?': 'Как долго ты на нем?',\r\n        'These walls can hear us.': 'Эти стены нас слышат.',\r\n\r\n\r\n        'I think you\\'re weighing this corridor down.': 'Мне кажется, ты идешь в нагрузку к этому сегменту коридора.',\r\n        'The next level is open to you.': 'Тебе открыт следующий уровень.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n\r\n        'Look bud, next level or not, nothing\\'s changed at all !':  'Ничего не меняется.',\r\n        'Except the number of steps.': 'Меняется количество пройденных шагов.',\r\n        \r\n        'So this place counts steps ?': 'Это место считает шаги?',\r\n        'This is place is waiting.': 'Это место ждет.',\r\n        \r\n        'How long have you been here ?': 'Как давно ты здесь?',\r\n        'How long is irrelevant. What matters is the journey.': 'Время не имеет значения, значение имеет лишь путь.',\r\n        \r\n        'Then why aren\\'t you on one?': 'Но ты же не идешь.',\r\n        'With you walking for both of us, I do not have to.': 'Зато ты каждый раз проходишь мимо.',\r\n        \r\n        'Look, just make a new level, please.': 'Сделай новый уровень.',\r\n        'You are ready. It is waiting for you.': 'Ты готов - новый уровень ждет тебя.',\r\n\r\n    \r\n        // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n    \r\n        'Wait, you are this place! You control all its fragments.': 'Ты и есть это место. Ты управляешь сегментами.',\r\n        'You have almost reached the end.': 'Ты почти дошел до края.',\r\n        \r\n        'Why do you do this ?': 'Зачем тебе это?',\r\n        'It is my way to warp space. More movement. More fragments.': 'Это способ свернуть пространство. Больше движения. Больше сегментов.',\r\n        \r\n        'How many people have been through here ?': 'Как много путников попадало сюда?',\r\n        'Many are still here.': 'Многие из них до сих пор тут.',\r\n        \r\n        'So where are they?': 'Почему я их не встретил?',\r\n        'Everyone has a different system of fragments.': 'У каждого своя система сегментов.',\r\n        \r\n        'Will you let me out ?': 'Ты выпустишь меня?',\r\n        'All ways lead to the end.': 'Все стороны света открыты тебе.',\r\n        \r\n        'I wanna meet the others.': 'Я хочу встретить других.',\r\n        'The next level is waiting for you.': 'Тебе открыт новый уровень.',\r\n\r\n        // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n\r\n        'Everything\\'s looped here.': 'Я вижу зарево?',\r\n        'Everything is looped with small differences.': 'Это зарево просветления. Ты близок',\r\n\r\n        'How many levels even are there ?': 'Все коридоры повторяются.',\r\n        'It all depends on you.': 'Все повторяется с небольшой разницей.',\r\n\r\n        'That\\'s it, I\\'m done.': 'Все мой путь окончен.',\r\n        'Have you reached your journey\\'s end ?': 'Ты отказываешься идти?',\r\n\r\n        'Yes, you mad bastard! I have !': 'Да, ты безумен.',\r\n        'Then I am giving you the sign.': 'Я освобождаю тебя.',\r\n\r\n\r\n\r\n\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'Level completed': 'Уровень завершен',\r\n        'open': 'пуск',\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null,\r\n        soundLoader = null\r\n\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures') {\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n        }\r\n        if (type === 'soundMp3') {\r\n            return soundLoader = (soundLoader || new THREE.AudioLoader())\r\n        }\r\n\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => {\r\n        getterLoader(type).load(path, resolve)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'Endways': 'Напрямик',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n            isShowControlSound: state.controls.isShowControlSound,\r\n            isMute: state.controls.isMute,\r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n            {props.isShowControls && props.isShowControlSound && <button\r\n                className=\"butt-sound control\"\r\n                onMouseUp={() => { \r\n                    props.gameContext.emitter.emit('toggleSound')(!props.isMute) \r\n                    props.dispatch({ type: 'TOGGLE_MUTE', is: !props.isMute })\r\n                }}\r\n                onTouchEnd={() => { \r\n                    props.gameContext.emitter.emit('toggleSound')(!props.isMute) \r\n                    props.dispatch({ type: 'TOGGLE_MUTE', is: !props.isMute })\r\n                }}\r\n            >\r\n                {props.isMute ? <>&#10236;</> : <>&#10239;</>}\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isShowControlSound: false,\r\n    isMute: false, \r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            // { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            // { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            // { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            // { text: 'Endways', href: 'http://js.otrisovano.ru/endways/' },\r\n\r\n            { text: 'Factory', href: './../chapter01' },\r\n            { text: 'Brige', href: './../chapter02' },\r\n            { text: 'Cube', href: './../chapter03' },\r\n            { text: 'Endways', href: './../chapter04' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        if (action.type === \"TOGGLE_CONTROLS\") {\r\n            return ({\r\n                ...state,\r\n                isShowControls: action.is,\r\n            })\r\n        }\r\n        if (action.type === 'ENABLE_CONTROL_SOUND') {\r\n            return ({\r\n                ...state,\r\n                isShowControlSound: true,\r\n            })\r\n        }\r\n        if (action.type === 'TOGGLE_MUTE') {\r\n            return ({\r\n                ...state,\r\n                isMute: action.is,\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\nimport * as CORE from \"../../../_CORE\";\r\n\r\nconst t = CORE.createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"replicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {t(item.q)}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","let emitter = null\r\nexport const connectEmitterToActions = em => {\r\n    emitter = em\r\n}\r\n\r\n\r\nexport const startPlay = dispatch => ({\r\n    startPlay: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'outer',\r\n    }),\r\n    startFinalFog: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'start',\r\n    }),\r\n})\r\n\r\n\r\nexport const showMessages = dispatch => ({\r\n    toggleFinalMessage: val => dispatch({\r\n        type: 'TOGGLE_FINAL_MESSAGE',\r\n        mode: val,\r\n    })\r\n})\r\n\r\n\r\n\r\nexport const toggleDialog = dispatch => ({\r\n    clickPhrase: r => {\r\n        dispatch({\r\n            type: 'CLICK_PHRASE',\r\n            phrase: r,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'PHRASE_EVENT',\r\n                phrase: r,\r\n            })\r\n        }, 1000)\r\n    },\r\n})\r\n","import { connect } from 'react-redux'\r\nimport { TRANSLATE_WORLDS} from \"../constants/constants_replicies\";\r\nimport { createTranslater } from \"../../../_CORE\";\r\n\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"messages\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{t(item.q)}</div>\r\n                    <div className=\"a\">{t(item.a)}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import './CustomReactComponent.css'\r\nimport { createTranslater } from '../../../_CORE/helpers/helper_translate'\r\nimport { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\nconst mapStateToProps = state => ({\r\n    isButtonDialog: state.ui.isButtonDialog,\r\n    isShowFinalMessage: state.ui.isShowFinalMessage,\r\n    isShowPalleteDialog: state.ui.isShowPalleteDialog\r\n})\r\n\r\n\r\n\r\n\r\nfunction CustomReactComponent(props) {\r\n\r\n    return (\r\n        <>\r\n            {(props.isButtonDialog || props.isShowPalleteDialog) && (\r\n                <div className=\"dialog-wrapper\">\r\n                    <div className=\"dialog-content\">\r\n\r\n                        {props.isShowPalleteDialog && <div className='messages-wrapper'>\r\n                            <BotAnswers />\r\n                            <UserReplicies />\r\n                        </div>}\r\n\r\n                        {props.isButtonDialog && <button\r\n                            className=\"dialog-button-toggle\"\r\n                            onClick={() => props.dispatch({ type: 'TOGGLE_DIALOG', isShowPalleteDialog: !props.isShowPalleteDialog })}>\r\n                            {props.isShowPalleteDialog ? t('close dialog') : t('open dialog') }\r\n                        </button>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className='final-mess'>\r\n                        <button\r\n                            onClick={() => {\r\n                                window.location.replace('./../chapter04')\r\n                            }}>\r\n                            {t('Continue')}\r\n                        </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomReactComponent);\r\n","import { FLOORS_CONF } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\nconst DIALOGS_DATA = [\r\n{\r\n     phrases: [\r\n         {\r\n             q: 'Hello there!',\r\n             a: 'Good day, carbon-based life form.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'What is this place ?',\r\n             a: 'This is an entrance to the entropic hyper-maze.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'And what happens if I enter it ?',\r\n             a: 'This place is waiting.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, \r\n{\r\n     phrases: [\r\n         {\r\n             q: 'Say, where do these corridors lead ?',\r\n             a: 'They will lead you to the end.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Ooook, I\\'m heading in then.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, \r\n{\r\n     phrases: [\r\n         {\r\n             q: 'What do you do here ?',\r\n             a: 'Collecting the energy of the night.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         },\r\n         {\r\n             q: 'Can you tell me which way is out of here ?',\r\n             a: 'It is about the journey, not the destination',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, \r\n{\r\n     phrases: [\r\n         {\r\n             q: 'Hey, it looks like I\\'m walking in circles.',\r\n             a: 'You have walked long enough.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         },{\r\n             q: 'Meaning?',\r\n             a: 'The way to the next level is open to you.',\r\n             event: 'close',\r\n             levelEvent: 'addStairs',\r\n         },\r\n    ]\r\n},\r\n// %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n{\r\n     phrases: [\r\n         {\r\n             q: 'Hi, I heard I can find the \"end\" around here?',\r\n             a: 'Yes, I told you this is where the corridors lead.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Man, you all look the same.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n},\r\n{\r\n         phrases: [\r\n             {\r\n                 q: 'Soooo, is that you again ?',\r\n                 a: 'Yes. All of me are myself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'Yeah, just like those corridors.',\r\n                 a: 'The meaning of everything is in being whole.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n}, \r\n{\r\n         phrases: [\r\n             {\r\n                 q: 'Am I there yet?',\r\n                 a: 'The sign will be given when you are.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'How do I know what it is?',\r\n                 a: 'I will give it to you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n }, \r\n {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s the same exact corridor with you again.',\r\n                 a: 'You are ready for the next level.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n },\r\n// %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n{\r\n         phrases: [\r\n             {\r\n                 q: 'Hey man, seriously, how do I get out of here ?',\r\n                 a: 'You have not reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'We\\'ll how do you reach it ?',\r\n                 a: 'I have my way.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n}, \r\n{\r\n          phrases: [\r\n             {\r\n                 q: 'So how\\'s your way btw ?',\r\n                 a: 'It is like yourself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'And how long you\\'ve been on it ?',\r\n                 a: 'These walls can hear us.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'I think you\\'re weighing this corridor down.',\r\n                 a: 'The next level is open to you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look bud, next level or not, nothing\\'s changed at all !',\r\n                 a: 'Except the number of steps.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So this place counts steps ?',\r\n                 a: 'This is place is waiting.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How long have you been here ?',\r\n                 a: 'How long is irrelevant. What matters is the journey.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Then why aren\\'t you on one?',\r\n                 a: 'With you walking for both of us, I do not have to.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look, just make a new level, please.',\r\n                 a: 'You are ready. It is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Wait, you are this place! You control all its fragments.',\r\n                 a: 'You have almost reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Why do you do this ?',\r\n                 a: 'It is my way to warp space. More movement. More fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How many people have been through here ?',\r\n                 a: 'Many are still here.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So where are they?',\r\n                 a: 'Everyone has a different system of fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Will you let me out ?',\r\n                 a: 'All ways lead to the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'I wanna meet the others.',\r\n                 a: 'The next level is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n    // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Everything\\'s looped here.',\r\n                 a: 'Everything is looped with small differences.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'How many levels even are there ?',\r\n                 a: 'It all depends on you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s it, I\\'m done.',\r\n                 a: 'Have you reached your journey\\'s end ?',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Yes, you mad bastard! I have !',\r\n                 a: 'Then I am giving you the sign.',\r\n                 event: 'close',\r\n                 levelEvent: 'addWell',\r\n             },\r\n         ]\r\n     },\r\n  ]  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const uiState = {\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['start'].color,\r\n        fogNear: FLOORS_CONF['-1']['start'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['start'].fogFar,\r\n        backgroundImgKey: null,\r\n\r\n        //'start': { fogNear: 0, fogFar: 5, color: 0x18257d },\r\n    },\r\n\r\n    playerQuadrant: {\r\n        oldDialogPlayerQuadrant: [0, 0, -50],\r\n        oldQuadrant: [0, 0, 0],\r\n        newQuadrant: [0, 0, 0],\r\n        counter: null,\r\n    },\r\n\r\n    level: {\r\n        isStartCorridorShow: true,\r\n    },\r\n\r\n    \r\n    isShowFinalMessage: false,\r\n    botAnswers: [],\r\n    userReplicies: [],\r\n    history: [],\r\n    isShowControls: true,\r\n    isButtonDialog: false,\r\n    isShowPalleteDialog: false,\r\n\r\n    botIndex: -1,\r\n    //botIndex: 15,\r\n    phraseIndex: 0,\r\n    phrasesData: DIALOGS_DATA,\r\n}\r\n\r\nexport const createCustomStore = root => {\r\n    const ui = function(state = uiState, action) {\r\n\r\n        if (action.type === 'TOGGLE_FINAL_MESSAGE') {\r\n            return ({\r\n                ...state,\r\n                isShowFinalMessage: action.mode,\r\n                isShowControls: false,\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        if (action.type === 'CHANGE_ENVIRONMENT') {\r\n            const { newQuadrant, environmentMode } = action\r\n\r\n            if (!FLOORS_CONF[newQuadrant[1]]) return state;\r\n\r\n            const { fogNear, fogFar, color, backgroundImgKey } = FLOORS_CONF[newQuadrant[1]][environmentMode]\r\n\r\n            root.studio.changeEnvironment({ fogNear, fogFar, color, backgroundImgKey })\r\n\r\n            return ({\r\n                ...state,\r\n                sceneEnvironment: {\r\n                    fogNear,\r\n                    fogFar,\r\n                    color,\r\n                    backgroundImgKey,\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (action.type === 'CHANGE_QUADRANT') {\r\n            const data = {\r\n                ...state,\r\n                playerQuadrant: {\r\n                    ...state.playerQuadrant,\r\n                    ...action,\r\n                },\r\n            }\r\n            root.level.changeQuadrant(data)\r\n            return data\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'DESTROY_START_CORRIDOR') {\r\n            return ({\r\n                ...state,\r\n                level: {\r\n                    ...state.level,\r\n                    isStartCorridorShow: false,\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'CLICK_PHRASE') {\r\n            return ({\r\n                ...state,\r\n                botAnswers: [\r\n                    ...state.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (action.type === 'PHRASE_EVENT') {\r\n            const { event, levelEvent } = action.phrase\r\n            levelEvent && root.emitter.emit('changeLevelMode')(levelEvent)\r\n\r\n            if (event === 'nextReply') {\r\n                const userReplicies = [state.phrasesData[state.botIndex].phrases[state.phraseIndex + 1]]\r\n\r\n                return ({\r\n                    ...state,\r\n                    phraseIndex: state.phraseIndex + 1,\r\n                    userReplicies,\r\n                })\r\n\r\n            }\r\n\r\n            if (event === 'close') {\r\n                return ({\r\n                    ...state,\r\n                    userReplicies: [],\r\n                    isButtonDialog: true,\r\n                    playerQuadrant: {\r\n                        ...state.playerQuadrant,\r\n                        oldDialogPlayerQuadrant: [...state.playerQuadrant.newQuadrant]\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'TOGGLE_DIALOG') {\r\n\r\n            root.player.toggleBlocked(action.isShowPalleteDialog)\r\n\r\n            let isNewBot = false\r\n            const { oldDialogPlayerQuadrant, newQuadrant } = state.playerQuadrant\r\n            if (\r\n                oldDialogPlayerQuadrant[0] !== newQuadrant[0] ||\r\n                oldDialogPlayerQuadrant[1] !== newQuadrant[1] ||\r\n                oldDialogPlayerQuadrant[2] !== newQuadrant[2]\r\n            ) isNewBot = true\r\n\r\n\r\n\r\n\r\n            if (!isNewBot) {\r\n                return ({\r\n                    ...state,\r\n                    isShowPalleteDialog: action.isShowPalleteDialog,\r\n                    isButtonDialog: true,\r\n                })\r\n            }\r\n\r\n\r\n\r\n            const phraseIndex = 0\r\n            const botIndex = state.botIndex + 1\r\n            const isButtonDialog = false\r\n\r\n\r\n            const userReplicies = state.phrasesData[botIndex] ? [state.phrasesData[botIndex].phrases[phraseIndex]] : []\r\n\r\n\r\n            return ({\r\n                ...state,\r\n\r\n                userReplicies,\r\n                botAnswers: [],\r\n                isShowPalleteDialog: action.isShowPalleteDialog,\r\n                isButtonDialog,\r\n                isCanChangeBotIndex: false,\r\n                botIndex,\r\n                phraseIndex,\r\n            })\r\n        }\r\n\r\n        if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n            return ({\r\n                ...state,\r\n                isButtonDialog: action.isButtonDialog,\r\n            })\r\n        }\r\n\r\n\r\n        return state\r\n    }\r\n\r\n    return { ui }\r\n}\r\n\r\n\r\n\r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n\r\n\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._playerCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n\r\n\r\n        this._controlsCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n        this._controlsCamera.position.set(0, 0, 20)\r\n        const controls = new OrbitControls(this._controlsCamera, this._renderer.domElement)\r\n        controls.target.set(0, 0, 0)\r\n        controls.update();\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        this._renderPass = new RenderPass(this._scene, this._controlsCamera)\r\n        this._composer.addPass(this._renderPass)\r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass) {\r\n            if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n                this._composer.addPass(new ShaderPass(Saturate))\r\n            }  \r\n        } \r\n\r\n\r\n\r\n        /** toggle view camera to debug by orbitControls */\r\n        const vec3 = new THREE.Vector3()\r\n        let isPlayerView = true \r\n        let saveFogData = null\r\n        emitter.subscribe('keyEvent')(data => {\r\n            if (!data['o']) {\r\n                return;\r\n            }\r\n\r\n            if (isPlayerView) {\r\n                saveFogData = { ...this._scene.fog }\r\n                this._scene.fog.near = 1000\r\n                this._scene.fog.far = 2000\r\n                isPlayerView = false\r\n                this._renderPass.camera = this._controlsCamera\r\n                this._playerCamera.getWorldPosition(vec3)\r\n                this._controlsCamera.position.x = vec3.x + 100\r\n                this._controlsCamera.position.y = vec3.y + 100\r\n                this._controlsCamera.position.z = vec3.z\r\n                controls.target.set(vec3.x, vec3.y, vec3.z)\r\n                controls.update()\r\n            } else {\r\n                this._scene.fog.near = saveFogData.near\r\n                this._scene.fog.far = saveFogData.far\r\n                isPlayerView = true \r\n                this._renderPass.camera = this._playerCamera\r\n            }\r\n        })\r\n    \r\n        \r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._controlsCamera) {\r\n                this._controlsCamera.aspect = size.width/size.height\r\n                this._controlsCamera.updateProjectionMatrix()\r\n            }\r\n            if (this._playerCamera) {\r\n                this._playerCamera.aspect = size.width/size.height\r\n                this._playerCamera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        this.removeFromScene = this._scene.remove.bind(this._scene)\r\n\r\n\r\n\r\n        const drawFrame = () => {\r\n            this._composer.render(this._scene, this._controlsCamera)\r\n        }\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._playerCamera = cam\r\n        this._renderPass.camera = this._playerCamera\r\n    }\r\n\r\n\r\n    changeEnvironment (sceneEnvironment, conf = null) {\r\n        this._changeFog(sceneEnvironment, conf)\r\n        this._changeBackground(sceneEnvironment, conf)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment, conf) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, (conf && conf.time) || 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    if (conf) { \r\n                        if (conf.updateAmb) this._lightA.color = startData.color\r\n                    } else {\r\n                        this._lightA.color = startData.color\r\n                    }\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n            'p': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break;\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break;\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break;\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break;\r\n                case 79: \r\n                    keys['o'] = isDown\r\n                    break;                \r\n                case 80: \r\n                    keys['p'] = isDown\r\n                default:\r\n                    break;\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        this._root = root\r\n\r\n        const { emitter, studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n            speed,\r\n            offsetFromFloor,\r\n            offsetFromFloorFactor,\r\n            offsetWallCollision,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        let keys = {}\r\n        let isButtonsDisabled = false\r\n        this._isBlocked = true\r\n        this._isCanMove = {\r\n            'up': true,\r\n            'down': true,\r\n        }\r\n\r\n        this._mainObj = new THREE.Object3D()\r\n        this._mainObj.position.fromArray(startPos)\r\n        this._mainObj.rotation.fromArray(startRot)\r\n        this._mainObj.userData.type = 'player'\r\n\r\n        const bottomObj = new THREE.Object3D() \r\n        bottomObj.position.fromArray([0, -.05, 0])\r\n        this._mainObj.add(bottomObj)\r\n\r\n        const frontObj = new THREE.Object3D()\r\n        frontObj.position.fromArray(frontObjPos)\r\n        this._mainObj.add(frontObj)\r\n        this.frontObj = frontObj\r\n\r\n        const backObj = new THREE.Object3D()\r\n        backObj.position.fromArray(backObjPos)\r\n        this._mainObj.add(backObj)\r\n        this.backObj = backObj\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray(pos)\r\n            this._mainObj.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this._mainObj.add(light)\r\n        }\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && (this._mainObj.rotation.y += (speedRot * data.count))\r\n            keys['right'] && (this._mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n            if (this._isBlocked) return;\r\n\r\n            /** check bottom floors */\r\n            if (this._root.systemCollisionFloor) {\r\n                const [\r\n                    isBlockedByItem, \r\n                    offset,\r\n                    point, \r\n                ] = this._root.systemCollisionFloor.checkCollisions(this._mainObj, bottomObj, offsetFromFloor)\r\n                \r\n                if (!isBlockedByItem) {\r\n                    this._mainObj.position.y += speedDown\r\n                } else {\r\n                    if (offset < (offsetFromFloor - 1))  {\r\n                        this._mainObj.translateY(offsetFromFloor - offsetFromFloorFactor - offset)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (!keys) return;\r\n\r\n            if (keys['up']) {\r\n                if (!this._isCanMove['up']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, frontObj, offsetWallCollision)\r\n                   \r\n                        \r\n\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'up' })\r\n            }\r\n\r\n            if (keys['down']) {\r\n                if (!this._isCanMove['down']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, backObj, offsetWallCollision)\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'down' })\r\n            }\r\n\r\n            if (keys['p']) {\r\n                console.log(this._mainObj.position)\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this._mainObj)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this._mainObj\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this._mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","\r\nimport * as THREE from 'three'\r\nimport { S, H } from '../constants/constants_elements'\r\nimport { uiState } from '../store/createStore'\r\n\r\n\r\nconst STANDART_ROOMS = ['room_02', 'room_03', 'room_04', 'room_05']\r\nconst START_ROOMS = ['outer_walls', 'outer_floor', 'outer_road']\r\n\r\n\r\nexport class Level {\r\n    constructor(gameContext) {\r\n        this._root = gameContext\r\n\r\n        const {\r\n            emitter,\r\n            studio,\r\n            assets,\r\n            materials,\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n        } = gameContext\r\n        const { rooms, allMeshes, collisionsBotsRooms } = createLevelMeshes(assets, materials)\r\n\r\n        this._instanceRooms = rooms\r\n\r\n        this.collisionsBotsRooms = collisionsBotsRooms\r\n\r\n\r\n        this._group = new THREE.Group()\r\n        studio.addToScene(this._group)\r\n        this._objRooms = {}\r\n\r\n\r\n        this._state = 'normal' // 'addBot' || 'addStairs' || 'addWell'\r\n        emitter.subscribe('changeLevelMode')(newMode => {\r\n            console.log('changeLevelMode', newMode)\r\n            this._state = newMode\r\n        })\r\n\r\n\r\n        this._createRoom([0, -1, 0], 'room_02')\r\n        this._createRoom([0, -1, -1], 'room_02')\r\n        this._createRoom([-1, -1, 0], 'room_02')\r\n        this._createRoom([1, -1, 0], 'room_02')\r\n\r\n\r\n\r\n        /** add remove start corridors */\r\n        this._startL = {}\r\n        for (let i = 0; i < START_ROOMS.length; ++i) {\r\n            const l = allMeshes[START_ROOMS[i]].clone()\r\n            systemCollisionFloor.setItemToCollision({ mesh: l })\r\n            systemCollisionItems.setItemToCollision({ mesh: l })\r\n            this._group.add(l)\r\n            l.position.set(0, -1 * H, 0)\r\n            this._startL[START_ROOMS[i]] = l\r\n        }\r\n\r\n\r\n        this._wentLevels = 0\r\n        this._flagIsSpecial = false\r\n\r\n\r\n        const { oldQuadrant, newQuadrant } = uiState.playerQuadrant\r\n        this._saveOldQuadrant = oldQuadrant\r\n        this._saveNewQuadrant = newQuadrant\r\n        this._saveIsStartCorridorShow = uiState.level.isStartCorridorShow\r\n    }\r\n\r\n    changeQuadrant (data) {\r\n        const {\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n            emitter,\r\n        } = this._root\r\n\r\n\r\n        if (this._saveIsStartCorridorShow && this._saveIsStartCorridorShow !== data.level.isStartCorridorShow) {\r\n            this._saveIsStartCorridorShow = false\r\n            for (let key in this._startL) {\r\n                systemCollisionFloor.removeItemFromCollision(this._startL[key])\r\n                systemCollisionItems.removeItemFromCollision(this._startL[key])\r\n                this._group.remove(this._startL[key])\r\n            }\r\n            emitter.emit('removeStartBots')()\r\n        }\r\n\r\n\r\n        const { oldQuadrant, newQuadrant, counter } = data.playerQuadrant\r\n\r\n\r\n\r\n        if (\r\n            this._saveOldQuadrant[0] !== oldQuadrant[0] ||\r\n            this._saveOldQuadrant[1] !== oldQuadrant[1] ||\r\n            this._saveOldQuadrant[2] !== oldQuadrant[2] ||\r\n            this._saveNewQuadrant[0] !== newQuadrant[0] ||\r\n            this._saveNewQuadrant[1] !== newQuadrant[1] ||\r\n            this._saveNewQuadrant[2] !== newQuadrant[2]\r\n        ) {\r\n            this._saveOldQuadrant = [...oldQuadrant]\r\n            this._saveNewQuadrant = [...newQuadrant]\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        let keyCreateRoom = STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        if (counter) {\r\n            this._wentLevels = counter(this._wentLevels)\r\n            if (this._flagIsSpecial) {\r\n                this._flagIsSpecial = false\r\n            } else {\r\n                if (this._wentLevels < 3) {\r\n                    this._state = 'normal'\r\n                } else if (this._wentLevels < 100) {\r\n                    if (this._state === 'normal') {\r\n                        this._state = 'addBot'\r\n                    }\r\n                } else {\r\n                    this._state = 'addStairs'\r\n                }\r\n\r\n\r\n                if (this._state === 'addBot') {\r\n                    keyCreateRoom = 'room_01'\r\n                    this._flagIsSpecial = true\r\n                }\r\n                if (this._state === 'addStairs') {\r\n                    keyCreateRoom = 'room_06'\r\n                    this._flagIsSpecial = true\r\n                }\r\n                if (this._state === 'addWell') {\r\n                    keyCreateRoom = 'room_07'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n            const oldKv = oldQuadrant, curKv = newQuadrant\r\n            // move west\r\n            if (curKv[0] < oldKv[0]) {\r\n                console.log('----------- west')\r\n                // remove east\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n\r\n                // set center to east\r\n                this._objRooms[`r_${curKv[0] + 1}_${curKv[1]}_${curKv[2]}`] = this._objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n                // create west\r\n                this._createRoom([oldKv[0] - 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create soush\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n            }\r\n\r\n            // move east\r\n            if (curKv[0] > oldKv[0]) {\r\n                console.log('----------- east')\r\n                // remove west\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n\r\n                // set center to east\r\n                this._objRooms[`r_${curKv[0] - 1}_${curKv[1]}_${curKv[2]}`] = this._objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n                // create east\r\n                this._createRoom([oldKv[0] + 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create south\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n            }\r\n\r\n\r\n            // move north\r\n            if (curKv[2] < oldKv[2]) {\r\n                console.log('-----------north')\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n\r\n                // set center to south\r\n                this._objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] + 1 }`] = this._objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n                // create north\r\n                this._createRoom([oldKv[0], oldKv[1], oldKv[2] - 2], keyCreateRoom)\r\n\r\n                // remove west\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create west\r\n                this._createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n                // remove east\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create east\r\n                this._createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n            }\r\n\r\n\r\n            // move south\r\n            if (curKv[2] > oldKv[2]) {\r\n                console.log('-----------south')\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n\r\n                // set center to north\r\n                this._objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] - 1 }`] = this._objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n                // create south\r\n                this._createRoom([oldKv[0], oldKv[1], oldKv[2] + 2], keyCreateRoom)\r\n\r\n                // remove west\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create west\r\n                this._createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n                // remove east\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create east\r\n                this._createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n            }\r\n\r\n            // move top\r\n            if (curKv[1] > oldKv[1] || curKv[1] < oldKv[1]) {\r\n                console.log('-----------top')\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] - 1])\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create south\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] + 1])\r\n                // remove left\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create left\r\n                this._createRoom([curKv[0] - 1, curKv[1], curKv[2]])\r\n                // remove right\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create right\r\n                this._createRoom([curKv[0] + 1, curKv[1], curKv[2]])\r\n            }\r\n\r\n    }\r\n\r\n    _createRoom (kv, key) {\r\n        const {\r\n            emitter,\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n        } = this._root\r\n\r\n\r\n        const instanceKey = key || STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n\r\n        const objKey = `r_${kv[0]}_${kv[1]}_${kv[2]}`\r\n\r\n        const mesh = this._instanceRooms[instanceKey].clone()\r\n        mesh.position.set(kv[0] * S, kv[1] * H, kv[2] * S)\r\n        systemCollisionFloor.setItemToCollision({ mesh })\r\n        systemCollisionItems.setItemToCollision({ mesh })\r\n        this._group.add(mesh)\r\n        this._objRooms[objKey] = mesh\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'createRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isAddBot: instanceKey === 'room_01'\r\n        })\r\n\r\n        instanceKey === 'room_06' && this._createRoom([kv[0], kv[1] + 1, kv[2]], 'room_dummy')\r\n    }\r\n\r\n\r\n    _removeRoom(kv) {\r\n        const {\r\n            emitter,\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n        } = this._root\r\n\r\n        const objKey = `r_${ kv[0] }_${ kv[1] }_${ kv[2] }`\r\n        if (!this._objRooms[objKey]) return;\r\n\r\n\r\n        const instanceKey = this._objRooms[objKey].name\r\n\r\n\r\n        this._group.remove(this._objRooms[objKey])\r\n        systemCollisionItems.removeItemFromCollision(this._objRooms[objKey])\r\n        systemCollisionFloor.removeItemFromCollision(this._objRooms[objKey])\r\n        delete this._objRooms[objKey]\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'destroyRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isRemoveBot: instanceKey === 'room_01'\r\n        })\r\n\r\n        instanceKey === 'room_dummy' && this._removeRoom([kv[0], kv[1] - 1, kv[2]])\r\n        instanceKey === 'room_06' && this._removeRoom([kv[0], kv[1] + 1, kv[2]])\r\n    }\r\n\r\n}\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const rooms = {}\r\n    const collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"room_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            rooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"collision_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            collisionsBotsRooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_walls\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_road\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_floor\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        collisionsBotsRooms,\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level-rooms.5251ade2.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/px.2be78f43.jpg\";","export default __webpack_public_path__ + \"static/media/nx.b2401269.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.462f1251.jpg\";","export default __webpack_public_path__ + \"static/media/pz.8ea5ba14.jpg\";","export default __webpack_public_path__ + \"static/media/nz.7f255b96.jpg\";","import * as THREE from 'three'\r\nimport { GLTFCopy } from '../../../_CORE/helpers/helper_GLTFcopy'\r\n\r\n\r\nconst OFFSETS = {\r\n    'room_01': { x: 55, z: 75}\r\n}\r\n\r\nexport class Bot {\r\n    constructor () {\r\n        this.inScene = false\r\n\r\n        this._state = 'go' // || 'rotate' || 'say'\r\n\r\n        this._targetAngle = null\r\n\r\n\r\n        this.container = new THREE.Group()\r\n\r\n        this.mesh = new THREE.Group()\r\n        this.mesh.position.x = OFFSETS['room_01'].x\r\n        this.mesh.position.z = OFFSETS['room_01'].z\r\n        this.mesh.rotation.y = Math.random() * (2 * Math.PI)\r\n        this.container.add(this.mesh)\r\n\r\n        this._objFrom = new THREE.Object3D()\r\n        this.mesh.add(this._objFrom)\r\n\r\n\r\n        this._objTo = new THREE.Object3D()\r\n        this._objTo.position.set(0, 0, 1)\r\n        this.mesh.add(this._objTo)\r\n\r\n\r\n        const copy = GLTFCopy(Bot.botScene)\r\n        this.model = copy.scene.children[0]\r\n        this.model.children[1].material = Bot.botMaterial\r\n        this._animations = Bot.botScene.animations\r\n        this._mixer = new THREE.AnimationMixer(this.model.children[1])\r\n        this._walkAction = this._mixer.clipAction(this._animations[1])\r\n        this._walkAction.play()\r\n        this._walkAction.timeScale = .7\r\n\r\n        this._speakAction = this._mixer.clipAction(this._animations[0])\r\n        this._speakAction.timeScale = .4\r\n\r\n        this.mesh.add(this.model)\r\n    }\r\n\r\n\r\n    update (data) {\r\n        this._mixer.update(data.delta)\r\n\r\n        if (!this._componentCollision) return;\r\n\r\n        this._updateState()\r\n    }\r\n\r\n\r\n    setCollisionMesh (mesh) {\r\n        this._collisionMeshes = [mesh]\r\n        this.container.add(mesh)\r\n        mesh.material.visible = false\r\n\r\n\r\n        this._componentCollision = createComponentCollisionWalls(this._objFrom, this._objTo, 7, this._collisionMeshes)\r\n    }\r\n\r\n    removeCollisionMesh () {\r\n        this._collisionMeshes = null\r\n        this._componentCollision = null\r\n    }\r\n\r\n\r\n    prepareToSay (pos) {\r\n        this._state = 'say'\r\n        this._walkAction.stop()\r\n        this._speakAction.play()\r\n        this.mesh.lookAt(pos.x, this.container.position.y, pos.z)\r\n    }\r\n\r\n\r\n    /** internal *****************************/\r\n\r\n    _updateState () {\r\n        if (this._state === 'go') {\r\n            const isNear = this._componentCollision.check()\r\n            if (!isNear) {\r\n                this.mesh.translateZ(0.05)\r\n            } else {\r\n                this._startRotate()\r\n            }\r\n        }\r\n\r\n        if (this._state === 'rotate') {\r\n            this.mesh.rotation.y += ((this._targetAngle - this.mesh.rotation.y) < 0) ? -.01 : .01\r\n            this.mesh.rotation.y %= 2 * Math.PI\r\n            const isComplete = Math.abs(this.mesh.rotation.y - this._targetAngle) < .5\r\n            isComplete && this._startGo()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _startGo () {\r\n        this._state = 'go'\r\n        this._walkAction.play()\r\n        this._speakAction.stop()\r\n    }\r\n\r\n\r\n    _startRotate() {\r\n        this._state = 'rotate'\r\n        this._targetAngle = (this.mesh.rotation.y + 1.5 + Math.random() * 4) % (2 * Math.PI)\r\n    }\r\n}\r\n\r\nBot.botScene = null\r\nBot.botMaterial = null\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFrom, objTo, offset, arrWalls) => {\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            objFrom.getWorldPosition(vec3Src2)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2, 0, 20)\r\n            const intersectsWalls = raycasterWalls.intersectObject(arrWalls[0], true)\r\n\r\n            return !!intersectsWalls[0]\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","import * as THREE from 'three'\r\nimport { Bot } from '../Entities/Bot'\r\n\r\n\r\nconst S = 175.335\r\nconst H = 70\r\nconst H_BOT = 14\r\n\r\n\r\nexport class Bots {\r\n    constructor(gameContext) {\r\n        const { assets, emitter, store, studio, materials } = gameContext\r\n\r\n        Bot.botMaterial = materials.iron\r\n        Bot.botScene = assets.bot\r\n\r\n\r\n\r\n        const groupBots = new THREE.Group()\r\n        studio.addToScene(groupBots)\r\n\r\n\r\n        const arrBots = []\r\n        this.arrBots = arrBots\r\n\r\n\r\n        let botRooms = null\r\n        if (gameContext['level'] && gameContext['level'].collisionsBotsRooms) {\r\n            botRooms = gameContext['level'].collisionsBotsRooms\r\n        }\r\n\r\n\r\n        for (let i = 0; i < 5; ++i) {\r\n            const bot = new Bot()\r\n            groupBots.add(bot.container)\r\n            bot.container.position.set(-30 + i * 30, -92, 750)\r\n            bot.inScene = 'aaa'\r\n            botRooms && bot.setCollisionMesh(botRooms['collision_r_01'].clone())\r\n            arrBots.push(bot)\r\n        }\r\n\r\n\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(data => {\r\n            for (let i = 0; i < arrBots.length; ++i) arrBots[i].inScene && arrBots[i].update(data)\r\n        })\r\n\r\n\r\n        \r\n        emitter.subscribe('removeStartBots')(() => {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                arrBots[i].inScene = null\r\n                arrBots[i].container.position.y = -10000\r\n                arrBots[i].removeCollisionMesh()\r\n            }\r\n        })\r\n\r\n\r\n    \r\n        emitter.subscribe('levelChanged')(({ objKey, kv, isAddBot, isRemoveBot }) => {\r\n            if (isAddBot) {\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    if (!arrBots[i].inScene) {\r\n                        arrBots[i].inScene = objKey\r\n                        arrBots[i].container.position.set(kv[0] * S, kv[1] * H + H_BOT, kv[2] * S)\r\n                        botRooms && arrBots[i].setCollisionMesh(botRooms['collision_r_01'].clone())\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (isRemoveBot) {\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    if (arrBots[i].inScene === objKey) {\r\n                        arrBots[i].inScene = null\r\n                        arrBots[i].container.position.y = -10000\r\n                        arrBots[i].removeCollisionMesh()\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/botMap.972e276e.png\";","export default __webpack_public_path__ + \"static/media/botAnim2.47b6030d.glb\";","export default __webpack_public_path__ + \"static/media/posx.be2d83a2.jpg\";","export default __webpack_public_path__ + \"static/media/negx.d016c8e7.jpg\";","export default __webpack_public_path__ + \"static/media/posy.01cfd221.jpg\";","export default __webpack_public_path__ + \"static/media/negy.f01f8356.jpg\";","export default __webpack_public_path__ + \"static/media/posz.ef37b8e1.jpg\";","export default __webpack_public_path__ + \"static/media/negz.f346a80a.jpg\";","import { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport const START_LAYER_STATE = 'outer'\r\n\r\n\r\n\r\n\r\n\r\nexport const CHANGE_LAYER_STATE = [\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'outer', newState: 'corridor',\r\n        oldQuadrant: [0, -2, 4], newQuadrant: [0, -2, 3],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n                backgroundImg: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'corridor', newState: 'outer',\r\n        oldQuadrant: [0, -2, 3], newQuadrant: [0, -2, 4],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'outer',\r\n            },\r\n        ]\r\n    },\r\n\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'corridor', newState: 'firstRoom',\r\n        oldQuadrant: [0, -1, 2], newQuadrant: [0, -1, 1],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'firstRoomLight',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'corridor',\r\n        oldQuadrant: [0, -1, 1], newQuadrant: [0, -1, 2],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: [0, -1, 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                type: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_MINUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                type: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_PLUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                type: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_PLUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: () => 0,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: () => 100,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_MINUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_PLUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_PLUS_ONE'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n]\r\n\r\n\r\n\r\nexport class ChangerQuadrant {\r\n    constructor(root) {\r\n        const { emitter, dispatcher } = root\r\n        const checkerNewQuadrant = createCheckerNewQuadrant()\r\n\r\n\r\n        emitter.subscribe('playerMove')(({ pos }) => {\r\n            const data = checkerNewQuadrant.update(pos)\r\n            const { currentQuadrant, oldQuadrant, isChanged } = data\r\n\r\n            if (!isChanged) return;\r\n\r\n            const arrEmitData = getEmitsByChangeQuadrant(oldQuadrant, currentQuadrant)\r\n\r\n            arrEmitData.length && \r\n                arrEmitData.forEach(item => dispatcher.dispatch({ ...item }))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet levelState = START_LAYER_STATE\r\n\r\n\r\nexport const getEmitsByChangeQuadrant = (playerOldQ, playerNewQ) => {\r\n    for (let i = 0; i < CHANGE_LAYER_STATE.length; ++i) {\r\n        const data = getData(\r\n            [...playerOldQ],\r\n            [...playerNewQ],\r\n            {\r\n                ...CHANGE_LAYER_STATE[i],\r\n                oldQuadrant: [...CHANGE_LAYER_STATE[i].oldQuadrant],\r\n                newQuadrant: [...CHANGE_LAYER_STATE[i].newQuadrant],\r\n            }\r\n        )\r\n        if (data) return data;\r\n    }\r\n    return { levelState }\r\n}\r\n\r\n\r\n\r\n\r\nconst getData = (playerOldQ, playerNewQ, conf) => {\r\n    const { oldState, newState, oldQuadrant, newQuadrant, emitData } = conf\r\n\r\n    if (levelState !== oldState)\r\n        return;\r\n\r\n\r\n    if (oldQuadrant[0] === 'ANY') oldQuadrant[0] = playerOldQ[0]\r\n    if (oldQuadrant[1] === 'ANY') oldQuadrant[1] = playerOldQ[1]\r\n    if (oldQuadrant[2] === 'ANY') oldQuadrant[2] = playerOldQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY') newQuadrant[0] = playerNewQ[0]\r\n    if (newQuadrant[1] === 'ANY') newQuadrant[1] = playerNewQ[1]\r\n    if (newQuadrant[2] === 'ANY') newQuadrant[2] = playerNewQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY_PLUS_ONE') newQuadrant[0] = playerOldQ[0] + 1\r\n    if (newQuadrant[1] === 'ANY_PLUS_ONE') newQuadrant[1] = playerOldQ[1] + 1\r\n    if (newQuadrant[2] === 'ANY_PLUS_ONE') newQuadrant[2] = playerOldQ[2] + 1\r\n\r\n    if (newQuadrant[0] === 'ANY_MINUS_ONE') newQuadrant[0] = playerOldQ[0] - 1\r\n    if (newQuadrant[1] === 'ANY_MINUS_ONE') newQuadrant[1] = playerOldQ[1] - 1\r\n    if (newQuadrant[2] === 'ANY_MINUS_ONE') newQuadrant[2] = playerOldQ[2] - 1\r\n\r\n\r\n    if (\r\n        oldQuadrant[0] !== playerOldQ[0] ||\r\n        oldQuadrant[1] !== playerOldQ[1] ||\r\n        oldQuadrant[2] !== playerOldQ[2] ||\r\n        newQuadrant[0] !== playerNewQ[0] ||\r\n        newQuadrant[1] !== playerNewQ[1] ||\r\n        newQuadrant[2] !== playerNewQ[2]\r\n    ) return;\r\n\r\n\r\n    levelState = newState\r\n\r\n    return emitData.map(item => ({\r\n        ...item,\r\n        levelState,\r\n        oldQuadrant: [...oldQuadrant],\r\n        newQuadrant: [...newQuadrant],\r\n    }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst createCheckerNewQuadrant = function () {\r\n    let oldQuadrant = []\r\n\r\n    return {\r\n        update ({ x, y, z}) {\r\n            const currentQuadrant = [Math.floor(x / S), Math.floor(y / H), Math.floor(z / S)]\r\n\r\n            if (\r\n                currentQuadrant[0] !== oldQuadrant[0] ||\r\n                currentQuadrant[1] !== oldQuadrant[1] ||\r\n                currentQuadrant[2] !== oldQuadrant[2]\r\n            ) {\r\n                const data = {\r\n                    isChanged: true,\r\n                    currentQuadrant,\r\n                    oldQuadrant,\r\n                }\r\n                oldQuadrant = [...currentQuadrant]\r\n\r\n                return data\r\n            } else {\r\n                return { isChanged: false }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCheckerNearItem {\r\n    constructor() {\r\n        this._itemWorldPos = new THREE.Vector3()\r\n        this._mainCheckerWorldPos = new THREE.Vector3()\r\n\r\n        this._arr = []\r\n    }\r\n\r\n\r\n    setItemToCheck (mesh) {\r\n        this._arr.push(mesh)\r\n    }\r\n\r\n    checkNear (mainMesh, dist) {\r\n        mainMesh.getWorldPosition(this._mainCheckerWorldPos)\r\n\r\n        for (let i = 0; i < this._arr.length; ++i) {\r\n            if (!this._arr[i].userData.inScene) continue;\r\n\r\n            this._arr[i].getWorldPosition(this._itemWorldPos)\r\n            const distance = this._itemWorldPos.distanceTo(this._mainCheckerWorldPos)\r\n            if (distance < dist) {\r\n                return [true, this._arr[i].userData]\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}\r\n\r\n","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCollisionWithItems {\r\n    constructor(root) {\r\n        this._root = root\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision ({\r\n        mesh,\r\n        itemKeyEmitCollision = null,\r\n        isStopUnits = true\r\n    }) {\r\n        mesh.userData.itemKeyEmitCollision = itemKeyEmitCollision\r\n        mesh.userData.isStopUnits = isStopUnits\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, d) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0]) {\r\n            if (intersects[0].distance < d) {\r\n                if (intersects[0].object.userData.itemKeyEmitCollision) {\r\n                    this._root.emitter.emit('collision')({ \r\n                        ...intersects[0].object.userData.itemKeyEmitCollision, \r\n                        type2: objFrom.userData.type \r\n                    })\r\n                }\r\n\r\n                if (intersects[0].object.userData.isStopUnits) {\r\n                    return [ true, intersects[0].distance, intersects[0].point ]\r\n                }\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { Ui } from '../ui/Ui'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer'\r\n\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../../../assets/level-rooms.obj'\r\nimport mapFloorOuter from '../../../assets/floor_outer_map.jpg'\r\nimport pxjpg from '../../../assets/skybox/px.jpg'\r\nimport nxjpg from '../../../assets/skybox/nx.jpg'\r\nimport pyjpg from '../../../assets/skybox/py.jpg'\r\nimport nyjpg from '../../../assets/skybox/ny.jpg'\r\nimport pzjpg from '../../../assets/skybox/pz.jpg'\r\nimport nzjpg from '../../../assets/skybox/nz.jpg'\r\n\r\n\r\nimport { Bots } from '../systems/system_bots'\r\nimport botMap from '../../../assets/botMap.png'\r\nimport botSrc from '../../../assets/botAnim2.glb'\r\nimport pxjpg2 from '../../../assets/matIronBox/posx.jpg'\r\nimport nxjpg2 from '../../../assets/matIronBox/negx.jpg'\r\nimport pyjpg2 from '../../../assets/matIronBox/posy.jpg'\r\nimport nyjpg2 from '../../../assets/matIronBox/negy.jpg'\r\nimport pzjpg2 from '../../../assets/matIronBox/posz.jpg'\r\nimport nzjpg2 from '../../../assets/matIronBox/negz.jpg'\r\n\r\n\r\nimport { ChangerQuadrant } from \"../store/actionByChangeQuadrant\"\r\nimport { Component_PlayerInBot } from '../components/component_playerInBot'\r\nimport { StarterPlay } from '../actions/StarterPlay'\r\nimport { EnderPlay } from '../actions/EnderPlay'\r\nimport { SystemCollisionWithItems } from \"../../../_CORE/systems/SystemCollisionsItems\"\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'customUi',\r\n        constr: Ui,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: Helper_TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionFloor',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionItems',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: Helper_MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'bots',\r\n        constr: Bots,\r\n        initStateKey: 'beforeStartPlay',\r\n            assetsToLoad: [\r\n                { type: 'glb', path: botSrc, key: 'bot' },\r\n                { type: 'img', path: botMap, key: 'botMap' },\r\n                { type: 'cubeTextures', path: [  pxjpg2, nxjpg2, pyjpg2, nyjpg2, pzjpg2, nzjpg2, ], key: 'ironEnv' },\r\n            ]\r\n    },\r\n    {\r\n        key: 'changerQuadrant',\r\n        constr: ChangerQuadrant,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'playerInBot',\r\n        constr: Component_PlayerInBot,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'starterPlay',\r\n        constr: StarterPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'enderPlay',\r\n        constr: EnderPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","import { UI } from '../../../_CORE/ui/UI'\r\nimport CustomReactComponent from \"./CustomReactComponent\";\r\nimport { createCustomStore  } from \"../store/createStore\";\r\n\r\nexport class Ui {\r\n    constructor(root) {\r\n\r\n        root.appWrapper = document.querySelector('.app-wrapper')\r\n        root.CustomReactComponent = CustomReactComponent\r\n        root.customStore = createCustomStore(root)\r\n\r\n        const ui = new UI(root)\r\n        root.ui = ui\r\n    }\r\n}","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { CompressedTextureLoader } from 'three';\r\nimport { SystemCheckerNearItem } from \"../../../_CORE/systems/SystemCheckerNearItem\";\r\n\r\n\r\nconst MAX_DIALOG_DIST_TO_BOT = 30\r\nconst MIN_DIST_TO_BOT = 12\r\n\r\n\r\nexport class Component_PlayerInBot {\r\n    constructor(root) {\r\n        const {\r\n            bots,\r\n            emitter,\r\n            dispatcher,\r\n            player,\r\n        } = root\r\n\r\n\r\n        const checkerNearItems = new SystemCheckerNearItem(root)\r\n        for (let i = 0; i < bots.arrBots.length; ++i) {\r\n            checkerNearItems.setItemToCheck(bots.arrBots[i].mesh)\r\n        }\r\n\r\n\r\n        const botWorldPos = new THREE.Vector3()\r\n\r\n\r\n        const isPlayerCanMove = {\r\n            'up': true,\r\n            'down': false,\r\n        }\r\n        let blockBot = null\r\n\r\n\r\n\r\n        const togglePlayerMove = (data, distance, indexBot) => {\r\n            if (\r\n                data.dir === 'up' && \r\n                isPlayerCanMove['up'] &&\r\n                blockBot === null && \r\n                distance < MIN_DIST_TO_BOT\r\n            ) {\r\n                bots.arrBots[indexBot].prepareToSay(data.pos)\r\n                blockBot = indexBot \r\n                isPlayerCanMove['up'] = false\r\n                player.toggleCanMove('up', false)\r\n            }\r\n\r\n\r\n            if (\r\n                !isPlayerCanMove['up'] &&\r\n                blockBot === indexBot && \r\n                distance > MIN_DIST_TO_BOT\r\n            ) {\r\n                blockBot = null\r\n                isPlayerCanMove['up'] = true\r\n                player.toggleCanMove('up', true)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        emitter.subscribe('playerMove')(data => {\r\n            for (let i = 0; i < bots.arrBots.length; ++i) {\r\n                if (!bots.arrBots[i].inScene) continue;\r\n\r\n\r\n                bots.arrBots[i].mesh.getWorldPosition(botWorldPos)\r\n                const distance = botWorldPos.distanceTo(data.pos)\r\n\r\n                if (bots.arrBots[i]._state === 'say' && distance > MAX_DIALOG_DIST_TO_BOT) {\r\n                    dispatcher.dispatch({\r\n                        type: 'TOGGLE_BUTTON',\r\n                        isButtonDialog: false,\r\n                    })\r\n                    bots.arrBots[i]._startRotate()\r\n                    continue;\r\n                }\r\n\r\n\r\n                if (bots.arrBots[i]._state !== 'say' && distance < MAX_DIALOG_DIST_TO_BOT) {\r\n                    bots.arrBots[i].prepareToSay(data.pos)\r\n                    dispatcher.dispatch({\r\n                        type: 'TOGGLE_BUTTON',\r\n                        isButtonDialog: true,\r\n                    })\r\n                }\r\n\r\n                togglePlayerMove(data, distance, i)\r\n            }\r\n        })\r\n    }\r\n}","export class StarterPlay {\r\n    constructor (root) {\r\n        const { player, ui, dispatcher } = root\r\n        \r\n        dispatcher.dispatch({ \r\n            type: 'CHANGE_INFO_CHAPTER', \r\n            currentChapterIndex: 2 \r\n        })\r\n\r\n        ui.showStartButton(() => {          \r\n            dispatcher.dispatch({\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                newQuadrant: [0, -1, -50],\r\n                environmentMode: 'back',\r\n            })\r\n            player.toggleBlocked(false)\r\n        })\r\n    }\r\n}\r\n","import { showMessages, startPlay } from \"../store/actions\";\r\nimport {FRAME_UPDATE} from \"../constants/constants_elements\";\r\n\r\n\r\nexport class EnderPlay {\r\n    constructor (gameContext) {\r\n        const { player, emitter, dispatcher } = gameContext\r\n\r\n\r\n\r\n        const finalComplete = () => {\r\n            setTimeout(() => {\r\n                startPlay(dispatcher.dispatch).startFinalFog()\r\n                setTimeout(() => {\r\n                    showMessages(dispatcher.dispatch).toggleFinalMessage(true)\r\n                }, 6000)\r\n            }, 10000)\r\n        }\r\n\r\n\r\n\r\n\r\n        const playerObj = player.getObj()\r\n\r\n        let oldY = playerObj.position.y\r\n        let countDropped = 0\r\n        let isGameComplete = false\r\n\r\n\r\n        const update = () => {\r\n            if (oldY > playerObj.position.y) {\r\n                ++countDropped\r\n                oldY = playerObj.position.y\r\n                //console.log('drop', countDropped, 'old', oldY, 'plY', playerObj.position.y)\r\n            } \r\n            \r\n            if (oldY < playerObj.position.y) {\r\n                //console.log('reset', countDropped, 'old', oldY, 'plY', playerObj.position.y)\r\n                oldY = playerObj.position.y\r\n                countDropped = 0\r\n            }\r\n            \r\n            if (countDropped > 800 && !isGameComplete) {\r\n                isGameComplete = true\r\n                finalComplete()\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(update)\r\n    }\r\n}","import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { TRANSLATE_WORLDS } from \"./constants/constants_replicies\"\r\n\r\n\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, { ...CONSTANTS, TRANSLATE_WORLDS }))\r\n"],"sourceRoot":""}