{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","chapter03/src/constants/constants_elements.js","chapter03/src/constants/constants_replicies.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/helpers/helper_translate.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","chapter03/src/ui/UserReplicies.js","chapter03/src/store/actions.js","chapter03/src/ui/BotAnswers.js","chapter03/src/ui/CustomReactComponent.js","chapter03/src/store/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer.js","_CORE/helpers/helper_MaterialsLib.js","chapter03/src/systems/system_level.js","assets/level-rooms.obj","assets/floor_outer_map.jpg","assets/skybox/px.jpg","assets/skybox/nx.jpg","assets/skybox/py.jpg","assets/skybox/ny.jpg","assets/skybox/pz.jpg","assets/skybox/nz.jpg","chapter03/src/Entities/Bot.js","_CORE/helpers/helper_GLTFcopy.js","chapter03/src/systems/system_bots.js","assets/botMap.png","assets/botAnim2.glb","assets/matIronBox/posx.jpg","assets/matIronBox/negx.jpg","assets/matIronBox/posy.jpg","assets/matIronBox/negy.jpg","assets/matIronBox/posz.jpg","assets/matIronBox/negz.jpg","chapter03/src/store/actionByChangeQuadrant.js","_CORE/systems/SystemCheckerNearItem.js","_CORE/systems/SystemCollisionsItems.js","chapter03/src/constants/constants_modules.js","chapter03/src/ui/Ui.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter03/src/components/component_playerInBot.js","chapter03/src/actions/StarterPlay.js","chapter03/src/actions/EnderPlay.js","chapter03/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","MATERIALS_CONFIG","mat","props","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","map","skinning","S","H","FRAME_UPDATE","FLOORS_CONF","fogNear","fogFar","backgroundImgKey","studioConfig","canId","rendererCon","antialias","clearColor","backgroundColor","amb","strength","sceneEnvironment","composerAddPass","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","TRANSLATE_WORLDS","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","createTranslater","vocab","word","t","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseDown","emit","onTouchStart","onMouseUp","onTouchEnd","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","CORE","UserReplicies","userReplicies","ui","clickPhrase","r","phrase","q","Math","floor","random","BotAnswers","botAnswers","isButtonDialog","isShowFinalMessage","isShowPalleteDialog","uiState","playerQuadrant","oldDialogPlayerQuadrant","oldQuadrant","newQuadrant","counter","isStartCorridorShow","history","botIndex","phraseIndex","phrasesData","phrases","event","levelEvent","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_camera","_composer","EffectComposer","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","_backgroundImgKey","cam","addPass","RenderPass","ShaderPass","_changeFog","_changeBackground","startData","endData","TWEEN","to","onUpdate","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","is","Player","studio","isButtonsDisabled","_isBlocked","_isCanMove","_mainObj","position","fromArray","rotation","userData","bottomObj","frontObj","backObj","strenth","light","y","count","systemCollisionFloor","checkCollisions","isBlockedByItem","offset","point","systemCollisionItems","translateZ","dir","isOpen","setCamera","x","z","set","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","STANDART_ROOMS","START_ROOMS","Level","createLevelMeshes","rooms","allMeshes","collisionsBotsRooms","_instanceRooms","_group","_objRooms","_state","newMode","_createRoom","_startL","clone","setItemToCollision","mesh","_wentLevels","_flagIsSpecial","_saveOldQuadrant","_saveNewQuadrant","_saveIsStartCorridorShow","removeItemFromCollision","remove","keyCreateRoom","oldKv","curKv","_removeRoom","kv","instanceKey","objKey","typeLevelChange","isAddBot","name","isRemoveBot","traverse","child","includes","geometry","wall","green","road","OFFSETS","Bot","inScene","_targetAngle","container","PI","_objFrom","_objTo","copy","gltf","animations","scene","skinnedMeshes","node","isSkinnedMesh","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","botScene","model","children","material","botMaterial","_animations","_mixer","_walkAction","clipAction","play","timeScale","_speakAction","update","delta","_componentCollision","_updateState","_collisionMeshes","visible","createComponentCollisionWalls","stop","lookAt","check","_startRotate","abs","_startGo","objFrom","objTo","arrWalls","vec3Src2","vec3Ray2","getWorldPosition","sub","intersectObject","CHANGE_LAYER_STATE","oldState","newState","emitData","environmentMode","backgroundImg","levelState","getEmitsByChangeQuadrant","playerOldQ","playerNewQ","getData","conf","createCheckerNewQuadrant","currentQuadrant","isChanged","SystemCheckerNearItem","_itemWorldPos","_mainCheckerWorldPos","_arr","mainMesh","dist","distanceTo","SystemCollisionWithItems","_arrMeshes","_vecStart","_vecDir","_rayCaster","itemKeyEmitCollision","isStopUnits","d","intersects","intersectObjects","distance","object","type2","GAME_MODULES","appWrapper","mode","changeEnvironment","changeQuadrant","isNewBot","isCanChangeBotIndex","createCustomStore","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","max","min","fullscreenElement","emitFrameUpdate","time","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","mapFloorOuter","wrap","iron","bot","groupBots","arrBots","botRooms","setCollisionMesh","removeCollisionMesh","botSrc","botMap","pxjpg2","nxjpg2","pyjpg2","nyjpg2","pzjpg2","nzjpg2","checkerNewQuadrant","arrEmitData","bots","checkerNearItems","setItemToCheck","botWorldPos","prepareToSay","player","showStartButton","toggleBlocked","playerObj","getObj","oldY","countDropped","isGameComplete","startPlay","startFinalFog","toggleFinalMessage","showMessages","pipeLineForInit"],"mappings":"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","file":"static/js/main.7f89dd1e.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","export const MATERIALS_CONFIG = {\r\n\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'green': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xa1129f,\r\n            emissive: 0xa1129f,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/** size element */\r\nexport const S = 175.335\r\nexport const H = 70\r\n\r\n\r\n\r\n/** emitter constants */\r\nexport const FRAME_UPDATE = 'FRAME_UPDATE'\r\n\r\n\r\n\r\n\r\nexport const FLOORS_CONF = {\r\n    '-2': {\r\n        'outer': { fogNear: -200, fogFar: 500, color: 0x18257d },\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x8805a8 },\r\n    },\r\n\r\n   \r\n\r\n    '-1': {\r\n        'start': { fogNear: 0, fogFar: 5, color: 0x18257d },\r\n        'outer': { fogNear: 20, fogFar: 500, color: 0x18257d },\r\n        'back': { fogNear: 20, fogFar: 500, color: 0x18257d, backgroundImgKey: 'skyBox' },\r\n        'firstRoomLight': { fogNear: -40, fogFar: 150, color: 0x00235e},\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x2e118b },\r\n    },\r\n\r\n\r\n    '0': { 'default': { fogNear: -40, fogFar: 150, color: 0x3c4900 }, },\r\n\r\n    \r\n    '1': { 'default': { fogNear: -40, fogFar: 150, color: 0x0e3e52 }, },\r\n\r\n\r\n    '2': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a1763 }, },\r\n\r\n\r\n    '3': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a6340 }, },\r\n\r\n\r\n    '4': { 'default': { fogNear: 0, fogFar: 80, color: 0xac0000 }, },\r\n}\r\n\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    clearColor: FLOORS_CONF[-1]['outer'].color,\r\n    backgroundColor: FLOORS_CONF[-1]['outer'].color,\r\n    amb: {\r\n        color: FLOORS_CONF[-1]['outer'].color,\r\n        strength: 0.7,\r\n    },\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['start'].color,\r\n        fogNear: FLOORS_CONF['-1']['start'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['start'].fogFar,\r\n        backgroundImgKey: null,\r\n    },\r\n    composerAddPass: 'Saturate',\r\n}\r\n\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [100, -78, 1000],\r\n    //startPos: [90, -10, 360.7140705920112], // beginPlay\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0xffffff,\r\n        strength: 5000,\r\n        pos: [0, 50, 5],\r\n    },\r\n}","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'Hello there!': 'Привет !',\r\n        'Good day, carbon-based life form.':  'День добрый, кремниевая форма жизни.',\r\n    \r\n        'What is this place ?': 'Что это за место?',\r\n        'This is an entrance to the entropic hyper-maze.': 'Это вход в энтропийный гипер-куб.',\r\n    \r\n        'And what happens if I enter it ?': 'Что будет, если я войду в него?',\r\n        'This place is waiting.': 'Куб примет тебя.',\r\n    \r\n        'Say, where do these corridors lead ?': 'Куда ведут эти коридоры ?',\r\n        'They will lead you to the end.': 'Они приведут тебя к финалу.',\r\n    \r\n        'Ooook, I\\'m heading in then.': 'Я пошел дальше.',\r\n        'We will meet again.': 'Мы еще увидимся.',\r\n    \r\n        'What do you do here ?': 'Что ты здесь делаешь ?',\r\n        'Collecting the energy of the night.':  'Собираю энергию ночи.',\r\n    \r\n        'Can you tell me which way is out of here ?': 'В какую сторону мне идти ?',\r\n        'It is about the journey, not the destination': 'Здесь нет сторон. Здесь важна только длина пути.',\r\n    \r\n        'Hey, it looks like I\\'m walking in circles.': 'Я уже долго иду.',\r\n        'You have walked long enough.': 'Ты прошел достаточно для этого уровня.',\r\n    \r\n        'Meaning?': 'Что это значит?',\r\n        'The way to the next level is open to you.': 'Тебе открыт путь на одну ступень выше.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hi, I heard I can find the \"end\" around here?': 'Я ищу финал.',\r\n        'Yes, I told you this is where the corridors lead.': 'Я помню о твоем пути.',\r\n\r\n        'Man, you all look the same.': 'Вы все так похожи.',\r\n        //'We will meet again.': 'Мы еще встретимся.',\r\n\r\n        'Soooo, is that you again ?': 'Это снова ты?',\r\n        'Yes. All of me are myself.': 'Да, мы все едины.',\r\n\r\n        'Yeah, just like those corridors.': 'Тут все коридоры повторяются.',\r\n        'The meaning of everything is in being whole.': 'Суть всего в едином.',\r\n\r\n        'Am I there yet?': 'Как долго еще идти.',\r\n        'The sign will be given when you are.': 'Тебе будет знак, когда ты будешь готов.',\r\n\r\n        'How do I know what it is?': 'Как я узнаю этот знак.',\r\n        'I will give it to you.': 'Я подам его.',\r\n\r\n        'That\\'s the same exact corridor with you again.':  'Это одинаковый сегмент коридора с тобой.',\r\n        'You are ready for the next level.': 'Ты готов к новому уровню.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hey man, seriously, how do I get out of here ?':'Привет снова. Как выбраться. Уже надоело.',\r\n        'You have not reached the end.':'Ты не постиг дзен.',\r\n\r\n        'We\\'ll how do you reach it ?':'Ты-то как выходишь на поверхность?',\r\n        'I have my way.':'У меня свой путь.',\r\n\r\n        'So how\\'s your way btw ?':'Ты все на своем пути?',\r\n        'It is like yourself.': 'Как и ты.',\r\n\r\n        'And how long you\\'ve been on it ?': 'Как долго ты на нем?',\r\n        'These walls can hear us.': 'Эти стены нас слышат.',\r\n\r\n\r\n        'I think you\\'re weighing this corridor down.': 'Мне кажется, ты идешь в нагрузку к этому сегменту коридора.',\r\n        'The next level is open to you.': 'Тебе открыт следующий уровень.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n\r\n        'Look bud, next level or not, nothing\\'s changed at all !':  'Ничего не меняется.',\r\n        'Except the number of steps.': 'Меняется количество пройденных шагов.',\r\n        \r\n        'So this place counts steps ?': 'Это место считает шаги?',\r\n        'This is place is waiting.': 'Это место ждет.',\r\n        \r\n        'How long have you been here ?': 'Как давно ты здесь?',\r\n        'How long is irrelevant. What matters is the journey.': 'Время не имеет значения, значение имеет лишь путь.',\r\n        \r\n        'Then why aren\\'t you on one?': 'Но ты же не идешь.',\r\n        'With you walking for both of us, I do not have to.': 'Зато ты каждый раз проходишь мимо.',\r\n        \r\n        'Look, just make a new level, please.': 'Сделай новый уровень.',\r\n        'You are ready. It is waiting for you.': 'Ты готов - новый уровень ждет тебя.',\r\n\r\n    \r\n        // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n    \r\n        'Wait, you are this place! You control all its fragments.': 'Ты и есть это место. Ты управляешь сегментами.',\r\n        'You have almost reached the end.': 'Ты почти дошел до края.',\r\n        \r\n        'Why do you do this ?': 'Зачем тебе это?',\r\n        'It is my way to warp space. More movement. More fragments.': 'Это способ свернуть пространство. Больше движения. Больше сегментов.',\r\n        \r\n        'How many people have been through here ?': 'Как много путников попадало сюда?',\r\n        'Many are still here.': 'Многие из них до сих пор тут.',\r\n        \r\n        'So where are they?': 'Почему я их не встретил?',\r\n        'Everyone has a different system of fragments.': 'У каждого своя система сегментов.',\r\n        \r\n        'Will you let me out ?': 'Ты выпустишь меня?',\r\n        'All ways lead to the end.': 'Все стороны света открыты тебе.',\r\n        \r\n        'I wanna meet the others.': 'Я хочу встретить других.',\r\n        'The next level is waiting for you.': 'Тебе открыт новый уровень.',\r\n\r\n        // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n\r\n        'Everything\\'s looped here.': 'Я вижу зарево?',\r\n        'Everything is looped with small differences.': 'Это зарево просветления. Ты близок',\r\n\r\n        'How many levels even are there ?': 'Все коридоры повторяются.',\r\n        'It all depends on you.': 'Все повторяется с небольшой разницей.',\r\n\r\n        'That\\'s it, I\\'m done.': 'Все мой путь окончен.',\r\n        'Have you reached your journey\\'s end ?': 'Ты отказываешься идти?',\r\n\r\n        'Yes, you mad bastard! I have !': 'Да, ты безумен.',\r\n        'Then I am giving you the sign.': 'Я освобождаю тебя.',\r\n\r\n\r\n\r\n\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'Level completed': 'Уровень завершен',\r\n        'open': 'пуск',\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures')\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => getterLoader(type).load(path, resolve))\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\nimport * as CORE from \"../../../_CORE\";\r\n\r\nconst t = CORE.createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"replicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {t(item.q)}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","let emitter = null\r\nexport const connectEmitterToActions = em => {\r\n    emitter = em\r\n}\r\n\r\n\r\nexport const startPlay = dispatch => ({\r\n    startPlay: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'outer',\r\n    }),\r\n    startFinalFog: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'start',\r\n    }),\r\n})\r\n\r\n\r\nexport const showMessages = dispatch => ({\r\n    toggleFinalMessage: val => dispatch({\r\n        type: 'TOGGLE_FINAL_MESSAGE',\r\n        mode: val,\r\n    })\r\n})\r\n\r\n\r\n\r\nexport const toggleDialog = dispatch => ({\r\n    clickPhrase: r => {\r\n        dispatch({\r\n            type: 'CLICK_PHRASE',\r\n            phrase: r,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'PHRASE_EVENT',\r\n                phrase: r,\r\n            })\r\n        }, 1000)\r\n    },\r\n})\r\n","import { connect } from 'react-redux'\r\nimport { TRANSLATE_WORLDS} from \"../constants/constants_replicies\";\r\nimport { createTranslater } from \"../../../_CORE\";\r\n\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"messages\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{t(item.q)}</div>\r\n                    <div className=\"a\">{t(item.a)}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import './CustomReactComponent.css'\r\nimport { createTranslater } from '../../../_CORE/helpers/helper_translate'\r\nimport { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\nconst mapStateToProps = state => ({\r\n    isButtonDialog: state.ui.isButtonDialog,\r\n    isShowFinalMessage: state.ui.isShowFinalMessage,\r\n    isShowPalleteDialog: state.ui.isShowPalleteDialog\r\n})\r\n\r\n\r\n\r\n\r\nfunction CustomReactComponent(props) {\r\n\r\n    return (\r\n        <>\r\n            {(props.isButtonDialog || props.isShowPalleteDialog) && (\r\n                <div className=\"dialog-wrapper\">\r\n                    <div className=\"dialog-content\">\r\n\r\n                        {props.isShowPalleteDialog && <div className='messages-wrapper'>\r\n                            <BotAnswers />\r\n                            <UserReplicies />\r\n                        </div>}\r\n\r\n                        {props.isButtonDialog && <button\r\n                            className=\"dialog-button-toggle\"\r\n                            onClick={() => props.dispatch({ type: 'TOGGLE_DIALOG', isShowPalleteDialog: !props.isShowPalleteDialog })}>\r\n                            {props.isShowPalleteDialog ? t('close dialog') : t('open dialog') }\r\n                        </button>}\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner final-message\">\r\n                        <p>{t('Level completed')}</p>\r\n                    </div>\r\n                </div>)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomReactComponent);\r\n","import { FLOORS_CONF } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\nconst DIALOGS_DATA = [\r\n{\r\n     phrases: [\r\n         {\r\n             q: 'Hello there!',\r\n             a: 'Good day, carbon-based life form.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'What is this place ?',\r\n             a: 'This is an entrance to the entropic hyper-maze.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'And what happens if I enter it ?',\r\n             a: 'This place is waiting.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, {\r\n     phrases: [\r\n         {\r\n             q: 'Say, where do these corridors lead ?',\r\n             a: 'They will lead you to the end.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Ooook, I\\'m heading in then.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, {\r\n     phrases: [\r\n         {\r\n             q: 'What do you do here ?',\r\n             a: 'Collecting the energy of the night.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         },\r\n         {\r\n             q: 'Can you tell me which way is out of here ?',\r\n             a: 'It is about the journey, not the destination',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, {\r\n     phrases: [\r\n         {\r\n             q: 'Hey, it looks like I\\'m walking in circles.',\r\n             a: 'You have walked long enough.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         },{\r\n             q: 'Meaning?',\r\n             a: 'The way to the next level is open to you.',\r\n             event: 'close',\r\n             levelEvent: 'addStairs',\r\n         },\r\n    ]\r\n},\r\n// %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n{\r\n     phrases: [\r\n         {\r\n             q: 'Hi, I heard I can find the \"end\" around here?',\r\n             a: 'Yes, I told you this is where the corridors lead.',\r\n             event: 'nextReply',\r\n             levelEvent: null,\r\n         }, {\r\n             q: 'Man, you all look the same.',\r\n             a: 'We will meet again.',\r\n             event: 'close',\r\n             levelEvent: null,\r\n         },\r\n     ]\r\n}, {\r\n         phrases: [\r\n             {\r\n                 q: 'Soooo, is that you again ?',\r\n                 a: 'Yes. All of me are myself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'Yeah, just like those corridors.',\r\n                 a: 'The meaning of everything is in being whole.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n}, {\r\n         phrases: [\r\n             {\r\n                 q: 'Am I there yet?',\r\n                 a: 'The sign will be given when you are.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             }, {\r\n                 q: 'How do I know what it is?',\r\n                 a: 'I will give it to you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n }, {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s the same exact corridor with you again.',\r\n                 a: 'You are ready for the next level.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n },\r\n// %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n{\r\n         phrases: [\r\n             {\r\n                 q: 'Hey man, seriously, how do I get out of here ?',\r\n                 a: 'You have not reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'We\\'ll how do you reach it ?',\r\n                 a: 'I have my way.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n}, {\r\n          phrases: [\r\n             {\r\n                 q: 'So how\\'s your way btw ?',\r\n                 a: 'It is like yourself.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'And how long you\\'ve been on it ?',\r\n                 a: 'These walls can hear us.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'I think you\\'re weighing this corridor down.',\r\n                 a: 'The next level is open to you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look bud, next level or not, nothing\\'s changed at all !',\r\n                 a: 'Except the number of steps.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So this place counts steps ?',\r\n                 a: 'This is place is waiting.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How long have you been here ?',\r\n                 a: 'How long is irrelevant. What matters is the journey.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Then why aren\\'t you on one?',\r\n                 a: 'With you walking for both of us, I do not have to.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Look, just make a new level, please.',\r\n                 a: 'You are ready. It is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n    // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Wait, you are this place! You control all its fragments.',\r\n                 a: 'You have almost reached the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Why do you do this ?',\r\n                 a: 'It is my way to warp space. More movement. More fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'How many people have been through here ?',\r\n                 a: 'Many are still here.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'So where are they?',\r\n                 a: 'Everyone has a different system of fragments.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Will you let me out ?',\r\n                 a: 'All ways lead to the end.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'I wanna meet the others.',\r\n                 a: 'The next level is waiting for you.',\r\n                 event: 'close',\r\n                 levelEvent: 'addStairs',\r\n             },\r\n         ]\r\n     },\r\n  \r\n    // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'Everything\\'s looped here.',\r\n                 a: 'Everything is looped with small differences.',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'How many levels even are there ?',\r\n                 a: 'It all depends on you.',\r\n                 event: 'close',\r\n                 levelEvent: null,\r\n             },\r\n         ]\r\n     },\r\n  \r\n  \r\n  \r\n     {\r\n         phrases: [\r\n             {\r\n                 q: 'That\\'s it, I\\'m done.',\r\n                 a: 'Have you reached your journey\\'s end ?',\r\n                 event: 'nextReply',\r\n                 levelEvent: null,\r\n             },\r\n             {\r\n                 q: 'Yes, you mad bastard! I have !',\r\n                 a: 'Then I am giving you the sign.',\r\n                 event: 'close',\r\n                 levelEvent: 'addWell',\r\n             },\r\n         ]\r\n     },\r\n  ]  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const uiState = {\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['start'].color,\r\n        fogNear: FLOORS_CONF['-1']['start'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['start'].fogFar,\r\n        backgroundImgKey: null,\r\n\r\n        //'start': { fogNear: 0, fogFar: 5, color: 0x18257d },\r\n    },\r\n\r\n    playerQuadrant: {\r\n        oldDialogPlayerQuadrant: [0, 0, -50],\r\n        oldQuadrant: [0, 0, 0],\r\n        newQuadrant: [0, 0, 0],\r\n        counter: null,\r\n    },\r\n\r\n    level: {\r\n        isStartCorridorShow: true,\r\n    },\r\n\r\n    \r\n    isShowFinalMessage: false,\r\n    botAnswers: [],\r\n    userReplicies: [],\r\n    history: [],\r\n    isShowControls: true,\r\n    isButtonDialog: false,\r\n    isShowPalleteDialog: false,\r\n\r\n    botIndex: -1,\r\n    phraseIndex: 0,\r\n    phrasesData: DIALOGS_DATA,\r\n}\r\n\r\nexport const createCustomStore = root => {\r\n    const ui = function(state = uiState, action) {\r\n\r\n        if (action.type === 'TOGGLE_FINAL_MESSAGE') {\r\n            return ({\r\n                ...state,\r\n                isShowFinalMessage: action.mode,\r\n                isShowControls: false,\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        if (action.type === 'CHANGE_ENVIRONMENT') {\r\n            const { newQuadrant, environmentMode } = action\r\n\r\n            if (!FLOORS_CONF[newQuadrant[1]]) return state;\r\n\r\n            const { fogNear, fogFar, color, backgroundImgKey } = FLOORS_CONF[newQuadrant[1]][environmentMode]\r\n\r\n            root.studio.changeEnvironment({ fogNear, fogFar, color, backgroundImgKey })\r\n\r\n            return ({\r\n                ...state,\r\n                sceneEnvironment: {\r\n                    fogNear,\r\n                    fogFar,\r\n                    color,\r\n                    backgroundImgKey,\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (action.type === 'CHANGE_QUADRANT') {\r\n            const data = {\r\n                ...state,\r\n                playerQuadrant: {\r\n                    ...state.playerQuadrant,\r\n                    ...action,\r\n                },\r\n            }\r\n            root.level.changeQuadrant(data)\r\n            return data\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'DESTROY_START_CORRIDOR') {\r\n            return ({\r\n                ...state,\r\n                level: {\r\n                    ...state.level,\r\n                    isStartCorridorShow: false,\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'CLICK_PHRASE') {\r\n            return ({\r\n                ...state,\r\n                botAnswers: [\r\n                    ...state.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (action.type === 'PHRASE_EVENT') {\r\n            const { event, levelEvent } = action.phrase\r\n            levelEvent && root.emitter.emit('changeLevelMode')(levelEvent)\r\n\r\n            if (event === 'nextReply') {\r\n                const userReplicies = [state.phrasesData[state.botIndex].phrases[state.phraseIndex + 1]]\r\n\r\n                return ({\r\n                    ...state,\r\n                    phraseIndex: state.phraseIndex + 1,\r\n                    userReplicies,\r\n                })\r\n\r\n            }\r\n\r\n            if (event === 'close') {\r\n                return ({\r\n                    ...state,\r\n                    userReplicies: [],\r\n                    isButtonDialog: true,\r\n                    playerQuadrant: {\r\n                        ...state.playerQuadrant,\r\n                        oldDialogPlayerQuadrant: [...state.playerQuadrant.newQuadrant]\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'TOGGLE_DIALOG') {\r\n\r\n            let isNewBot = false\r\n            const { oldDialogPlayerQuadrant, newQuadrant } = state.playerQuadrant\r\n            if (\r\n                oldDialogPlayerQuadrant[0] !== newQuadrant[0] ||\r\n                oldDialogPlayerQuadrant[1] !== newQuadrant[1] ||\r\n                oldDialogPlayerQuadrant[2] !== newQuadrant[2]\r\n            ) isNewBot = true\r\n\r\n\r\n\r\n\r\n            if (!isNewBot) {\r\n                return ({\r\n                    ...state,\r\n                    isShowPalleteDialog: action.isShowPalleteDialog,\r\n                    isButtonDialog: true,\r\n                })\r\n            }\r\n\r\n\r\n\r\n            const phraseIndex = 0\r\n            const botIndex = state.botIndex + 1\r\n            const isButtonDialog = false\r\n\r\n\r\n            const userReplicies = state.phrasesData[botIndex] ? [state.phrasesData[botIndex].phrases[phraseIndex]] : []\r\n\r\n\r\n            return ({\r\n                ...state,\r\n\r\n                userReplicies,\r\n                botAnswers: [],\r\n                isShowPalleteDialog: action.isShowPalleteDialog,\r\n                isButtonDialog,\r\n                isCanChangeBotIndex: false,\r\n                botIndex,\r\n                phraseIndex,\r\n            })\r\n        }\r\n\r\n        if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n            return ({\r\n                ...state,\r\n                isButtonDialog: action.isButtonDialog,\r\n            })\r\n        }\r\n\r\n\r\n        return state\r\n    }\r\n\r\n    return { ui }\r\n}\r\n\r\n\r\n\r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._camera = null\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        //this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n\r\n\r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._camera) {\r\n                this._camera.aspect = size.width/size.height\r\n                this._camera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        const drawFrame = () => this._camera && this._composer.render(this._scene, this._camera)\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n\r\n\r\n\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    \r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._camera = cam\r\n        this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n        \r\n        if (!this._root.CONSTANTS.studioConfig.composerAddPass) return; \r\n        \r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n            this._composer.addPass(new ShaderPass(Saturate))\r\n        }  \r\n    }\r\n\r\n    changeEnvironment (sceneEnvironment) {\r\n        this._changeFog(sceneEnvironment)\r\n        this._changeBackground(sceneEnvironment)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    this._lightA.color = startData.color\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        this._root = root\r\n\r\n        const { emitter, studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n            speed,\r\n            offsetFromFloor,\r\n            offsetFromFloorFactor,\r\n            offsetWallCollision,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        let keys = {}\r\n        let isButtonsDisabled = false\r\n        this._isBlocked = true\r\n        this._isCanMove = {\r\n            'up': true,\r\n            'down': true,\r\n        }\r\n\r\n        this._mainObj = new THREE.Object3D()\r\n        this._mainObj.position.fromArray(startPos)\r\n        this._mainObj.rotation.fromArray(startRot)\r\n        this._mainObj.userData.type = 'player'\r\n\r\n        const bottomObj = new THREE.Object3D() \r\n        bottomObj.position.fromArray([0, -.05, 0])\r\n        this._mainObj.add(bottomObj)\r\n\r\n        const frontObj = new THREE.Object3D()\r\n        frontObj.position.fromArray(frontObjPos)\r\n        this._mainObj.add(frontObj)\r\n        this.frontObj = frontObj\r\n\r\n        const backObj = new THREE.Object3D()\r\n        backObj.position.fromArray(backObjPos)\r\n        this._mainObj.add(backObj)\r\n        this.backObj = backObj\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray(pos)\r\n            this._mainObj.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this._mainObj.add(light)\r\n        }\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && (this._mainObj.rotation.y += (speedRot * data.count))\r\n            keys['right'] && (this._mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n            if (this._isBlocked) return;\r\n\r\n            /** check bottom floors */\r\n            if (this._root.systemCollisionFloor) {\r\n                const [\r\n                    isBlockedByItem, \r\n                    offset,\r\n                    point, \r\n                ] = this._root.systemCollisionFloor.checkCollisions(this._mainObj, bottomObj, offsetFromFloor)\r\n                \r\n                if (!isBlockedByItem) {\r\n                    this._mainObj.position.y += speedDown\r\n                } else {\r\n                    if (offset < (offsetFromFloor - offsetFromFloorFactor))  {\r\n                        this._mainObj.position.y = point.y + offsetFromFloor\r\n                    }                        \r\n                }\r\n            }\r\n\r\n\r\n            if (!keys) return;\r\n\r\n            if (keys['up']) {\r\n                if (!this._isCanMove['up']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, frontObj, offsetWallCollision)\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'up' })\r\n            }\r\n\r\n            if (keys['down']) {\r\n                if (!this._isCanMove['down']) return;\r\n\r\n                if (this._root.systemCollisionItems) {\r\n                    const [ isBlockedByItem ] \r\n                        = this._root.systemCollisionItems.checkCollisions(this._mainObj, backObj, offsetWallCollision)\r\n                    if (isBlockedByItem) return;\r\n                }\r\n\r\n                this._mainObj.translateZ(speed * data.count)\r\n                emitter.emit('playerMove')({ pos: this._mainObj.position, dir: 'down' })\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this._mainObj)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this._mainObj\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this._mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","\r\nimport * as THREE from 'three'\r\nimport { S, H } from '../constants/constants_elements'\r\nimport { uiState } from '../store/createStore'\r\n\r\n\r\nconst STANDART_ROOMS = ['room_02', 'room_03', 'room_04', 'room_05']\r\nconst START_ROOMS = ['outer_walls', 'outer_floor', 'outer_road']\r\n\r\n\r\nexport class Level {\r\n    constructor(gameContext) {\r\n        this._root = gameContext\r\n\r\n        const {\r\n            emitter,\r\n            studio,\r\n            assets,\r\n            materials,\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n        } = gameContext\r\n        const { rooms, allMeshes, collisionsBotsRooms } = createLevelMeshes(assets, materials)\r\n\r\n        this._instanceRooms = rooms\r\n\r\n        this.collisionsBotsRooms = collisionsBotsRooms\r\n\r\n\r\n        this._group = new THREE.Group()\r\n        studio.addToScene(this._group)\r\n        this._objRooms = {}\r\n\r\n\r\n        this._state = 'normal' // 'addBot' || 'addStairs' || 'addWell'\r\n        emitter.subscribe('changeLevelMode')(newMode => {\r\n            console.log('changeLevelMode', newMode)\r\n            this._state = newMode\r\n        })\r\n\r\n\r\n        this._createRoom([0, -1, 0], 'room_02')\r\n        this._createRoom([0, -1, -1], 'room_02')\r\n        this._createRoom([-1, -1, 0], 'room_02')\r\n        this._createRoom([1, -1, 0], 'room_02')\r\n\r\n\r\n\r\n        /** add remove start corridors */\r\n        this._startL = {}\r\n        for (let i = 0; i < START_ROOMS.length; ++i) {\r\n            const l = allMeshes[START_ROOMS[i]].clone()\r\n            systemCollisionFloor.setItemToCollision({ mesh: l })\r\n            systemCollisionItems.setItemToCollision({ mesh: l })\r\n            this._group.add(l)\r\n            l.position.set(0, -1 * H, 0)\r\n            this._startL[START_ROOMS[i]] = l\r\n        }\r\n\r\n\r\n        this._wentLevels = 0\r\n        this._flagIsSpecial = false\r\n\r\n\r\n        const { oldQuadrant, newQuadrant } = uiState.playerQuadrant\r\n        this._saveOldQuadrant = oldQuadrant\r\n        this._saveNewQuadrant = newQuadrant\r\n        this._saveIsStartCorridorShow = uiState.level.isStartCorridorShow\r\n    }\r\n\r\n    changeQuadrant (data) {\r\n        console.log(data)\r\n\r\n        const {\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n            emitter,\r\n        } = this._root\r\n\r\n\r\n        if (this._saveIsStartCorridorShow && this._saveIsStartCorridorShow !== data.level.isStartCorridorShow) {\r\n            this._saveIsStartCorridorShow = false\r\n            for (let key in this._startL) {\r\n                systemCollisionFloor.removeItemFromCollision(this._startL[key])\r\n                systemCollisionItems.removeItemFromCollision(this._startL[key])\r\n                this._group.remove(this._startL[key])\r\n            }\r\n            emitter.emit('removeStartBots')()\r\n        }\r\n\r\n\r\n        const { oldQuadrant, newQuadrant, counter } = data.playerQuadrant\r\n\r\n\r\n\r\n        if (\r\n            this._saveOldQuadrant[0] !== oldQuadrant[0] ||\r\n            this._saveOldQuadrant[1] !== oldQuadrant[1] ||\r\n            this._saveOldQuadrant[2] !== oldQuadrant[2] ||\r\n            this._saveNewQuadrant[0] !== newQuadrant[0] ||\r\n            this._saveNewQuadrant[1] !== newQuadrant[1] ||\r\n            this._saveNewQuadrant[2] !== newQuadrant[2]\r\n        ) {\r\n            this._saveOldQuadrant = [...oldQuadrant]\r\n            this._saveNewQuadrant = [...newQuadrant]\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        let keyCreateRoom = STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        if (counter) {\r\n            this._wentLevels = counter(this._wentLevels)\r\n            if (this._flagIsSpecial) {\r\n                this._flagIsSpecial = false\r\n            } else {\r\n                if (this._wentLevels < 3) {\r\n                    this._state = 'normal'\r\n                } else if (this._wentLevels < 100) {\r\n                    if (this._state === 'normal') {\r\n                        this._state = 'addBot'\r\n                    }\r\n                } else {\r\n                    this._state = 'addStairs'\r\n                }\r\n\r\n\r\n                if (this._state === 'addBot') {\r\n                    keyCreateRoom = 'room_01'\r\n                    this._flagIsSpecial = true\r\n                }\r\n                if (this._state === 'addStairs') {\r\n                    keyCreateRoom = 'room_06'\r\n                    this._flagIsSpecial = true\r\n                }\r\n                if (this._state === 'addWell') {\r\n                    keyCreateRoom = 'room_07'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n            const oldKv = oldQuadrant, curKv = newQuadrant\r\n            // move west\r\n            if (curKv[0] < oldKv[0]) {\r\n                console.log('----------- west')\r\n                // remove east\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n\r\n                // set center to east\r\n                this._objRooms[`r_${curKv[0] + 1}_${curKv[1]}_${curKv[2]}`] = this._objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n                // create west\r\n                this._createRoom([oldKv[0] - 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create soush\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n            }\r\n\r\n            // move east\r\n            if (curKv[0] > oldKv[0]) {\r\n                console.log('----------- east')\r\n                // remove west\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n\r\n                // set center to east\r\n                this._objRooms[`r_${curKv[0] - 1}_${curKv[1]}_${curKv[2]}`] = this._objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n                // create east\r\n                this._createRoom([oldKv[0] + 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create south\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n            }\r\n\r\n\r\n            // move north\r\n            if (curKv[2] < oldKv[2]) {\r\n                console.log('-----------north')\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n\r\n                // set center to south\r\n                this._objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] + 1 }`] = this._objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n                // create north\r\n                this._createRoom([oldKv[0], oldKv[1], oldKv[2] - 2], keyCreateRoom)\r\n\r\n                // remove west\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create west\r\n                this._createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n                // remove east\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create east\r\n                this._createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n            }\r\n\r\n\r\n            // move south\r\n            if (curKv[2] > oldKv[2]) {\r\n                console.log('-----------south')\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n\r\n                // set center to north\r\n                this._objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] - 1 }`] = this._objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n                // create south\r\n                this._createRoom([oldKv[0], oldKv[1], oldKv[2] + 2], keyCreateRoom)\r\n\r\n                // remove west\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create west\r\n                this._createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n                // remove east\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create east\r\n                this._createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n            }\r\n\r\n            // move top\r\n            if (curKv[1] > oldKv[1] || curKv[1] < oldKv[1]) {\r\n                console.log('-----------top')\r\n                // remove north\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n                // create north\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] - 1])\r\n                // remove south\r\n                this._removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n                // create south\r\n                this._createRoom([curKv[0], curKv[1], curKv[2] + 1])\r\n                // remove left\r\n                this._removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n                // create left\r\n                this._createRoom([curKv[0] - 1, curKv[1], curKv[2]])\r\n                // remove right\r\n                this._removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n                // create right\r\n                this._createRoom([curKv[0] + 1, curKv[1], curKv[2]])\r\n            }\r\n\r\n    }\r\n\r\n    _createRoom (kv, key) {\r\n        const {\r\n            emitter,\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n        } = this._root\r\n\r\n\r\n        const instanceKey = key || STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n\r\n        const objKey = `r_${kv[0]}_${kv[1]}_${kv[2]}`\r\n\r\n        const mesh = this._instanceRooms[instanceKey].clone()\r\n        mesh.position.set(kv[0] * S, kv[1] * H, kv[2] * S)\r\n        systemCollisionFloor.setItemToCollision({ mesh })\r\n        systemCollisionItems.setItemToCollision({ mesh })\r\n        this._group.add(mesh)\r\n        this._objRooms[objKey] = mesh\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'createRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isAddBot: instanceKey === 'room_01'\r\n        })\r\n\r\n        instanceKey === 'room_06' && this._createRoom([kv[0], kv[1] + 1, kv[2]], 'room_dummy')\r\n    }\r\n\r\n\r\n    _removeRoom(kv) {\r\n        const {\r\n            emitter,\r\n            systemCollisionFloor,\r\n            systemCollisionItems,\r\n        } = this._root\r\n\r\n        const objKey = `r_${ kv[0] }_${ kv[1] }_${ kv[2] }`\r\n        if (!this._objRooms[objKey]) return;\r\n\r\n\r\n        const instanceKey = this._objRooms[objKey].name\r\n\r\n\r\n        this._group.remove(this._objRooms[objKey])\r\n        systemCollisionItems.removeItemFromCollision(this._objRooms[objKey])\r\n        systemCollisionFloor.removeItemFromCollision(this._objRooms[objKey])\r\n        delete this._objRooms[objKey]\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'destroyRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isRemoveBot: instanceKey === 'room_01'\r\n        })\r\n\r\n        instanceKey === 'room_dummy' && this._removeRoom([kv[0], kv[1] - 1, kv[2]])\r\n        instanceKey === 'room_06' && this._removeRoom([kv[0], kv[1] + 1, kv[2]])\r\n    }\r\n\r\n}\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const rooms = {}\r\n    const collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"room_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            rooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"collision_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            collisionsBotsRooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_walls\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_road\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_floor\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        collisionsBotsRooms,\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level-rooms.5251ade2.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/px.2be78f43.jpg\";","export default __webpack_public_path__ + \"static/media/nx.b2401269.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.462f1251.jpg\";","export default __webpack_public_path__ + \"static/media/pz.8ea5ba14.jpg\";","export default __webpack_public_path__ + \"static/media/nz.7f255b96.jpg\";","import * as THREE from 'three'\r\nimport { GLTFCopy } from '../../../_CORE/helpers/helper_GLTFcopy'\r\n\r\n\r\nconst OFFSETS = {\r\n    'room_01': { x: 55, z: 75}\r\n}\r\n\r\nexport class Bot {\r\n    constructor () {\r\n        this.inScene = false\r\n\r\n        this._state = 'go' // || 'rotate' || 'say'\r\n\r\n        this._targetAngle = null\r\n\r\n\r\n        this.container = new THREE.Group()\r\n\r\n        this.mesh = new THREE.Group()\r\n        this.mesh.position.x = OFFSETS['room_01'].x\r\n        this.mesh.position.z = OFFSETS['room_01'].z\r\n        this.mesh.rotation.y = Math.random() * (2 * Math.PI)\r\n        this.container.add(this.mesh)\r\n\r\n        this._objFrom = new THREE.Object3D()\r\n        this.mesh.add(this._objFrom)\r\n\r\n\r\n        this._objTo = new THREE.Object3D()\r\n        this._objTo.position.set(0, 0, 1)\r\n        this.mesh.add(this._objTo)\r\n\r\n\r\n        const copy = GLTFCopy(Bot.botScene)\r\n        this.model = copy.scene.children[0]\r\n        this.model.children[1].material = Bot.botMaterial\r\n        this._animations = Bot.botScene.animations\r\n        this._mixer = new THREE.AnimationMixer(this.model.children[1])\r\n        this._walkAction = this._mixer.clipAction(this._animations[1])\r\n        this._walkAction.play()\r\n        this._walkAction.timeScale = .7\r\n\r\n        this._speakAction = this._mixer.clipAction(this._animations[0])\r\n        this._speakAction.timeScale = .4\r\n\r\n        this.mesh.add(this.model)\r\n    }\r\n\r\n\r\n    update (data) {\r\n        this._mixer.update(data.delta)\r\n\r\n        if (!this._componentCollision) return;\r\n\r\n        this._updateState()\r\n    }\r\n\r\n\r\n    setCollisionMesh (mesh) {\r\n        this._collisionMeshes = [mesh]\r\n        this.container.add(mesh)\r\n        mesh.material.visible = false\r\n\r\n\r\n        this._componentCollision = createComponentCollisionWalls(this._objFrom, this._objTo, 7, this._collisionMeshes)\r\n    }\r\n\r\n    removeCollisionMesh () {\r\n        this._collisionMeshes = null\r\n        this._componentCollision = null\r\n    }\r\n\r\n\r\n    prepareToSay (pos) {\r\n        this._state = 'say'\r\n        this._walkAction.stop()\r\n        this._speakAction.play()\r\n        this.mesh.lookAt(pos.x, this.container.position.y, pos.z)\r\n    }\r\n\r\n\r\n    /** internal *****************************/\r\n\r\n    _updateState () {\r\n        if (this._state === 'go') {\r\n            const isNear = this._componentCollision.check()\r\n            if (!isNear) {\r\n                this.mesh.translateZ(0.05)\r\n            } else {\r\n                this._startRotate()\r\n            }\r\n        }\r\n\r\n        if (this._state === 'rotate') {\r\n            this.mesh.rotation.y += ((this._targetAngle - this.mesh.rotation.y) < 0) ? -.01 : .01\r\n            this.mesh.rotation.y %= 2 * Math.PI\r\n            const isComplete = Math.abs(this.mesh.rotation.y - this._targetAngle) < .5\r\n            isComplete && this._startGo()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _startGo () {\r\n        this._state = 'go'\r\n        this._walkAction.play()\r\n        this._speakAction.stop()\r\n    }\r\n\r\n\r\n    _startRotate() {\r\n        this._state = 'rotate'\r\n        this._targetAngle = (this.mesh.rotation.y + 1.5 + Math.random() * 4) % (2 * Math.PI)\r\n    }\r\n}\r\n\r\nBot.botScene = null\r\nBot.botMaterial = null\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFrom, objTo, offset, arrWalls) => {\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            objFrom.getWorldPosition(vec3Src2)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2, 0, 20)\r\n            const intersectsWalls = raycasterWalls.intersectObject(arrWalls[0], true)\r\n\r\n            return !!intersectsWalls[0]\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","import * as THREE from 'three'\r\nimport { Bot } from '../Entities/Bot'\r\n\r\n\r\nconst S = 175.335\r\nconst H = 70\r\nconst H_BOT = 14\r\n\r\n\r\nexport class Bots {\r\n    constructor(gameContext) {\r\n        const { assets, emitter, store, studio, materials } = gameContext\r\n\r\n        Bot.botMaterial = materials.iron\r\n        Bot.botScene = assets.bot\r\n\r\n\r\n\r\n        const groupBots = new THREE.Group()\r\n        studio.addToScene(groupBots)\r\n\r\n\r\n        const arrBots = []\r\n        this.arrBots = arrBots\r\n\r\n\r\n        let botRooms = null\r\n        if (gameContext['level'] && gameContext['level'].collisionsBotsRooms) {\r\n            botRooms = gameContext['level'].collisionsBotsRooms\r\n        }\r\n\r\n\r\n        for (let i = 0; i < 5; ++i) {\r\n            const bot = new Bot()\r\n            groupBots.add(bot.container)\r\n            bot.container.position.set(-30 + i * 30, -92, 750)\r\n            bot.inScene = 'aaa'\r\n            botRooms && bot.setCollisionMesh(botRooms['collision_r_01'].clone())\r\n            arrBots.push(bot)\r\n        }\r\n\r\n\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(data => {\r\n            for (let i = 0; i < arrBots.length; ++i) arrBots[i].inScene && arrBots[i].update(data)\r\n        })\r\n\r\n\r\n        \r\n        emitter.subscribe('removeStartBots')(() => {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                arrBots[i].inScene = null\r\n                arrBots[i].container.position.y = -10000\r\n                arrBots[i].removeCollisionMesh()\r\n            }\r\n        })\r\n\r\n\r\n    \r\n        emitter.subscribe('levelChanged')(({ objKey, kv, isAddBot, isRemoveBot }) => {\r\n            if (isAddBot) {\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    if (!arrBots[i].inScene) {\r\n                        arrBots[i].inScene = objKey\r\n                        arrBots[i].container.position.set(kv[0] * S, kv[1] * H + H_BOT, kv[2] * S)\r\n                        botRooms && arrBots[i].setCollisionMesh(botRooms['collision_r_01'].clone())\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (isRemoveBot) {\r\n                for (let i = 0; i < arrBots.length; ++i) {\r\n                    if (arrBots[i].inScene === objKey) {\r\n                        arrBots[i].inScene = null\r\n                        arrBots[i].container.position.y = -10000\r\n                        arrBots[i].removeCollisionMesh()\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/botMap.972e276e.png\";","export default __webpack_public_path__ + \"static/media/botAnim2.47b6030d.glb\";","export default __webpack_public_path__ + \"static/media/posx.be2d83a2.jpg\";","export default __webpack_public_path__ + \"static/media/negx.d016c8e7.jpg\";","export default __webpack_public_path__ + \"static/media/posy.01cfd221.jpg\";","export default __webpack_public_path__ + \"static/media/negy.f01f8356.jpg\";","export default __webpack_public_path__ + \"static/media/posz.ef37b8e1.jpg\";","export default __webpack_public_path__ + \"static/media/negz.f346a80a.jpg\";","import { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport const START_LAYER_STATE = 'outer'\r\n\r\n\r\n\r\n\r\n\r\nexport const CHANGE_LAYER_STATE = [\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'outer', newState: 'corridor',\r\n        oldQuadrant: [0, -2, 4], newQuadrant: [0, -2, 3],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n                backgroundImg: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'corridor', newState: 'outer',\r\n        oldQuadrant: [0, -2, 3], newQuadrant: [0, -2, 4],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'outer',\r\n            },\r\n        ]\r\n    },\r\n\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'corridor', newState: 'firstRoom',\r\n        oldQuadrant: [0, -1, 2], newQuadrant: [0, -1, 1],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'firstRoomLight',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'corridor',\r\n        oldQuadrant: [0, -1, 1], newQuadrant: [0, -1, 2],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: [0, -1, 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                type: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_MINUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                type: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_PLUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                type: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_PLUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: () => 0,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: () => 100,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_MINUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_PLUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_PLUS_ONE'],\r\n        emitData: [\r\n            {\r\n                type: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n]\r\n\r\n\r\n\r\nexport class ChangerQuadrant {\r\n    constructor(root) {\r\n        const { emitter, dispatcher } = root\r\n        const checkerNewQuadrant = createCheckerNewQuadrant()\r\n\r\n\r\n        emitter.subscribe('playerMove')(({ pos }) => {\r\n            const data = checkerNewQuadrant.update(pos)\r\n            const { currentQuadrant, oldQuadrant, isChanged } = data\r\n\r\n            if (!isChanged) return;\r\n\r\n            const arrEmitData = getEmitsByChangeQuadrant(oldQuadrant, currentQuadrant)\r\n\r\n            arrEmitData.length && \r\n                arrEmitData.forEach(item => dispatcher.dispatch({ ...item }))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet levelState = START_LAYER_STATE\r\n\r\n\r\nexport const getEmitsByChangeQuadrant = (playerOldQ, playerNewQ) => {\r\n    for (let i = 0; i < CHANGE_LAYER_STATE.length; ++i) {\r\n        const data = getData(\r\n            [...playerOldQ],\r\n            [...playerNewQ],\r\n            {\r\n                ...CHANGE_LAYER_STATE[i],\r\n                oldQuadrant: [...CHANGE_LAYER_STATE[i].oldQuadrant],\r\n                newQuadrant: [...CHANGE_LAYER_STATE[i].newQuadrant],\r\n            }\r\n        )\r\n        if (data) return data;\r\n    }\r\n    return { levelState }\r\n}\r\n\r\n\r\n\r\n\r\nconst getData = (playerOldQ, playerNewQ, conf) => {\r\n    const { oldState, newState, oldQuadrant, newQuadrant, emitData } = conf\r\n\r\n    if (levelState !== oldState)\r\n        return;\r\n\r\n\r\n    if (oldQuadrant[0] === 'ANY') oldQuadrant[0] = playerOldQ[0]\r\n    if (oldQuadrant[1] === 'ANY') oldQuadrant[1] = playerOldQ[1]\r\n    if (oldQuadrant[2] === 'ANY') oldQuadrant[2] = playerOldQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY') newQuadrant[0] = playerNewQ[0]\r\n    if (newQuadrant[1] === 'ANY') newQuadrant[1] = playerNewQ[1]\r\n    if (newQuadrant[2] === 'ANY') newQuadrant[2] = playerNewQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY_PLUS_ONE') newQuadrant[0] = playerOldQ[0] + 1\r\n    if (newQuadrant[1] === 'ANY_PLUS_ONE') newQuadrant[1] = playerOldQ[1] + 1\r\n    if (newQuadrant[2] === 'ANY_PLUS_ONE') newQuadrant[2] = playerOldQ[2] + 1\r\n\r\n    if (newQuadrant[0] === 'ANY_MINUS_ONE') newQuadrant[0] = playerOldQ[0] - 1\r\n    if (newQuadrant[1] === 'ANY_MINUS_ONE') newQuadrant[1] = playerOldQ[1] - 1\r\n    if (newQuadrant[2] === 'ANY_MINUS_ONE') newQuadrant[2] = playerOldQ[2] - 1\r\n\r\n\r\n    if (\r\n        oldQuadrant[0] !== playerOldQ[0] ||\r\n        oldQuadrant[1] !== playerOldQ[1] ||\r\n        oldQuadrant[2] !== playerOldQ[2] ||\r\n        newQuadrant[0] !== playerNewQ[0] ||\r\n        newQuadrant[1] !== playerNewQ[1] ||\r\n        newQuadrant[2] !== playerNewQ[2]\r\n    ) return;\r\n\r\n\r\n    levelState = newState\r\n\r\n    return emitData.map(item => ({\r\n        ...item,\r\n        levelState,\r\n        oldQuadrant: [...oldQuadrant],\r\n        newQuadrant: [...newQuadrant],\r\n    }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst createCheckerNewQuadrant = function () {\r\n    let oldQuadrant = []\r\n\r\n    return {\r\n        update ({ x, y, z}) {\r\n            const currentQuadrant = [Math.floor(x / S), Math.floor(y / H), Math.floor(z / S)]\r\n\r\n            if (\r\n                currentQuadrant[0] !== oldQuadrant[0] ||\r\n                currentQuadrant[1] !== oldQuadrant[1] ||\r\n                currentQuadrant[2] !== oldQuadrant[2]\r\n            ) {\r\n                const data = {\r\n                    isChanged: true,\r\n                    currentQuadrant,\r\n                    oldQuadrant,\r\n                }\r\n                oldQuadrant = [...currentQuadrant]\r\n\r\n                return data\r\n            } else {\r\n                return { isChanged: false }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCheckerNearItem {\r\n    constructor() {\r\n        this._itemWorldPos = new THREE.Vector3()\r\n        this._mainCheckerWorldPos = new THREE.Vector3()\r\n\r\n        this._arr = []\r\n    }\r\n\r\n\r\n    setItemToCheck (mesh) {\r\n        this._arr.push(mesh)\r\n    }\r\n\r\n    checkNear (mainMesh, dist) {\r\n        mainMesh.getWorldPosition(this._mainCheckerWorldPos)\r\n\r\n        for (let i = 0; i < this._arr.length; ++i) {\r\n            if (!this._arr[i].userData.inScene) continue;\r\n\r\n            this._arr[i].getWorldPosition(this._itemWorldPos)\r\n            const distance = this._itemWorldPos.distanceTo(this._mainCheckerWorldPos)\r\n            if (distance < dist) {\r\n                return [true, this._arr[i].userData]\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}\r\n\r\n","import * as THREE from \"three\";\r\n\r\n\r\nexport class SystemCollisionWithItems {\r\n    constructor(root) {\r\n        this._root = root\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision ({\r\n        mesh,\r\n        itemKeyEmitCollision = null,\r\n        isStopUnits = true\r\n    }) {\r\n        mesh.userData.itemKeyEmitCollision = itemKeyEmitCollision\r\n        mesh.userData.isStopUnits = isStopUnits\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, d) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0]) {\r\n            if (intersects[0].distance < d) {\r\n                if (intersects[0].object.userData.itemKeyEmitCollision) {\r\n                    this._root.emitter.emit('collision')({ \r\n                        ...intersects[0].object.userData.itemKeyEmitCollision, \r\n                        type2: objFrom.userData.type \r\n                    })\r\n                }\r\n\r\n                if (intersects[0].object.userData.isStopUnits) {\r\n                    return [ true, intersects[0].distance, intersects[0].point ]\r\n                }\r\n            }\r\n        }\r\n\r\n        return [ false, null ]\r\n    }\r\n}","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { Ui } from '../ui/Ui'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer'\r\n\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../../../assets/level-rooms.obj'\r\nimport mapFloorOuter from '../../../assets/floor_outer_map.jpg'\r\nimport pxjpg from '../../../assets/skybox/px.jpg'\r\nimport nxjpg from '../../../assets/skybox/nx.jpg'\r\nimport pyjpg from '../../../assets/skybox/py.jpg'\r\nimport nyjpg from '../../../assets/skybox/ny.jpg'\r\nimport pzjpg from '../../../assets/skybox/pz.jpg'\r\nimport nzjpg from '../../../assets/skybox/nz.jpg'\r\n\r\n\r\nimport { Bots } from '../systems/system_bots'\r\nimport botMap from '../../../assets/botMap.png'\r\nimport botSrc from '../../../assets/botAnim2.glb'\r\nimport pxjpg2 from '../../../assets/matIronBox/posx.jpg'\r\nimport nxjpg2 from '../../../assets/matIronBox/negx.jpg'\r\nimport pyjpg2 from '../../../assets/matIronBox/posy.jpg'\r\nimport nyjpg2 from '../../../assets/matIronBox/negy.jpg'\r\nimport pzjpg2 from '../../../assets/matIronBox/posz.jpg'\r\nimport nzjpg2 from '../../../assets/matIronBox/negz.jpg'\r\n\r\n\r\nimport { ChangerQuadrant } from \"../store/actionByChangeQuadrant\"\r\nimport { Component_PlayerInBot } from '../components/component_playerInBot'\r\nimport { StarterPlay } from '../actions/StarterPlay'\r\nimport { EnderPlay } from '../actions/EnderPlay'\r\nimport {SystemCollisionWithItems} from \"../../../_CORE/systems/SystemCollisionsItems\";\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'customUi',\r\n        constr: Ui,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: Helper_TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionFloor',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'systemCollisionItems',\r\n        constr: SystemCollisionWithItems,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: Helper_MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'bots',\r\n        constr: Bots,\r\n        initStateKey: 'beforeStartPlay',\r\n            assetsToLoad: [\r\n                { type: 'glb', path: botSrc, key: 'bot' },\r\n                { type: 'img', path: botMap, key: 'botMap' },\r\n                { type: 'cubeTextures', path: [  pxjpg2, nxjpg2, pyjpg2, nyjpg2, pzjpg2, nzjpg2, ], key: 'ironEnv' },\r\n            ]\r\n    },\r\n    {\r\n        key: 'changerQuadrant',\r\n        constr: ChangerQuadrant,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'playerInBot',\r\n        constr: Component_PlayerInBot,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'starterPlay',\r\n        constr: StarterPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'enderPlay',\r\n        constr: EnderPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","import { UI } from '../../../_CORE/ui/UI'\r\nimport CustomReactComponent from \"./CustomReactComponent\";\r\nimport { createCustomStore  } from \"../store/createStore\";\r\n\r\nexport class Ui {\r\n    constructor(root) {\r\n\r\n        root.appWrapper = document.querySelector('.app-wrapper')\r\n        root.CustomReactComponent = CustomReactComponent\r\n        root.customStore = createCustomStore(root)\r\n\r\n        const ui = new UI(root)\r\n        root.ui = ui\r\n    }\r\n}","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { SystemCheckerNearItem } from \"../../../_CORE/systems/SystemCheckerNearItem\";\r\n\r\n\r\nconst MAX_DIALOG_DIST_TO_BOT = 30\r\n\r\n\r\nexport class Component_PlayerInBot {\r\n    constructor(root) {\r\n        const {\r\n            bots,\r\n            emitter,\r\n            dispatcher,\r\n        } = root\r\n\r\n\r\n        const checkerNearItems = new SystemCheckerNearItem(root)\r\n        for (let i = 0; i < bots.arrBots.length; ++i) {\r\n            checkerNearItems.setItemToCheck(bots.arrBots[i].mesh)\r\n        }\r\n\r\n\r\n        const botWorldPos = new THREE.Vector3()\r\n\r\n\r\n        emitter.subscribe('playerMove')(data => {\r\n            for (let i = 0; i < bots.arrBots.length; ++i) {\r\n                if (!bots.arrBots[i].inScene) continue;\r\n\r\n\r\n                bots.arrBots[i].mesh.getWorldPosition(botWorldPos)\r\n                const distance = botWorldPos.distanceTo(data.pos)\r\n\r\n                if (bots.arrBots[i]._state === 'say' && distance > MAX_DIALOG_DIST_TO_BOT) {\r\n                    dispatcher.dispatch({\r\n                        type: 'TOGGLE_BUTTON',\r\n                        isButtonDialog: false,\r\n                    })\r\n                    bots.arrBots[i]._startRotate()\r\n                    continue;\r\n                }\r\n\r\n\r\n                if (bots.arrBots[i]._state !== 'say' && distance < MAX_DIALOG_DIST_TO_BOT) {\r\n                    bots.arrBots[i].prepareToSay(data.pos)\r\n                    dispatcher.dispatch({\r\n                        type: 'TOGGLE_BUTTON',\r\n                        isButtonDialog: true,\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","export class StarterPlay {\r\n    constructor (root) {\r\n        const { player, ui, dispatcher } = root\r\n        \r\n        dispatcher.dispatch({ \r\n            type: 'CHANGE_INFO_CHAPTER', \r\n            currentChapterIndex: 2 \r\n        })\r\n\r\n        ui.showStartButton(() => {          \r\n            dispatcher.dispatch({\r\n                type: 'CHANGE_ENVIRONMENT',\r\n                newQuadrant: [0, -1, -50],\r\n                environmentMode: 'back',\r\n            })\r\n            player.toggleBlocked(false)\r\n        })\r\n    }\r\n}\r\n","import { showMessages, startPlay } from \"../store/actions\";\r\nimport {FRAME_UPDATE} from \"../constants/constants_elements\";\r\n\r\n\r\nexport class EnderPlay {\r\n    constructor (gameContext) {\r\n        const { player, emitter, dispatcher } = gameContext\r\n\r\n\r\n\r\n        const finalComplete = () => {\r\n            setTimeout(() => {\r\n                startPlay(dispatcher.dispatch).startFinalFog()\r\n                setTimeout(() => {\r\n                    showMessages(dispatcher.dispatch).toggleFinalMessage(true)\r\n                }, 6000)\r\n            }, 10000)\r\n        }\r\n\r\n\r\n\r\n\r\n        const playerObj = player.getObj()\r\n\r\n        let oldY = playerObj.position.y\r\n        let countDropped = 0\r\n        let isGameComplete = false\r\n\r\n\r\n        const update = () => {\r\n            if (oldY > playerObj.position.y) {\r\n                ++countDropped\r\n                oldY = playerObj.position.y\r\n            } else {\r\n                countDropped = 0\r\n            }\r\n            \r\n            if (countDropped > 800 && !isGameComplete) {\r\n                isGameComplete = true\r\n                finalComplete()\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(update)\r\n    }\r\n}","import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { TRANSLATE_WORLDS } from \"./constants/constants_replicies\";\r\n\r\n// ********** CHAPTER03 ****************\r\n\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, { ...CONSTANTS, TRANSLATE_WORLDS }))\r\n"],"sourceRoot":""}