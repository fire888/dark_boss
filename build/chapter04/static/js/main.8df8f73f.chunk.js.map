{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","_CORE/helpers/helper_translate.js","chapter04/src/constants/constants_elements.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer_v02.js","_CORE/helpers/helper_MaterialsLib.js","chapter04/src/systems/system_level.js","assets/level_chapter04/level02.obj","assets/level_chapter04/floor_outer_map.jpg","assets/level_chapter04/floor_outer_map2.jpg","assets/sky2/px.jpg","assets/sky2/nx.jpg","assets/sky2/py.jpg","assets/sky2/ny.jpg","assets/sky2/pz.jpg","assets/sky2/nz.jpg","_CORE/helpers/helper_CollisionsItems_v02.js","chapter04/src/systems/system_PlayerMoveOnLevel.js","chapter04/src/constants/constants_modules.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter04/src/actions/StarterPlay.js","chapter04/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","vocab","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","MATERIALS_CONFIG","mat","props","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","map","skinning","studioConfig","canId","rendererCon","antialias","amb","strength","sceneEnvironment","fogNear","fogFar","backgroundImgKey","composerAddPass","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","t","word","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseDown","emit","onTouchStart","onMouseUp","onTouchEnd","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","clearColor","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_camera","position","set","OrbitControls","domElement","update","_composer","EffectComposer","box","matrixAutoUpdate","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","_backgroundImgKey","cam","addPass","RenderPass","ShaderPass","_changeFog","_changeBackground","startData","endData","TWEEN","to","onUpdate","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","event","is","Player","studio","_isBlocked","mesh","fromArray","rotation","userData","bottomObj","frontObj","backObj","strenth","light","setCamera","_isCanMove","x","y","z","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","createLevelMeshes","allMeshes","traverse","child","name","includes","geometry","wall","road","rooms","collisionsBotsRooms","helper_CollisionsItems_v02","_arrMeshes","_vecStart","_vecDir","_rayCaster","objFrom","objTo","dist","getWorldPosition","sub","intersects","intersectObjects","distance","helper_rotate","quat1","quat2","n","quaternion","slerpQuaternions","GAME_MODULES","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","Math","max","min","fullscreenElement","emitFrameUpdate","time","delta","count","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","systemCollisionFloor","systemCollisionItems","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","mapFloorOuter","wrap","mapFloorOuter2","player","collisionsWalls","setItemToCollision","isBlocked","toggleBlocked","isButtonsDisabled","quaternionOld","quaternionNew","UP_VECTOR","rotatePlayerToTop","copy","setFromAxisAngle","random","PI","then","up","checkAndMoveFront","checkCollisions","isCollision","collision","object","la","addVectors","face","normal","lookAt","rotateX","setRotationFromQuaternion","rotatePlayerToCollisionTarget","translateZ","rotateY","equals","translateY","checkBottomAndDropDownPlayer","checkAndMoveBack","isOpen","ui","showStartButton","pipeLineForInit"],"mappings":"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","file":"static/js/main.8df8f73f.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","\r\n\r\nexport const MATERIALS_CONFIG = {\r\n\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x485569,\r\n            emissive: 0x999999,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.1,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    // 'green': {\r\n    //     mat: 'MeshPhongMaterial',\r\n    //     props: {\r\n    //         color: 0x004466,\r\n    //         emissive: 0xffffff,\r\n    //         map: 'mapFloorOuter',\r\n    //         bumpMap: 'mapFloorOuter',\r\n    //         bumpScale: 1,\r\n    //         envMap: 'skyBox',\r\n    //         reflectivity: 0.5,\r\n    //     },\r\n    // },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xb2b081,\r\n            emissive: 0x444444,\r\n            map: 'mapFloorOuter2',\r\n            bumpMap: 'mapFloorOuter2',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.4,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    amb: {\r\n        color: 0x187d53,\r\n        strength: 0.7,\r\n    },\r\n    sceneEnvironment: {\r\n        fogNear: 20, \r\n        fogFar: 500, \r\n        color: 0x187d53,\r\n        backgroundImgKey: null,\r\n    },\r\n    composerAddPass: 'Saturate',\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [0, 5, 0],\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0xffffff,\r\n        strength: 5000,\r\n        pos: [0, 50, 5],\r\n    },\r\n}\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures')\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => getterLoader(type).load(path, resolve))\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._camera = null\r\n        this._camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000 );\r\n        this._camera.position.set(0, 0, 20)\r\n\r\n        const controls = new OrbitControls( this._camera, this._renderer.domElement );\r\n        controls.target.set( 0, 0, 0 );\r\n        controls.update();\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        //this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n\r\n\r\n\r\n\r\n        const box = new THREE.Mesh(\r\n            new THREE.BoxGeometry(1, 1, 1),\r\n            new THREE.MeshBasicMaterial({ color: 0x00FF00 }),\r\n        )\r\n        box.matrixAutoUpdate = false\r\n        setTimeout(() => {\r\n            //box.matrixAutoUpdate = true\r\n        }, 2000)\r\n\r\n        this._scene.add(box)\r\n        let scale = 1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._camera) {\r\n                this._camera.aspect = size.width/size.height\r\n                this._camera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        const drawFrame = () => {\r\n            // scale += 0.01\r\n            // box.matrix.set(...[\r\n            //     scale, 0, 0, 0,\r\n            //     0, scale, 0, 0,\r\n            //     0, 0, scale, 0,\r\n            //     0, 0, 0, 1,\r\n            // ])\r\n\r\n\r\n            this._camera && this._composer.render(this._scene, this._camera)\r\n        }\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n\r\n\r\n\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    \r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._camera = cam\r\n        this._composer.addPass(new RenderPass(this._scene, this._camera))\r\n        \r\n        if (!this._root.CONSTANTS.studioConfig.composerAddPass) return; \r\n        \r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n            this._composer.addPass(new ShaderPass(Saturate))\r\n        }  \r\n    }\r\n\r\n    changeEnvironment (sceneEnvironment) {\r\n        this._changeFog(sceneEnvironment)\r\n        this._changeBackground(sceneEnvironment)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    this._lightA.color = startData.color\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\nimport { Object3D } from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        const { studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        this._isBlocked = true\r\n\r\n        this.mesh = new THREE.Object3D()\r\n        //this.mesh = new THREE.Mesh(\r\n        //    new THREE.BoxGeometry(.5, .5, .5),\r\n        //    new THREE.MeshBasicMaterial({ color: 0xffff00 }) \r\n        //)\r\n        this.mesh.position.fromArray([0, 20, 0])\r\n        this.mesh.rotation.fromArray([0, 0, 0])\r\n        this.mesh.userData.type = 'player'\r\n\r\n\r\n        this.bottomObj = new THREE.Object3D()\r\n        // this.bottomObj = new THREE.Mesh(\r\n        //     new THREE.BoxGeometry(.5, .5, .5),\r\n        //     new THREE.MeshBasicMaterial({ color: 0x000000 }) \r\n        // )\r\n        this.bottomObj.position.fromArray([0, -2, 0])\r\n        this.mesh.add(this.bottomObj)\r\n\r\n        this.frontObj = new THREE.Object3D()\r\n        // this.frontObj = new THREE.Mesh(\r\n        //     new THREE.BoxGeometry(.5, .5, .5),\r\n        //     new THREE.MeshBasicMaterial({ color: 0xFFFFFF }) \r\n        // )\r\n        this.frontObj.position.fromArray([0, 0, -2])\r\n        this.mesh.add(this.frontObj)\r\n\r\n        this.backObj = new THREE.Object3D()\r\n        // this.backObj = new THREE.Mesh(\r\n        //     new THREE.BoxGeometry(.5, .5, .5),\r\n        //     new THREE.MeshBasicMaterial({ color: 0xff0000 }) \r\n        // )\r\n        this.backObj.position.fromArray([0, 0, 2])\r\n        this.mesh.add(this.backObj)\r\n\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray([0, 0, 2])\r\n            this.mesh.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this.mesh.add(light)\r\n        }\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this.mesh)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this.mesh\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this.mesh.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\n\r\nexport class Level {\r\n    constructor(root) {\r\n        const { \r\n            studio, \r\n            assets, \r\n            materials, \r\n            systemCollisionFloor, \r\n            systemCollisionItems \r\n        } = root\r\n\r\n        const { allMeshes } = createLevelMeshes(assets, materials)\r\n\r\n        for (let key in allMeshes) {\r\n            studio.addToScene(allMeshes[key])\r\n            //systemCollisionFloor.setItemToCollision({ mesh: allMeshes[key] })\r\n            //systemCollisionItems.setItemToCollision({ mesh: allMeshes[key] })\r\n        }\r\n\r\n\r\n        this.allMeshes = allMeshes\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const rooms = {}\r\n    const collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"level\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n        if (child.name.includes(\"road_wall\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n\r\n        // if (child.name.includes(\"room_\")) {\r\n        //     const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n        //     rooms[child.name] = mesh\r\n        //     mesh.name = child.name\r\n        //     allMeshes[child.name] = mesh\r\n        // }\r\n        // if (child.name.includes(\"collision_\")) {\r\n        //     const mesh = new THREE.Mesh(child.geometry)\r\n        //     collisionsBotsRooms[child.name] = mesh\r\n        //     mesh.name = child.name\r\n        //     allMeshes[child.name] = mesh\r\n        // }\r\n        // if (child.name.includes(\"outer_walls\")) {\r\n        //     const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n        //     mesh.name = child.name\r\n        //     allMeshes[child.name] = mesh\r\n        // }\r\n        // if (child.name.includes(\"outer_road\")) {\r\n        //     const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n        //     mesh.name = child.name\r\n        //     allMeshes[child.name] = mesh\r\n        // }\r\n        // if (child.name.includes(\"outer_floor\")) {\r\n        //     const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n        //     mesh.name = child.name\r\n        //     allMeshes[child.name] = mesh\r\n        // }\r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        collisionsBotsRooms,\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level02.35a60911.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.b9a0b868.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map2.7501c480.jpg\";","export default __webpack_public_path__ + \"static/media/px.f288daa0.jpg\";","export default __webpack_public_path__ + \"static/media/nx.30b9dafc.jpg\";","export default __webpack_public_path__ + \"static/media/py.86e432e6.jpg\";","export default __webpack_public_path__ + \"static/media/ny.05500e5a.jpg\";","export default __webpack_public_path__ + \"static/media/pz.7df5de11.jpg\";","export default __webpack_public_path__ + \"static/media/nz.54e73079.jpg\";","import * as THREE from \"three\";\r\n\r\n\r\nexport class helper_CollisionsItems_v02 {\r\n    constructor () {\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision (mesh) {\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, dist) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0] && intersects[0].distance < dist) {\r\n            return [ true, intersects[0] ]\r\n        }\r\n        return [ false, null ]\r\n    }\r\n}","import { helper_CollisionsItems_v02 } from '../../../_CORE/helpers/helper_CollisionsItems_v02'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport class system_PlayerMoveOnLevel {\r\n    constructor (root) {\r\n\r\n\r\n\r\n        const { \r\n            emitter, \r\n            CONSTANTS,\r\n            player,\r\n            level,\r\n        } = root\r\n\r\n\r\n\r\n        /** set items to collisions */\r\n        const collisionsWalls = new helper_CollisionsItems_v02()\r\n        for (let key in level.allMeshes) {\r\n            if (key === 'road_wall') {\r\n                level.allMeshes[key].userData['isWallWalking'] = true\r\n            }\r\n\r\n            collisionsWalls.setItemToCollision(level.allMeshes[key])\r\n        }\r\n\r\n\r\n\r\n        const {\r\n            speed,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n        let isBlocked = false\r\n        player.toggleBlocked = val => isBlocked = val\r\n\r\n        let isButtonsDisabled = false\r\n        let keys = {}\r\n    \r\n        const quaternionOld = new THREE.Quaternion()\r\n        const quaternionNew = new THREE.Quaternion()\r\n\r\n        const UP_VECTOR = new THREE.Vector3(0, 1, 0)\r\n        const OFFSET_FROM_PLANES = 17\r\n        const OFFSET_FROM_PLANES_TO_DROP = 17.2\r\n        const OFFSET_FROM_PLANES_TO_STAIR = 16.5\r\n\r\n\r\n\r\n        const rotatePlayerToTop = () => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            quaternionNew.setFromAxisAngle(UP_VECTOR, Math.random() * Math.PI * 2)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    player.mesh.up.copy(UP_VECTOR)\r\n                    isBlocked = false\r\n                })\r\n        }\r\n\r\n\r\n\r\n        const rotatePlayerToCollisionTarget = collision => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            const la = new THREE.Vector3().addVectors(player.mesh.position, collision.face.normal)\r\n            player.mesh.lookAt(la)\r\n            player.mesh.up.copy(collision.face.normal)\r\n            player.mesh.rotateX(Math.PI / 2)\r\n            quaternionNew.copy(player.mesh.quaternion)\r\n\r\n            player.mesh.setRotationFromQuaternion(quaternionOld)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    isBlocked = false\r\n                })\r\n        } \r\n\r\n\r\n\r\n        const checkBottomAndDropDownPlayer = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.bottomObj, OFFSET_FROM_PLANES_TO_DROP)\r\n\r\n            /** free down without intercepts */\r\n            if (!isCollision) {\r\n                /** if player not up - rotated to up */\r\n                !player.mesh.up.equals(UP_VECTOR) && rotatePlayerToTop()\r\n                player.mesh.position.y += (speedDown * data.count)\r\n\r\n                return;\r\n            }\r\n\r\n            /** check is player in wall and must down - rotate to top */\r\n            if (\r\n                !collision.object.userData['isWallWalking'] &&\r\n                !player.mesh.up.equals(UP_VECTOR)\r\n            ) {\r\n                rotatePlayerToTop()\r\n                return;\r\n            }\r\n\r\n            /** move player to top if on stairs */\r\n            if (collision.distance < OFFSET_FROM_PLANES_TO_STAIR) {\r\n                player.mesh.translateY(OFFSET_FROM_PLANES - collision.distance)\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const checkAndMoveFront = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.frontObj, OFFSET_FROM_PLANES)\r\n\r\n            if (!isCollision) {\r\n                player.mesh.translateZ(-speed * data.count)\r\n            } else if (collision.object.userData['isWallWalking']) {\r\n                rotatePlayerToCollisionTarget(collision)\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n        const checkAndMoveBack = data => {\r\n            const [isCollision] = collisionsWalls.checkCollisions(player.mesh, player.backObj, OFFSET_FROM_PLANES)\r\n            if (isCollision) return;\r\n                \r\n            player.mesh.translateZ(speed * data.count)\r\n        }\r\n\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && player.mesh.rotateY(speedRot * data.count)\r\n            keys['right'] && player.mesh.rotateY(-speedRot * data.count)\r\n\r\n            if (isBlocked) return;\r\n\r\n            checkBottomAndDropDownPlayer(data)\r\n            keys['up'] && checkAndMoveFront(data)\r\n            keys['down'] && checkAndMoveBack(data)\r\n        }\r\n    \r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n    }\r\n} \r\n\r\n\r\n\r\n\r\n\r\nconst helper_rotate = (mesh, quat1, quat2) => {\r\n    return new Promise(resolve => {\r\n        let n = 0\r\n\r\n        const update = () => {\r\n            n += 0.03\r\n            n > 1 && (n = 1)\r\n\r\n            mesh.quaternion.slerpQuaternions(quat1, quat2, n)\r\n\r\n            if (n === 1) {\r\n                return resolve()\r\n            }\r\n\r\n            setTimeout(update, 15)\r\n        }\r\n\r\n        update()\r\n    })\r\n}\r\n\r\n","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { UI } from '../../../_CORE/ui/UI'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer_v02'\r\n\r\n\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../../../assets/level_chapter04/level02.obj'\r\nimport mapFloorOuter from '../../../assets/level_chapter04/floor_outer_map.jpg'\r\nimport mapFloorOuter2 from '../../../assets/level_chapter04/floor_outer_map2.jpg'\r\nimport pxjpg from '../../../assets/sky2/px.jpg'\r\nimport nxjpg from '../../../assets/sky2/nx.jpg'\r\nimport pyjpg from '../../../assets/sky2/py.jpg'\r\nimport nyjpg from '../../../assets/sky2/ny.jpg'\r\nimport pzjpg from '../../../assets/sky2/pz.jpg'\r\nimport nzjpg from '../../../assets/sky2/nz.jpg'\r\n\r\n\r\nimport { system_PlayerMoveOnLevel } from '../systems/system_PlayerMoveOnLevel' \r\nimport { StarterPlay } from '../actions/StarterPlay'\r\n\r\n\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'ui',\r\n        constr: UI,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: Helper_TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    // {\r\n    //     key: 'systemCollisionFloor',\r\n    //     constr: SystemCollisionWithItems,\r\n    //     initStateKey: 'beforeStartPlay',\r\n    // },\r\n    // {\r\n    //     key: 'systemCollisionItems',\r\n    //     constr: SystemCollisionWithItems,\r\n    //     initStateKey: 'beforeStartPlay',\r\n    // },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: Helper_MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n            { type: 'img', path: mapFloorOuter2, key: 'mapFloorOuter2', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'system_PlayerMoveOnLevel',\r\n        constr: system_PlayerMoveOnLevel,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'starterPlay',\r\n        constr: StarterPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","export class StarterPlay {\r\n    constructor (gameContext) {\r\n        const { player, ui } = gameContext\r\n        ui.showStartButton(() => {\r\n            player.toggleBlocked(false)\r\n        })\r\n    }\r\n}","// import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\n// import * as CONSTANTS from './constants/constants_elements'\r\n// import { TRANSLATE_WORLDS } from \"./constants/constants_replicies\";\r\n\r\n// // ********** CHAPTER03 ****************\r\n\r\n// import { GAME_MODULES } from \"./constants/constants_modules\"\r\n// window.addEventListener('load', () => pipeLineForInit(GAME_MODULES, { ...CONSTANTS, TRANSLATE_WORLDS }))\r\n\r\nimport { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\n\r\n\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, CONSTANTS ))\r\n"],"sourceRoot":""}