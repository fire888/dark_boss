{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","chapter04/src/constants/constants_elements.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/helpers/helper_translate.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer_v02.js","_CORE/helpers/helper_MaterialsLib.js","chapter04/src/systems/system_level.js","assets/chapter04/level02.obj","assets/chapter04/floor_outer_map3.jpg","assets/chapter04/floor_outer_map2.jpg","assets/floor_outer_map.jpg","assets/sky3/px.jpg","assets/sky3/nx.jpg","assets/sky3/py.jpg","assets/sky3/ny.jpg","assets/sky3/pz.jpg","assets/sky3/nz.jpg","assets/sky2/px.jpg","assets/sky2/nx.jpg","assets/sky2/py.jpg","assets/sky2/ny.jpg","assets/sky2/pz.jpg","assets/sky2/nz.jpg","_CORE/helpers/helper_CollisionsItems_v02.js","chapter04/src/systems/system_PlayerMoveOnLevel.js","chapter04/src/systems/system_Monsters.js","assets/chapter04/botWalk.gltf","assets/chapter04/skin.jpg","chapter04/src/constants/constants_replicies.js","chapter04/src/ui/UserReplicies.js","chapter04/src/store/actions.js","chapter04/src/ui/BotAnswers.js","chapter04/src/ui/CustomReactComponent.js","chapter04/src/ui/store.js","chapter04/src/constants/constants_modules.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter04/src/systems/system_PrepareDialogs.js","chapter04/src/ui/Ui.js","chapter04/src/actions/StarterPlay.js","chapter04/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","MATERIALS_CONFIG","mat","props","color","emissive","map","bumpMap","bumpScale","envMap","reflectivity","shininess","specular","skinning","START_ENV_CONFIG","fogNear","fogFar","backgroundImgKey","START_ENV_CONFIG_2","START_ENV_CONFIG_3","studioConfig","canId","rendererCon","antialias","amb","strength","sceneEnvironment","composerAddPass","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","createTranslater","vocab","word","t","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseDown","emit","onTouchStart","onMouseUp","onTouchEnd","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","clearColor","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_playerCamera","_controlsCamera","position","set","OrbitControls","domElement","update","_composer","EffectComposer","_renderPass","RenderPass","addPass","ShaderPass","vec3","isPlayerView","camera","getWorldPosition","x","y","z","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","removeFromScene","remove","_backgroundImgKey","cam","conf","_changeFog","_changeBackground","startData","endData","TWEEN","to","time","onUpdate","updateAmb","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","event","is","Player","studio","_camera","isBlocked","isFreeze","mesh","rotation","fromArray","userData","bottomObj","frontObj","backObj","strenth","light","setCamera","isFeeze","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","createLevelMeshes","allMeshes","areas","traverse","child","name","includes","geometry","groundTop","wall","road","strArr","split","area","helper_CollisionsItems_v02","_arrMeshes","_vecStart","_vecDir","_rayCaster","objFrom","objTo","dist","sub","intersects","intersectObjects","distance","helper_rotate","quat1","quat2","n","quaternion","slerpQuaternions","changerAreaLevel","collisionsWalls","changeViewLevel","ind","changeCollisionLevel","removeItemFromCollision","setItemToCollision","ran","Math","random","MONSTERS_DATA","rot","walkData","defaultAnimation","PI","system_Monsters","_currentArea","_bot","bot","scene","children","material","_frontObj","scale","_animations","createAnimations","play","_freeWalk","createFreeWalk","_areas","visible","arrWas","setBotTo","clearCollisions","stop","playerPos","plPos","lookAt","assetsBot","animations","mixer","dialog","clipAction","timeScale","walk","stay","actions","currentAction","delta","stopAllAction","startRotate","angleRot","countRotation","startGo","numsMove","min","countMove","translateZ","meshFrontObj","wallOffset","isUpdate","collisions","createCollisionWithItems","toggleAction","d","checkCollisions","max","arrMeshes","vecStart","vecDir","rayCaster","TRANSLATE_WORLDS","CORE","UserReplicies","userReplicies","ui","clickPhrase","r","phrase","toggleDialog","isDialog","toggleButtonDialog","isButtonDialog","q","floor","BotAnswers","botAnswers","isShowFinalMessage","isShowPalleteDialog","uiState","currentBot","phraseIndex","isDialogComplete","phrasesData","GAME_MODULES","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","fullscreenElement","emitFrameUpdate","count","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","px2jpg","nx2jpg","py2jpg","ny2jpg","pz2jpg","nz2jpg","mapFloorOuter","wrap","mapFloorOuter2","mapTop","player","currentArea","updateLevel","toggleBlocked","isCanMove","toggleCanMove","dir","quaternionOld","quaternionNew","UP_VECTOR","rotatePlayerToTop","copy","setFromAxisAngle","then","up","checkAndMoveFront","isCollision","collision","object","la","addVectors","face","normal","rotateX","setRotationFromQuaternion","rotatePlayerToCollisionTarget","rotateY","equals","translateY","checkBottomAndDropDownPlayer","checkAndMoveBack","botSrc","monsterSkinSrc","getBot","vecFront","distanceTo","stopDialog","getCurrentArea","startDialog","levelEvent","createCustomStore","showStartButton","changeEnvironment","pipeLineForInit"],"mappings":"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","file":"static/js/main.30ee3c49.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","\r\n\r\nexport const MATERIALS_CONFIG = {\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x338877,\r\n            emissive: 0x9997777,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.3,\r\n            shininess: 60,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'groundTop': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xaa6666,\r\n            emissive: 0xaa6666,\r\n            map: 'mapTop',\r\n            bumpMap: 'mapTop',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox2',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x666666,\r\n            map: 'mapFloorOuter2',\r\n            bumpMap: 'mapFloorOuter2',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.3,\r\n        },\r\n    },\r\n\r\n    'skin': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x555555,\r\n            specular: 0xffffff,\r\n            shininess: 12,\r\n            bumpMap: 'skin',\r\n            bumpScale: 0.8,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            map: 'skin',\r\n            skinning: true,\r\n        },        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const START_ENV_CONFIG = { fogNear: -10, fogFar: 20, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\nexport const START_ENV_CONFIG_2 = { fogNear: -10, fogFar: 0, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\nexport const START_ENV_CONFIG_3 = { fogNear: 20, fogFar: 500, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    amb: {\r\n        color: 0xa5ecc5,\r\n        strength: 0.8,\r\n    },\r\n    sceneEnvironment: { fogNear: -20, fogFar: 0, color: 0x4a0a45, backgroundImgKey: 'skyBox2' },\r\n    composerAddPass: 'Saturate',\r\n}\r\n\r\n\r\n\r\n\r\nexport const playerConfig = {\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [0, 5, 0],\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0x555555,\r\n        strength: 0,\r\n        pos: [0, 400, 5],\r\n    },\r\n}\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures') {\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n        }\r\n\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => {\r\n        getterLoader(type).load(path, resolve)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'Endways': 'Напрямик',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            { text: 'Endways', href: 'http://js.otrisovano.ru/endways/' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n\r\n\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._playerCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n\r\n\r\n        this._controlsCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n        this._controlsCamera.position.set(0, 0, 20)\r\n        const controls = new OrbitControls(this._controlsCamera, this._renderer.domElement)\r\n        controls.target.set(0, 0, 0)\r\n        controls.update();\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        this._renderPass = new RenderPass(this._scene, this._controlsCamera)\r\n        this._composer.addPass(this._renderPass)\r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass) {\r\n            if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n                this._composer.addPass(new ShaderPass(Saturate))\r\n            }  \r\n        } \r\n\r\n\r\n\r\n        /** toggle view camera to debug by orbitControls */\r\n        const vec3 = new THREE.Vector3()\r\n        let isPlayerView = true \r\n        emitter.subscribe('keyEvent')(data => {\r\n            if (!data['o']) {\r\n                return;\r\n            }\r\n\r\n            if (isPlayerView) {\r\n                isPlayerView = false\r\n                this._renderPass.camera = this._controlsCamera\r\n                this._playerCamera.getWorldPosition(vec3)\r\n                this._controlsCamera.position.x = vec3.x + 100\r\n                this._controlsCamera.position.y = vec3.y + 100\r\n                this._controlsCamera.position.z = vec3.z\r\n                controls.target.set(vec3.x, vec3.y, vec3.z)\r\n                controls.update()\r\n            } else {\r\n                isPlayerView = true \r\n                this._renderPass.camera = this._playerCamera\r\n            }\r\n        })\r\n    \r\n        \r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._controlsCamera) {\r\n                this._controlsCamera.aspect = size.width/size.height\r\n                this._controlsCamera.updateProjectionMatrix()\r\n            }\r\n            if (this._playerCamera) {\r\n                this._playerCamera.aspect = size.width/size.height\r\n                this._playerCamera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        this.removeFromScene = this._scene.remove.bind(this._scene)\r\n\r\n\r\n\r\n        const drawFrame = () => {\r\n            this._composer.render(this._scene, this._controlsCamera)\r\n        }\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._playerCamera = cam\r\n        this._renderPass.camera = this._playerCamera\r\n    }\r\n\r\n\r\n    changeEnvironment (sceneEnvironment, conf = null) {\r\n        this._changeFog(sceneEnvironment, conf)\r\n        this._changeBackground(sceneEnvironment, conf)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment, conf) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, (conf && conf.time) || 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    if (conf) { \r\n                        if (conf.updateAmb) this._lightA.color = startData.color\r\n                    } else {\r\n                        this._lightA.color = startData.color\r\n                    }\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n            'p': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break;\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break;\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break;\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break;\r\n                case 79: \r\n                    keys['o'] = isDown\r\n                    break;                \r\n                case 80: \r\n                    keys['p'] = isDown\r\n                default:\r\n                    break;\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        const { studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        this.isBlocked = true\r\n        this.isFreeze = true\r\n        \r\n        this.mesh = new THREE.Object3D()\r\n        this.mesh.rotation.fromArray([0, 0, 0])\r\n        this.mesh.userData.type = 'player'\r\n\r\n\r\n        this.bottomObj = new THREE.Object3D()\r\n        this.bottomObj.position.fromArray([0, -.02, 0])\r\n        this.mesh.add(this.bottomObj)\r\n\r\n        this.frontObj = new THREE.Object3D()\r\n        this.frontObj.position.fromArray([0, 0, -.02])\r\n        this.mesh.add(this.frontObj)\r\n\r\n        this.backObj = new THREE.Object3D()\r\n        this.backObj.position.fromArray([0, 0, 0.02])\r\n        this.mesh.add(this.backObj)\r\n\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray([0, 0, -2])\r\n            this.mesh.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this.mesh.add(light)\r\n        }\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this.mesh)\r\n    }\r\n\r\n    // toggleBlocked (val) {\r\n    //     this.isFeeze = val\r\n    // }\r\n\r\n    toggleFeeze (val) {\r\n        this.isFeeze = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        //this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this.mesh\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this.mesh.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\n\r\nexport class Level {\r\n    constructor(root) {\r\n        const { \r\n            studio, \r\n            assets, \r\n            materials, \r\n        } = root\r\n\r\n        const { allMeshes, areas } = createLevelMeshes(assets, materials)\r\n        root.assets.areas = areas\r\n\r\n\r\n        //this.allMeshes = allMeshes\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const areas = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        let mesh = null\r\n        \r\n        if (child.name.includes(\"level\")) {\r\n            if (child.name === 'level_020_001') {\r\n                mesh = new THREE.Mesh(child.geometry, materials.groundTop)\r\n            } else {\r\n                mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            }\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n        if (child.name.includes(\"roadwall\")) {\r\n            mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            mesh.userData['isWallWalking'] = true\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n\r\n        if (child.name.includes(\"level\") || child.name.includes(\"roadwall\")) {\r\n            const strArr = child.name.split('_')\r\n\r\n            if (strArr[1] && mesh) {\r\n                if (!areas[+strArr[1]]) {\r\n                    areas[+strArr[1]] = [] \r\n                }\r\n                mesh.userData.area = +strArr[1]\r\n                areas[+strArr[1]].push(mesh)   \r\n            }\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        allMeshes,\r\n        areas\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level02.46579f34.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map3.558e9646.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map2.2bd99ce1.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/px.c5995c72.jpg\";","export default __webpack_public_path__ + \"static/media/nx.04390d21.jpg\";","export default __webpack_public_path__ + \"static/media/py.f7a76cc4.jpg\";","export default __webpack_public_path__ + \"static/media/ny.4e15a317.jpg\";","export default __webpack_public_path__ + \"static/media/pz.7c1308f5.jpg\";","export default __webpack_public_path__ + \"static/media/nz.6287fe7d.jpg\";","export default __webpack_public_path__ + \"static/media/px.96d0b65f.jpg\";","export default __webpack_public_path__ + \"static/media/nx.8cbf039d.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.09051a4e.jpg\";","export default __webpack_public_path__ + \"static/media/pz.a1539724.jpg\";","export default __webpack_public_path__ + \"static/media/nz.0bc769f7.jpg\";","import * as THREE from \"three\";\r\n\r\n\r\nexport class helper_CollisionsItems_v02 {\r\n    constructor () {\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision (mesh) {\r\n        for (let i = 0; i < this._arrMeshes.length; ++i) {\r\n            if (this._arrMeshes[i] === mesh) {\r\n                return;\r\n            }\r\n        }\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, dist) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0] && intersects[0].distance < dist) {\r\n            return [ true, intersects[0] ]\r\n        }\r\n        return [ false, null ]\r\n    }\r\n}","import { helper_CollisionsItems_v02 } from '../../../_CORE/helpers/helper_CollisionsItems_v02'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport class system_PlayerMoveOnLevel {\r\n    constructor (root) {\r\n\r\n\r\n\r\n        const { \r\n            emitter, \r\n            CONSTANTS,\r\n            player,\r\n            level,\r\n            assets,\r\n            studio,\r\n        } = root\r\n\r\n\r\n\r\n        let currentArea = 0\r\n        player.mesh.position.fromArray([0, -40, 0])\r\n\r\n        //let currentArea = 4\r\n        //player.mesh.position.fromArray([-531.9216580366183, 62.97990036010742, 198.1976467682245])\r\n\r\n        //let currentArea = 11\r\n        //player.mesh.position.fromArray([-574.1384065002559, 1379.6997473405822, 159.23052507760912])\r\n\r\n        //let currentArea = 18\r\n        //player.mesh.position.fromArray([-1656.0663386897618, 1906.31640625, 28.162585622834097])\r\n\r\n\r\n\r\n\r\n\r\n        const collisionsWalls = new helper_CollisionsItems_v02()\r\n        const updateLevel = changerAreaLevel(assets.areas, studio, collisionsWalls, emitter)\r\n        updateLevel(currentArea)\r\n\r\n\r\n        const {\r\n            speed,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n        let isBlocked = true\r\n        player.toggleBlocked = val => isBlocked = val\r\n\r\n        this.isCanMove = {\r\n            'forward': true,\r\n            'back': true,\r\n        }\r\n        player.toggleCanMove = (dir, val) => this.isCanMove[dir] = val\r\n\r\n\r\n        let isButtonsDisabled = false\r\n        let keys = {}\r\n    \r\n        const quaternionOld = new THREE.Quaternion()\r\n        const quaternionNew = new THREE.Quaternion()\r\n\r\n        const UP_VECTOR = new THREE.Vector3(0, 1, 0)\r\n        const OFFSET_FROM_PLANES = 17\r\n        const OFFSET_FROM_PLANES_TO_DROP = 17.2\r\n\r\n\r\n\r\n        const rotatePlayerToTop = () => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            quaternionNew.setFromAxisAngle(UP_VECTOR, Math.random() * Math.PI * 2)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    player.mesh.up.copy(UP_VECTOR)\r\n                    isBlocked = false\r\n                })\r\n        }\r\n\r\n\r\n\r\n        const rotatePlayerToCollisionTarget = collision => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            const la = new THREE.Vector3().addVectors(player.mesh.position, collision.face.normal)\r\n            player.mesh.lookAt(la)\r\n            player.mesh.up.copy(collision.face.normal)\r\n            player.mesh.rotateX(Math.PI / 2)\r\n            quaternionNew.copy(player.mesh.quaternion)\r\n\r\n            player.mesh.setRotationFromQuaternion(quaternionOld)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    isBlocked = false\r\n                })\r\n        } \r\n\r\n\r\n\r\n        const checkBottomAndDropDownPlayer = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.bottomObj, OFFSET_FROM_PLANES_TO_DROP)\r\n\r\n            /** update level new area */\r\n            if (isCollision) {\r\n                if (collision.object.userData.area !== currentArea) {\r\n                    currentArea = collision.object.userData.area\r\n                    updateLevel(currentArea)\r\n                }\r\n            }\r\n\r\n\r\n            /** move player to top if on stairs */\r\n            if (isCollision && OFFSET_FROM_PLANES > collision.distance) {\r\n                player.mesh.translateY(OFFSET_FROM_PLANES - collision.distance)\r\n\r\n                return;\r\n            }\r\n\r\n\r\n            /** free down without intercepts */\r\n            if (!isCollision) {\r\n                /** if player not up - rotated to up */\r\n                !player.mesh.up.equals(UP_VECTOR) && rotatePlayerToTop()\r\n                player.mesh.position.y += (speedDown * data.count)\r\n\r\n                return;\r\n            }\r\n\r\n            /** check is player in wall and must down - rotate to top */\r\n            if (\r\n                !collision.object.userData['isWallWalking'] &&\r\n                !player.mesh.up.equals(UP_VECTOR)\r\n            ) {\r\n                rotatePlayerToTop()\r\n                \r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const checkAndMoveFront = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.frontObj, OFFSET_FROM_PLANES)\r\n\r\n            /** update level new area */\r\n            if (isCollision) {\r\n                if (collision.object.userData.area !== currentArea) {\r\n                    currentArea = collision.object.userData.area\r\n                    updateLevel(currentArea)\r\n                }\r\n            }\r\n\r\n            if (!isCollision) {\r\n                player.mesh.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')('forward')\r\n            } else if (collision.object.userData['isWallWalking']) {\r\n                rotatePlayerToCollisionTarget(collision)\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n        const checkAndMoveBack = data => {\r\n            const [isCollision] = collisionsWalls.checkCollisions(player.mesh, player.backObj, OFFSET_FROM_PLANES)\r\n            if (isCollision) return;\r\n                \r\n            player.mesh.translateZ(speed * data.count)\r\n            emitter.emit('playerMove')('back')\r\n        }\r\n\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && player.mesh.rotateY(speedRot * data.count)\r\n            keys['right'] && player.mesh.rotateY(-speedRot * data.count)\r\n\r\n            if (isBlocked) return;\r\n\r\n            checkBottomAndDropDownPlayer(data)\r\n            keys['up'] && this.isCanMove['forward'] && checkAndMoveFront(data)\r\n            keys['down'] && this.isCanMove['back'] && checkAndMoveBack(data)\r\n            keys['p'] && console.log(`player.mesh.position.fromArray([${player.mesh.position.x}, ${player.mesh.position.y + 25}, ${player.mesh.position.z}])`)\r\n        }\r\n    \r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n    }\r\n} \r\n\r\n\r\n\r\n\r\n\r\nconst helper_rotate = (mesh, quat1, quat2) => {\r\n    return new Promise(resolve => {\r\n        let n = 0\r\n\r\n        const update = () => {\r\n            n += 0.03\r\n            n > 1 && (n = 1)\r\n\r\n            mesh.quaternion.slerpQuaternions(quat1, quat2, n)\r\n\r\n            if (n === 1) {\r\n                return resolve()\r\n            }\r\n\r\n            setTimeout(update, 15)\r\n        }\r\n\r\n        update()\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst changerAreaLevel = (areas, studio, collisionsWalls, emitter) => {\r\n    const changeViewLevel = (ind, action) => {\r\n        if (!areas[ind]) return;\r\n\r\n        for (let i = 0; i < areas[ind].length; ++i) {\r\n            const mesh = areas[ind][i]\r\n            if (action === 'remove') studio.removeFromScene(mesh) \r\n            if (action === 'add') studio.addToScene(mesh) \r\n        } \r\n    } \r\n\r\n    const changeCollisionLevel = (ind, action) => {\r\n        if (!areas[ind]) return;\r\n\r\n        for (let i = 0; i < areas[ind].length; ++i) {\r\n            const mesh = areas[ind][i]\r\n            if (action === 'remove') collisionsWalls.removeItemFromCollision(mesh)\r\n            if (action === 'add') collisionsWalls.setItemToCollision(mesh)\r\n        } \r\n    } \r\n\r\n\r\n    const updateLevel = index => {\r\n        console.log(index)\r\n        emitter.emit('levelChanged')(index)\r\n\r\n\r\n        changeViewLevel(index - 4, 'remove')\r\n        changeViewLevel(index - 3, 'remove')\r\n        changeViewLevel(index - 2, 'add')\r\n        changeViewLevel(index - 1, 'add')\r\n        changeViewLevel(index, 'add')\r\n        changeViewLevel(index + 1, 'add')\r\n        changeViewLevel(index + 2, 'add')\r\n        changeViewLevel(index + 3, 'add')\r\n\r\n\r\n        changeCollisionLevel(index - 3, 'remove')\r\n        changeCollisionLevel(index - 2, 'remove')\r\n        changeCollisionLevel(index - 1, 'add')\r\n        changeCollisionLevel(index, 'add')\r\n        changeCollisionLevel(index + 1, 'add')\r\n        changeCollisionLevel(index + 2, 'add')\r\n    }\r\n\r\n\r\n    return updateLevel\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\nconst ran = Math.random\r\n\r\n\r\nconst MONSTERS_DATA = {\r\n    '0': {\r\n        pos: [0, -55, -10.680000000000003],\r\n        rot: [0, 0, 0],\r\n        walkData: null,\r\n        defaultAnimation: 'dialog',\r\n    },\r\n    '4': {\r\n        pos: [-697.1507105430046, -31, 278.81390042624884],\r\n        rot: [0, Math.PI / 2, 0],\r\n        walkData: '4',\r\n        defaultAnimation: 'walk',\r\n    },\r\n    '13': {\r\n        pos: [-946.6448542936033, 1263, 12.835633240896737],\r\n        rot: [0, Math.PI / 2, 0],\r\n        walkData: '13',\r\n        defaultAnimation: 'walk',\r\n\r\n    },\r\n    '20': {\r\n        pos: [-2145.4767672182593, 2118.171875, 4.885100091204412],\r\n        rot: [0, Math.PI / 2, 0],\r\n        walkData: null,\r\n        defaultAnimation: 'stay',\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class system_Monsters {\r\n    constructor(root) {\r\n        const {\r\n            studio,\r\n            assets,\r\n            materials,\r\n            emitter,\r\n        } = root\r\n\r\n\r\n        this._currentArea = null\r\n\r\n        this._bot = assets.bot.scene.children[0]\r\n        this._bot.traverse(item => {\r\n            item.material = materials['skin']\r\n        })\r\n\r\n\r\n        this._frontObj = new THREE.Object3D()\r\n        this._frontObj.position.set(0, 0, .1)\r\n        this._bot.add(this._frontObj)\r\n        this._bot.scale.set(1.15, 1.15, 1.15)\r\n\r\n\r\n        this._animations = createAnimations(assets.bot)\r\n        this._animations.play('walk')\r\n\r\n\r\n        this._freeWalk = createFreeWalk(this._bot, this._frontObj, 20, emitter)\r\n        this._areas = assets.areas\r\n\r\n\r\n        studio.addToScene(this._bot)\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(data => {\r\n            if (!this._bot.visible) return;\r\n\r\n            this._animations.update(data)\r\n        })\r\n\r\n\r\n        /** if player move to next/previous area do not reset bot */\r\n        const arrWas = []\r\n\r\n        emitter.subscribe('levelChanged')(index => {\r\n            if (index === 12) {\r\n                /** if player move to next/previous area do not reset bot */\r\n                for (let i = 0; i < arrWas.length; ++i) {\r\n                    if (arrWas[i] === 13) return;\r\n                }\r\n                arrWas.push(13)\r\n                this.setBotTo(13)\r\n            }\r\n            if (index === 19) {\r\n                /** if player move to next/previous area do not reset bot */\r\n                for (let i = 0; i < arrWas.length; ++i) {\r\n                    if (arrWas[i] === 20) return;\r\n                }\r\n                arrWas.push(20)\r\n                this.setBotTo(20)\r\n            }\r\n        })\r\n    }\r\n\r\n    setBotTo (val) {\r\n        this._currentArea = val\r\n\r\n        const { pos, rot, walkData, defaultAnimation } = MONSTERS_DATA[val]\r\n\r\n        this._animations.play(defaultAnimation)\r\n\r\n        if (walkData) {\r\n            this._freeWalk.clearCollisions()\r\n            for (let i = 0; i < this._areas[walkData].length; ++i) {\r\n                this._freeWalk.setItemToCollision(this._areas[walkData][i])\r\n            }\r\n            this._freeWalk.start()\r\n        } else {\r\n            this._freeWalk.stop()\r\n        }\r\n\r\n\r\n        this._bot.position.fromArray(pos)\r\n        this._bot.rotation.fromArray(rot)\r\n    }\r\n\r\n    getBot () {\r\n        return this._bot\r\n    }\r\n\r\n    getCurrentArea () {\r\n        return this._currentArea\r\n    }\r\n\r\n    startDialog (playerPos) {\r\n        this._freeWalk.stop()\r\n        this._animations.play('dialog')\r\n        const plPos = new THREE.Vector3(playerPos.x, this._bot.position.y, playerPos.z)\r\n        this._bot.lookAt(plPos)\r\n    }\r\n\r\n    stopDialog () {\r\n        const { walkData, defaultAnimation } = MONSTERS_DATA[this._currentArea]\r\n\r\n        walkData && this._freeWalk.start()\r\n        this._animations.play(defaultAnimation )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/** ANIMATION MANAGER ****************************************/\r\n\r\nconst createAnimations = assetsBot => {\r\n    const animations = assetsBot.animations\r\n    const mixer = new THREE.AnimationMixer(assetsBot.scene.children[0])\r\n\r\n    const dialog = mixer.clipAction(animations[2])\r\n    dialog.timeScale = 1.5\r\n\r\n    const walk = mixer.clipAction(animations[0])\r\n    walk.timeScale = 3\r\n\r\n    const stay = mixer.clipAction(animations[1])\r\n    stay.timeScale = 1\r\n\r\n\r\n    const actions = {\r\n        dialog,\r\n        walk,\r\n        stay,\r\n    }\r\n\r\n    let currentAction = null\r\n\r\n    return {\r\n        update: data => mixer.update(data.delta),\r\n        play: key => {\r\n            if (currentAction === key) return;\r\n\r\n            currentAction = key\r\n\r\n            mixer.stopAllAction()\r\n            actions[key].play()\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** WALKING ***************************************************/\r\n\r\n\r\nconst startRotate = mesh => {\r\n    const angleRot = (ran() * Math.PI * 1.5 + 1.3) * ran() < 0.5 ? 1 : -1\r\n    const numRotations = 40\r\n    const speed = angleRot / numRotations\r\n\r\n    let countRotation = 0\r\n\r\n    return () => {\r\n        mesh.rotation.y += speed\r\n        return ++countRotation < numRotations\r\n    }\r\n}\r\n\r\n\r\n\r\nconst startGo = (mesh, dist)  => {\r\n    const speed = 0.15\r\n    const numsMove = dist\r\n        ? Math.min(dist / speed, ran() * 800 + 300)\r\n        : null\r\n\r\n    let countMove = 0\r\n\r\n    return () => {\r\n        if (!dist) {\r\n            return false;\r\n        }\r\n        mesh.translateZ(speed)\r\n        return ++countMove < numsMove\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst createFreeWalk = (mesh, meshFrontObj, wallOffset, emitter) => {\r\n    let isUpdate = false\r\n    const collisions = createCollisionWithItems()\r\n\r\n    const actions = {\r\n        'rotate': startRotate,\r\n        'go': startGo,\r\n    }\r\n\r\n    let state = 'rotate' // || 'go'\r\n    let currentAction = null\r\n\r\n\r\n    const toggleAction = key => {\r\n        if (!key) {\r\n            state === 'rotate' && (key = 'go')\r\n            state === 'go' && (key = 'rotate')\r\n        }\r\n\r\n        state = key\r\n        const d = collisions.checkCollisions(mesh, meshFrontObj)\r\n        currentAction = actions[key](mesh, Math.max(d - 20, 0))\r\n    }\r\n\r\n\r\n    toggleAction(state)\r\n\r\n\r\n    emitter.subscribe('frameUpdate')(() => {\r\n        if (!isUpdate) {\r\n            return;\r\n        }\r\n        !currentAction() && toggleAction()\r\n    })\r\n\r\n\r\n    return {\r\n        start: () => {\r\n            toggleAction('rotate')\r\n            isUpdate = true\r\n        },\r\n        stop: () => isUpdate = false,\r\n        setItemToCollision: collisions.setItemToCollision,\r\n        removeItemFromCollision: collisions.removeItemFromCollision,\r\n        clearCollisions: collisions.clearCollisions,\r\n    }\r\n}\r\n\r\n\r\n\r\n/** COLLISIONS *************************************************/\r\n\r\nconst createCollisionWithItems = () => {\r\n        let arrMeshes = []\r\n\r\n        const vecStart = new THREE.Vector3()\r\n        const vecDir = new THREE.Vector3()\r\n        const rayCaster = new THREE.Raycaster(vecStart, vecDir)\r\n\r\n\r\n    return {\r\n        setItemToCollision (mesh) {\r\n            arrMeshes.push(mesh)\r\n        },\r\n        removeItemFromCollision (mesh) {\r\n            arrMeshes = arrMeshes.filter(item => item !== mesh)\r\n        },\r\n        clearCollisions () {\r\n            arrMeshes = []\r\n        },\r\n        checkCollisions (objFrom, objTo) {\r\n            objFrom.getWorldPosition(vecStart)\r\n            objTo.getWorldPosition(vecDir)\r\n\r\n            vecDir.sub(vecStart)\r\n\r\n            const intersects = rayCaster.intersectObjects(arrMeshes, true)\r\n\r\n            if (intersects[0]) {\r\n                return intersects[0].distance\r\n            }\r\n\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/botWalk.01f990cb.gltf\";","export default __webpack_public_path__ + \"static/media/skin.400fd57d.jpg\";","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'Hello there!': 'Привет !',\r\n        'Good day, carbon-based life form.':  'День добрый, кремниевая форма жизни.',\r\n    \r\n        'What is this place ?': 'Что это за место?',\r\n        'This is an entrance to the entropic hyper-maze.': 'Это вход в энтропийный гипер-куб.',\r\n    \r\n        'And what happens if I enter it ?': 'Что будет, если я войду в него?',\r\n        'This place is waiting.': 'Куб примет тебя.',\r\n    \r\n        'Say, where do these corridors lead ?': 'Куда ведут эти коридоры ?',\r\n        'They will lead you to the end.': 'Они приведут тебя к финалу.',\r\n    \r\n        'Ooook, I\\'m heading in then.': 'Я пошел дальше.',\r\n        'We will meet again.': 'Мы еще увидимся.',\r\n    \r\n        'What do you do here ?': 'Что ты здесь делаешь ?',\r\n        'Collecting the energy of the night.':  'Собираю энергию ночи.',\r\n    \r\n        'Can you tell me which way is out of here ?': 'В какую сторону мне идти ?',\r\n        'It is about the journey, not the destination': 'Здесь нет сторон. Здесь важна только длина пути.',\r\n    \r\n        'Hey, it looks like I\\'m walking in circles.': 'Я уже долго иду.',\r\n        'You have walked long enough.': 'Ты прошел достаточно для этого уровня.',\r\n    \r\n        'Meaning?': 'Что это значит?',\r\n        'The way to the next level is open to you.': 'Тебе открыт путь на одну ступень выше.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hi, I heard I can find the \"end\" around here?': 'Я ищу финал.',\r\n        'Yes, I told you this is where the corridors lead.': 'Я помню о твоем пути.',\r\n\r\n        'Man, you all look the same.': 'Вы все так похожи.',\r\n        'We will meet again.': 'Мы еще встретимся.',\r\n\r\n        'Soooo, is that you again ?': 'Это снова ты?',\r\n        'Yes. All of me are myself.': 'Да, мы все едины.',\r\n\r\n        'Yeah, just like those corridors.': 'Тут все коридоры повторяются.',\r\n        'The meaning of everything is in being whole.': 'Суть всего в едином.',\r\n\r\n        'Am I there yet?': 'Как долго еще идти.',\r\n        'The sign will be given when you are.': 'Тебе будет знак, когда ты будешь готов.',\r\n\r\n        'How do I know what it is?': 'Как я узнаю этот знак.',\r\n        'I will give it to you.': 'Я подам его.',\r\n\r\n        'That\\'s the same exact corridor with you again.':  'Это одинаковый сегмент коридора с тобой.',\r\n        'You are ready for the next level.': 'Ты готов к новому уровню.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n\r\n        'Hey man, seriously, how do I get out of here ?':'Привет снова. Как выбраться. Уже надоело.',\r\n        'You have not reached the end.':'Ты не постиг дзен.',\r\n\r\n        'We\\'ll how do you reach it ?':'Ты-то как выходишь на поверхность?',\r\n        'I have my way.':'У меня свой путь.',\r\n\r\n        'So how\\'s your way btw ?':'Ты все на своем пути?',\r\n        'It is like yourself.': 'Как и ты.',\r\n\r\n        'And how long you\\'ve been on it ?': 'Как долго ты на нем?',\r\n        'These walls can hear us.': 'Эти стены нас слышат.',\r\n\r\n\r\n        'I think you\\'re weighing this corridor down.': 'Мне кажется, ты идешь в нагрузку к этому сегменту коридора.',\r\n        'The next level is open to you.': 'Тебе открыт следующий уровень.',\r\n\r\n\r\n        // %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n\r\n        'Look bud, next level or not, nothing\\'s changed at all !':  'Ничего не меняется.',\r\n        'Except the number of steps.': 'Меняется количество пройденных шагов.',\r\n        \r\n        'So this place counts steps ?': 'Это место считает шаги?',\r\n        'This is place is waiting.': 'Это место ждет.',\r\n        \r\n        'How long have you been here ?': 'Как давно ты здесь?',\r\n        'How long is irrelevant. What matters is the journey.': 'Время не имеет значения, значение имеет лишь путь.',\r\n        \r\n        'Then why aren\\'t you on one?': 'Но ты же не идешь.',\r\n        'With you walking for both of us, I do not have to.': 'Зато ты каждый раз проходишь мимо.',\r\n        \r\n        'Look, just make a new level, please.': 'Сделай новый уровень.',\r\n        'You are ready. It is waiting for you.': 'Ты готов - новый уровень ждет тебя.',\r\n\r\n    \r\n        // %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n    \r\n        'Wait, you are this place! You control all its fragments.': 'Ты и есть это место. Ты управляешь сегментами.',\r\n        'You have almost reached the end.': 'Ты почти дошел до края.',\r\n        \r\n        'Why do you do this ?': 'Зачем тебе это?',\r\n        'It is my way to warp space. More movement. More fragments.': 'Это способ свернуть пространство. Больше движения. Больше сегментов.',\r\n        \r\n        'How many people have been through here ?': 'Как много путников попадало сюда?',\r\n        'Many are still here.': 'Многие из них до сих пор тут.',\r\n        \r\n        'So where are they?': 'Почему я их не встретил?',\r\n        'Everyone has a different system of fragments.': 'У каждого своя система сегментов.',\r\n        \r\n        'Will you let me out ?': 'Ты выпустишь меня?',\r\n        'All ways lead to the end.': 'Все стороны света открыты тебе.',\r\n        \r\n        'I wanna meet the others.': 'Я хочу встретить других.',\r\n        'The next level is waiting for you.': 'Тебе открыт новый уровень.',\r\n\r\n        // %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n\r\n        'Everything\\'s looped here.': 'Я вижу зарево?',\r\n        'Everything is looped with small differences.': 'Это зарево просветления. Ты близок',\r\n\r\n        'How many levels even are there ?': 'Все коридоры повторяются.',\r\n        'It all depends on you.': 'Все повторяется с небольшой разницей.',\r\n\r\n        'That\\'s it, I\\'m done.': 'Все мой путь окончен.',\r\n        'Have you reached your journey\\'s end ?': 'Ты отказываешься идти?',\r\n\r\n        'Yes, you mad bastard! I have !': 'Да, ты безумен.',\r\n        'Then I am giving you the sign.': 'Я освобождаю тебя.',\r\n\r\n\r\n\r\n\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'To be continued': 'Продолжение следует',\r\n        'chapter': 'глава',\r\n        'open': 'пуск',\r\n        'Author: ': 'Автор: ',\r\n        'link': 'ссылка',\r\n    }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\nimport * as CORE from \"../../../_CORE\";\r\n\r\nconst t = CORE.createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"replicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {t(item.q)}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","let emitter = null\r\nexport const connectEmitterToActions = em => {\r\n    emitter = em\r\n}\r\n\r\n\r\nexport const startPlay = dispatch => ({\r\n    startPlay: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'outer',\r\n    }),\r\n    showBackground: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'back',\r\n    }),\r\n    startFinalFog: () => dispatch({\r\n        type: 'CHANGE_ENVIRONMENT',\r\n        newQuadrant: [0, -1, -50],\r\n        environmentMode: 'start',\r\n    }),\r\n})\r\n\r\n\r\nexport const showMessages = dispatch => ({\r\n    toggleFinalMessage: val => dispatch({\r\n        type: 'TOGGLE_FINAL_MESSAGE',\r\n        mode: val,\r\n    })\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport const toggleDialog = dispatch => ({\r\n    clickPhrase: r => {\r\n        dispatch({\r\n            type: 'CLICK_PHRASE',\r\n            phrase: r,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'PHRASE_EVENT',\r\n                phrase: r,\r\n            })\r\n\r\n            //r.levelEvent && emitter && emitter.emit('changeLevelMode')(r.levelEvent)\r\n        }, 1000)\r\n    },\r\n\r\n\r\n    toggleDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_DIALOG',\r\n            isDialog: is,\r\n        })\r\n    },\r\n\r\n\r\n    toggleButtonDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_BUTTON',\r\n            isButtonDialog: is,\r\n        })\r\n    }\r\n})\r\n","import { connect } from 'react-redux'\r\nimport { TRANSLATE_WORLDS} from \"../constants/constants_replicies\";\r\nimport { createTranslater } from \"../../../_CORE\";\r\n\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"messages\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{t(item.q)}</div>\r\n                    <div className=\"a\">{t(item.a)}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import './CustomReactComponent.css'\r\nimport { createTranslater } from '../../../_CORE/helpers/helper_translate'\r\nimport { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        isButtonDialog: state.ui.isButtonDialog,\r\n        isShowFinalMessage: state.ui.isShowFinalMessage,\r\n        isShowPalleteDialog: state.ui.isShowPalleteDialog\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction CustomReactComponent(props) {\r\n\r\n    return (\r\n        <>\r\n            {(props.isButtonDialog || props.isShowPalleteDialog) && (\r\n                <div className=\"dialog-wrapper\">\r\n                    <div className=\"dialog-content\">\r\n\r\n                        {props.isShowPalleteDialog && <div className='messages-wrapper'>\r\n                            <BotAnswers />\r\n                            <UserReplicies />\r\n                        </div>}\r\n\r\n                        {props.isButtonDialog && <button\r\n                            className=\"dialog-button-toggle\"\r\n                            onClick={() => props.dispatch({ type: 'TOGGLE_DIALOG', isShowPalleteDialog: !props.isShowPalleteDialog })}>\r\n                            {props.isShowPalleteDialog ? t('close dialog') : t('open dialog') }\r\n                        </button>}\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner final-message\">\r\n                        <p>{t('Level completed')}</p>\r\n                    </div>\r\n                </div>)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomReactComponent);\r\n","const DIALOGS_DATA = {\r\n    '4': [\r\n        {\r\n            q: 'Hello there!',\r\n            a: 'Good day, carbon-based life form.',\r\n            event: 'nextReply',\r\n        }, {\r\n            q: 'What is this place ?',\r\n            a: 'This is an entrance to the entropic hyper-maze.',\r\n            event: 'nextReply',\r\n        }, {\r\n            q: 'And what happens if I enter it ?',\r\n            a: 'This place is waiting.',\r\n            event: 'close',\r\n        },\r\n    ],\r\n    '13': [\r\n        {\r\n            q: 'Say, where do these corridors lead ?',\r\n            a: 'They will lead you to the end.',\r\n            event: 'nextReply',\r\n        }, {\r\n            q: 'Ooook, I\\'m heading in then.',\r\n            a: 'We will meet again.',\r\n            event: 'close',\r\n        },\r\n    ],\r\n    '20': [\r\n        {\r\n            q: 'What do you do here ?',\r\n            a: 'Collecting the energy of the night.',\r\n            event: 'nextReply',\r\n        },\r\n        {\r\n            q: 'Can you tell me which way is out of here ?',\r\n            a: 'It is about the journey, not the destination',\r\n            event: 'close',\r\n        },\r\n    ],\r\n}\r\n\r\n\r\n\r\nexport const uiState = {\r\n    botAnswers: [],\r\n    userReplicies: [],\r\n    isShowControls: true,\r\n    isButtonDialog: false,\r\n    isShowPalleteDialog: false,\r\n\r\n    currentBot: null,\r\n    phraseIndex: 0,\r\n    isDialogComplete: false,\r\n    phrasesData: DIALOGS_DATA,\r\n}\r\n\r\n\r\nexport const createCustomStore = root => {\r\n    const ui = (state = uiState, action) => {\r\n\r\n        if (action.type === 'CLICK_PHRASE') {\r\n            return ({\r\n                ...state,\r\n                botAnswers: [\r\n                    ...state.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            })\r\n        }\r\n\r\n\r\n        if (action.type === 'PHRASE_EVENT') {\r\n            const { event, levelEvent } = action.phrase\r\n\r\n            if (event === 'nextReply') {\r\n                const userReplicies = [state.phrasesData[state.currentBot][state.phraseIndex + 1]]\r\n\r\n                return ({\r\n                    ...state,\r\n                    phraseIndex: state.phraseIndex + 1,\r\n                    userReplicies,\r\n                })\r\n\r\n            }\r\n\r\n            if (event === 'close') {\r\n                return ({\r\n                    ...state,\r\n                    userReplicies: [],\r\n                    isDialogComplete: true,\r\n                    isButtonDialog: true,\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'TOGGLE_DIALOG') {\r\n            let userReplicies = []\r\n\r\n            root.player.toggleBlocked(action.isShowPalleteDialog)\r\n\r\n            if (action.isShowPalleteDialog) {\r\n                userReplicies = state.isDialogComplete ? [] : [state.phrasesData[state.currentBot][state.phraseIndex]]\r\n            }\r\n\r\n            return ({\r\n                ...state,\r\n                isShowPalleteDialog: action.isShowPalleteDialog,\r\n                userReplicies,\r\n            })\r\n        }\r\n\r\n\r\n        if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n            let botAnswers = state.botAnswers\r\n            let phraseIndex = state.phraseIndex\r\n            let isDialogComplete = state.isDialogComplete\r\n            if (action.currentBot && action.currentBot !== state.currentBot) {\r\n                botAnswers = []\r\n                phraseIndex = 0\r\n                isDialogComplete = false\r\n            }\r\n\r\n            return ({\r\n                ...state,\r\n                phraseIndex,\r\n                currentBot: action.currentBot || state.currentBot,\r\n                isButtonDialog: action.isButtonDialog,\r\n                isDialogComplete,\r\n                botAnswers,\r\n            })\r\n        }\r\n\r\n\r\n        return state\r\n    }\r\n\r\n    return { ui }\r\n}\r\n\r\n\r\n\r\n","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { UI } from '../../../_CORE/ui/UI'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer_v02'\r\n\r\n\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../../../assets/chapter04/level02.obj'\r\nimport mapFloorOuter from '../../../assets/chapter04/floor_outer_map3.jpg'\r\nimport mapFloorOuter2 from '../../../assets/chapter04/floor_outer_map2.jpg'\r\nimport mapTop from '../../../assets/floor_outer_map.jpg'\r\nimport pxjpg from '../../../assets/sky3/px.jpg'\r\nimport nxjpg from '../../../assets/sky3/nx.jpg'\r\nimport pyjpg from '../../../assets/sky3/py.jpg'\r\nimport nyjpg from '../../../assets/sky3/ny.jpg'\r\nimport pzjpg from '../../../assets/sky3/pz.jpg'\r\nimport nzjpg from '../../../assets/sky3/nz.jpg'\r\n\r\nimport px2jpg from '../../../assets/sky2/px.jpg'\r\nimport nx2jpg from '../../../assets/sky2/nx.jpg'\r\nimport py2jpg from '../../../assets/sky2/py.jpg'\r\nimport ny2jpg from '../../../assets/sky2/ny.jpg'\r\nimport pz2jpg from '../../../assets/sky2/pz.jpg'\r\nimport nz2jpg from '../../../assets/sky2/nz.jpg'\r\n\r\n\r\nimport { system_PlayerMoveOnLevel } from '../systems/system_PlayerMoveOnLevel' \r\n\r\n\r\nimport { system_Monsters } from '../systems/system_Monsters'\r\nimport botSrc from '../../../assets/chapter04/botWalk.gltf'\r\nimport monsterSkinSrc from '../../../assets/chapter04/skin.jpg'\r\n\r\nimport { system_PrepareDialogs } from '../systems/system_PrepareDialogs'\r\nimport { StarterPlay } from '../actions/StarterPlay'\r\nimport { Ui } from \"../ui/Ui\";\r\n\r\n\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    // {\r\n    //     key: 'ui',\r\n    //     constr: UI,\r\n    //     initStateKey: 'pageLoaded',\r\n    // },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: Helper_TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: Helper_MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'cubeTextures', path: [ px2jpg, nx2jpg, py2jpg, ny2jpg, pz2jpg, nz2jpg, ], key: 'skyBox2' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n            { type: 'img', path: mapFloorOuter2, key: 'mapFloorOuter2', wrap: true },\r\n            { type: 'img', path: mapTop, key: 'mapTop', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'system_PlayerMoveOnLevel',\r\n        constr: system_PlayerMoveOnLevel,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'system_Monsters',\r\n        constr: system_Monsters,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'glb', path: botSrc, key: 'bot' },\r\n            { type: 'img', path: monsterSkinSrc, key: 'skin', wrap: true },\r\n        ]\r\n    },\r\n    {\r\n        key: 'system_PrepareDialogs',\r\n        constr: system_PrepareDialogs,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'customUi',\r\n        constr: Ui,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'starterPlay',\r\n        constr: StarterPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport class system_PrepareDialogs {\r\n    constructor (root) {\r\n\r\n        const {\r\n            emitter,\r\n            player,\r\n            system_Monsters,\r\n            dispatcher,\r\n        } = root\r\n\r\n        const bot = system_Monsters.getBot()\r\n\r\n        let isBlocked = {\r\n            'forward': false,\r\n            'back': false,\r\n        }\r\n\r\n        const vecFront = new THREE.Vector3()\r\n\r\n\r\n        let isButtonDialog = false\r\n\r\n\r\n        emitter.subscribe('playerMove')(dir => {\r\n            player.frontObj.getWorldPosition(vecFront)\r\n\r\n            if (vecFront.distanceTo(bot.position) > 50) {\r\n                if (isButtonDialog) {\r\n                    isButtonDialog = false\r\n                    dispatcher.dispatch({ type: 'TOGGLE_BUTTON', isButtonDialog: false })\r\n                    system_Monsters.stopDialog()\r\n                }\r\n                return;\r\n            } else {\r\n                if (!isButtonDialog) {\r\n                    isButtonDialog = true\r\n                    dispatcher.dispatch({ type: 'TOGGLE_BUTTON', isButtonDialog: true, currentBot: system_Monsters.getCurrentArea() })\r\n                    system_Monsters.startDialog(player.mesh.position)\r\n                }\r\n            }\r\n\r\n            if (dir === 'forward') {\r\n\r\n                if (vecFront.distanceTo(bot.position) < 20 && !isBlocked[dir]) {\r\n                    isBlocked[dir] = true\r\n                    player.toggleCanMove(dir, false)\r\n                    system_Monsters.startDialog(player.mesh.position)\r\n                }\r\n            }\r\n\r\n            if (isBlocked['forward']) {\r\n                isBlocked['back'] = false\r\n                player.toggleCanMove('back', true)\r\n            }\r\n        })\r\n\r\n        emitter.subscribe('frameUpdate')(() => {\r\n            if (player.mesh.position.distanceTo(bot.position) > 30 && (isBlocked['forward'] || isBlocked['back'])) {\r\n                isBlocked['forward'] = false\r\n                isBlocked['back'] = false\r\n                player.toggleCanMove('forward', true)\r\n                player.toggleCanMove('back', true)\r\n                system_Monsters.stopDialog()\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n","import { UI } from '../../../_CORE/ui/UI'\r\nimport CustomReactComponent from \"./CustomReactComponent\";\r\nimport { createCustomStore  } from \"./store\";\r\n\r\nexport class Ui {\r\n    constructor(root) {\r\n        root.appWrapper = document.querySelector('.app-wrapper')\r\n        root.CustomReactComponent = CustomReactComponent\r\n        root.customStore = createCustomStore(root)\r\n\r\n        const ui = new UI(root)\r\n        root.ui = ui\r\n    }\r\n}","import { \r\n    START_ENV_CONFIG,\r\n    START_ENV_CONFIG_2,\r\n    START_ENV_CONFIG_3,\r\n} from '../constants/constants_elements';\r\n\r\n\r\nexport class StarterPlay {\r\n    constructor (gameContext) {\r\n        const { \r\n            player, \r\n            ui, \r\n            studio, \r\n            dispatcher,\r\n            system_Monsters,\r\n        } = gameContext\r\n        \r\n        dispatcher.dispatch({ \r\n            type: 'CHANGE_INFO_CHAPTER', \r\n            currentChapterIndex: 3,\r\n        })\r\n\r\n        system_Monsters.setBotTo(0)\r\n\r\n        const isPROD = true\r\n\r\n        ui.showStartButton(() => {\r\n            if (isPROD) {\r\n                studio.changeEnvironment(START_ENV_CONFIG, { updateAmb: false, time: 1500 })\r\n\r\n                setTimeout(() => {\r\n                    studio.changeEnvironment(START_ENV_CONFIG_2, { updateAmb: false, time: 1500 }) \r\n                    \r\n                    setTimeout(() => {\r\n                        system_Monsters.setBotTo(4)\r\n                        studio.changeEnvironment(START_ENV_CONFIG_3, { updateAmb: false, time: 1500 }) \r\n                        player.toggleBlocked(false)\r\n                    }, 1500)\r\n                }, 4000)\r\n            } else {\r\n                system_Monsters.setBotTo(4)\r\n                studio.changeEnvironment(START_ENV_CONFIG_3, { updateAmb: false, time: 1500 }) \r\n                player.toggleBlocked(false)\r\n            }\r\n        })\r\n    }\r\n}","// import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\n// import * as CONSTANTS from './constants/constants_elements'\r\n// import { TRANSLATE_WORLDS } from \"./constants/constants_replicies\";\r\n\r\n// // ********** CHAPTER03 ****************\r\n\r\n// import { GAME_MODULES } from \"./constants/constants_modules\"\r\n// window.addEventListener('load', () => pipeLineForInit(GAME_MODULES, { ...CONSTANTS, TRANSLATE_WORLDS }))\r\n\r\nimport { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\n\r\n\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, CONSTANTS ))\r\n"],"sourceRoot":""}