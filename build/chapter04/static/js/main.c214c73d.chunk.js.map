{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","chapter04/src/constants/constants_elements.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/helpers/helper_translate.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer_v02.js","_CORE/helpers/helper_MaterialsLib.js","chapter04/src/systems/system_level.js","assets/chapter04/level02.obj","assets/chapter04/floor_outer_map3.jpg","assets/chapter04/floor_outer_map2.jpg","assets/floor_outer_map.jpg","assets/sky3/px.jpg","assets/sky3/nx.jpg","assets/sky3/py.jpg","assets/sky3/ny.jpg","assets/sky3/pz.jpg","assets/sky3/nz.jpg","assets/sky2/px.jpg","assets/sky2/nx.jpg","assets/sky2/py.jpg","assets/sky2/ny.jpg","assets/sky2/pz.jpg","assets/sky2/nz.jpg","_CORE/helpers/helper_CollisionsItems_v02.js","chapter04/src/systems/system_PlayerMoveOnLevel.js","chapter04/src/systems/system_Monsters.js","assets/chapter04/botWalk.gltf","assets/chapter04/skin.jpg","chapter04/src/constants/constants_replicies.js","chapter04/src/ui/UserReplicies.js","chapter04/src/ui/BotAnswers.js","chapter04/src/ui/CustomReactComponent.js","chapter04/src/ui/store.js","chapter04/src/constants/constants_modules.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter04/src/systems/system_PrepareDialogs.js","chapter04/src/systems/system_Sound.js","assets/sound/ambient.mp3","chapter04/src/ui/Ui.js","chapter04/src/actions/StarterPlay.js","chapter04/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","MATERIALS_CONFIG","mat","props","color","emissive","map","bumpMap","bumpScale","envMap","reflectivity","shininess","specular","skinning","START_ENV_CONFIG","fogNear","fogFar","backgroundImgKey","START_ENV_CONFIG_2","START_ENV_CONFIG_3","START_ENV_CONFIG_4","studioConfig","canId","rendererCon","antialias","amb","strength","sceneEnvironment","composerAddPass","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","soundLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","createTranslater","vocab","word","t","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","isShowControlSound","isMute","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseUp","emit","is","onTouchEnd","onMouseDown","onTouchStart","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","clearColor","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_playerCamera","_controlsCamera","position","set","OrbitControls","domElement","update","_composer","EffectComposer","_renderPass","RenderPass","addPass","ShaderPass","vec3","isPlayerView","saveFogData","camera","getWorldPosition","x","y","z","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","removeFromScene","remove","_backgroundImgKey","cam","conf","_changeFog","_changeBackground","startData","endData","TWEEN","to","time","onUpdate","updateAmb","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","event","Player","studio","_camera","isBlocked","isFreeze","mesh","rotation","fromArray","userData","bottomObj","frontObj","backObj","strenth","light","setCamera","isFeeze","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","createLevelMeshes","allMeshes","areas","traverse","child","name","includes","geometry","groundTop","wall","road","strArr","split","area","helper_CollisionsItems_v02","_arrMeshes","_vecStart","_vecDir","_rayCaster","objFrom","objTo","dist","sub","intersects","intersectObjects","distance","helper_rotate","quat1","quat2","n","quaternion","slerpQuaternions","changerAreaLevel","collisionsWalls","changeViewLevel","ind","changeCollisionLevel","removeItemFromCollision","setItemToCollision","ran","Math","random","MONSTERS_DATA","rot","walkData","defaultAnimation","PI","system_Monsters","_currentArea","_bot","bot","scene","children","material","_frontObj","scale","_animations","createAnimations","play","_freeWalk","createFreeWalk","_areas","visible","arrWas","setBotTo","clearCollisions","stop","playerPos","plPos","lookAt","assetsBot","animations","mixer","dialog","clipAction","timeScale","walk","stay","actions","currentAction","delta","stopAllAction","startRotate","angleRot","countRotation","startGo","numsMove","min","countMove","translateZ","meshFrontObj","wallOffset","isUpdate","collisions","createCollisionWithItems","toggleAction","d","checkCollisions","max","arrMeshes","vecStart","vecDir","rayCaster","TRANSLATE_WORLDS","CORE","UserReplicies","userReplicies","ui","phrase","q","floor","BotAnswers","botAnswers","isButtonDialog","isShowFinalMessage","isShowPalleteDialog","location","replace","uiState","currentBot","phraseIndex","isDialogComplete","phrasesData","GAME_MODULES","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","fullscreenElement","emitFrameUpdate","count","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","px2jpg","nx2jpg","py2jpg","ny2jpg","pz2jpg","nz2jpg","mapFloorOuter","wrap","mapFloorOuter2","mapTop","player","currentArea","updateLevel","toggleBlocked","isCanMove","toggleCanMove","dir","quaternionOld","quaternionNew","UP_VECTOR","rotatePlayerToTop","copy","setFromAxisAngle","then","up","checkAndMoveFront","isCollision","collision","object","la","addVectors","face","normal","rotateX","setRotationFromQuaternion","rotatePlayerToCollisionTarget","rotateY","equals","translateY","checkBottomAndDropDownPlayer","checkAndMoveBack","botSrc","monsterSkinSrc","getBot","vecFront","distanceTo","stopDialog","getCurrentArea","startDialog","listener","getCamera","_sound","setBuffer","soundAmbient","setLoop","setVolume","levelEvent","changeEnvironment","createCustomStore","system_Sound","showStartButton","playAmbient","pipeLineForInit"],"mappings":"olBAAO,WAAgCA,EAAaC,GAA7C,mBAAAC,EAAA,6DAGHC,EAAmB,aAAcH,EAF3BI,EAAO,CAAEH,cAIPI,EAAiBD,EAAjBC,aAEFC,EAAaC,EAAyBP,GAPzC,SAQiBK,EAAaG,WAAWF,GARzC,OAQHF,EAAKK,OARF,OAUHN,EAAmB,kBAAmBH,EAAaI,GAVhD,4C,sBAcP,IAAMD,EAAqB,SAACO,EAAOC,EAAaP,GAC5C,IAAK,IAAIQ,EAAI,EAAGA,EAAID,EAAYE,SAAUD,EAAG,CACzC,MAAuCD,EAAYC,GAA1CE,EAAT,EAASA,IAAKC,EAAd,EAAcA,OAAd,EAAsBC,eACLN,IAAUN,EAAKU,GAAO,IAAIC,EAAOX,MAIpDG,EAA2B,SAAAI,GAE7B,IADA,IAAMM,EAAM,GACHL,EAAI,EAAGA,EAAID,EAAYE,SAAUD,EACtC,GAAID,EAAYC,GAAGM,cAAgBP,EAAYC,GAAGM,aAAaL,OAC3D,IAAK,IAAIM,EAAI,EAAGA,EAAIR,EAAYC,GAAGM,aAAaL,SAAUM,EACtDF,EAAIG,KAAKT,EAAYC,GAAGM,aAAaC,IAIjD,OAAOF,GC5BEI,EAAmB,CAC5B,KAAQ,CACJC,IAAK,oBACLC,MAAO,CACHC,MAAO,QACPC,SAAU,UACVC,IAAK,gBACLC,QAAS,gBACTC,UAAW,EACXC,OAAQ,SACRC,aAAc,GACdC,UAAW,GACXC,SAAU,UAKlB,UAAa,CACTV,IAAK,oBACLC,MAAO,CACHC,MAAO,SACPC,SAAU,SACVC,IAAK,SACLC,QAAS,SACTC,UAAW,EACXC,OAAQ,UACRC,aAAc,GACdE,SAAU,UAIlB,KAAQ,CACJV,IAAK,oBACLC,MAAO,CACHC,MAAO,SACPC,SAAU,QACVC,IAAK,iBACLC,QAAS,iBACTC,UAAW,EACXC,OAAQ,SACRC,aAAc,KAItB,KAAQ,CACJR,IAAK,oBACLC,MAAO,CACHC,MAAO,SACPC,SAAU,QACVO,SAAU,SACVD,UAAW,GACXJ,QAAS,OACTC,UAAW,GACXC,OAAQ,SACRC,aAAc,GACdJ,IAAK,OACLO,UAAU,KAOTC,EAAmB,CAAEC,SAAU,GAAIC,OAAQ,GAAIZ,MAAO,QAAUa,iBAAkB,WAClFC,EAAqB,CAAEH,SAAU,GAAIC,OAAQ,EAAGZ,MAAO,QAAUa,iBAAkB,WACnFE,EAAqB,CAAEJ,QAAS,GAAIC,OAAQ,IAAKZ,MAAO,QAAUa,iBAAkB,WACpFG,EAAqB,CAAEL,SAAU,GAAIC,OAAQ,EAAGZ,MAAO,QAAUa,iBAAkB,MAGnFI,EAAe,CACxBC,MAAO,eACPC,YAAa,CACTC,WAAW,GAEfC,IAAK,CACDrB,MAAO,SACPsB,SAAU,IAEdC,iBAAkB,CAAEZ,SAAU,GAAIC,OAAQ,EAAGZ,MAAO,QAAUa,iBAAkB,WAChFW,gBAAiB,YAMRC,EAAe,CACxBC,MAAO,GACPC,SAAU,IACVC,WAAY,IACZC,gBAAiB,GACjBC,sBAAuB,GACvBC,oBAAqB,IACrBC,OAAQ,GACRC,SAAU,CAAC,EAAG,EAAG,GACjBC,SAAU,CAAC,EAAG,EAAG,GACjBC,WAAY,CACRC,IAAK,GACLC,MAAOC,OAAOC,WAAaD,OAAOE,YAClCC,KAAM,GACNC,IAAK,IACLC,IAAK,CAAC,EAAG,GAAI,KAEjBC,YAAa,CAAC,EAAG,GAAI,GACrBC,WAAY,CAAC,EAAG,EAAG,GACnBC,aAAc,CACV9C,MAAO,QACPsB,SAAU,EACVqB,IAAK,CAAC,EAAG,IAAK,K,qCCtGhBI,EAAgB,WAClB,IAAIC,EAAY,KACZC,EAAgB,KAChBC,EAAa,KACbC,EAAoB,KACpBC,EAAc,KAmBlB,OAAO,SAACC,EAAMC,GAAP,OAAgB,IAAIC,SAAQ,SAAAC,IAhBd,SAAAF,GACjB,MAAa,QAATA,EACON,EAAaA,GAAa,IAAIS,IAC5B,QAATH,GAA2B,SAATA,EACXJ,EAAcA,GAAc,IAAIQ,IAC9B,QAATJ,EACOL,EAAiBA,GAAiB,IAAIU,gBACpC,iBAATL,EACOH,EAAqBA,GAAqB,IAAIQ,oBAE5C,aAATL,EACOF,EAAeA,GAAe,IAAIO,mBAD7C,GAOAC,CAAaN,GAAMO,KAAKR,EAAMG,QAOzBM,EAAb,WAEI,aAAgB,oBACZC,KAAKC,UAAY,GACjBD,KAAKE,MAAQlB,IAJrB,8CAOI,SAAYmB,GAAO,IAAD,OACd,OAAO,IAAIX,SAAQ,SAAAC,GAEf,IAAMK,EAAO,EAAKI,MACZD,EAAY,EAAKA,UAHG,SAKXG,EALW,8EAK1B,WAAwBC,GAAxB,qBAAA1F,EAAA,0DACQwF,EAAKE,GADb,yBAEoCF,EAAKE,GAAzB9E,EAFhB,EAEgBA,IAAK+D,EAFrB,EAEqBA,KAAMC,EAF3B,EAE2BA,KAF3B,SAG+BO,EAAKR,EAAMC,GAH1C,OAGQU,EAAU1E,GAHlB,mBAMM8E,EACDF,EAAKE,GAPV,iBAQUZ,EAAQQ,GARlB,yCASgBG,EAAQC,GATxB,6CAL0B,sBAiBtBD,EAAQ,UAzBxB,KCvCaE,EAAb,WACI,aAAe,oBACXN,KAAKO,SAAW,GAFxB,wCAKI,SAAMC,GAAK,IAAD,OACN,OAAO,SAAAL,GAAI,OAAIM,EAAsB,EAAKF,SAA3BE,CAAqCD,GAAIE,SAAQ,SAAAC,GAAM,OAAIA,EAAOR,SANzF,uBASI,SAAWK,GAAK,IAAD,OACX,OAAO,SAAAI,GAEH,OADAH,EAAsB,EAAKF,SAA3BE,CAAqCD,GAAI3E,KAAK+E,GACvC,kBAAM,EAAKL,SAASC,GAAM,EAAKD,SAASC,GAAIK,QAAO,SAAAC,GAAI,OAAIA,IAASF,SAZvF,qBAgBI,WACI,IAAMG,EAAI,GACV,IAAK,IAAIxF,KAAOyE,KAAKO,SACjBQ,EAAExF,GAAOyE,KAAKO,SAAShF,GAAKD,OAEhC0F,QAAQC,IAAIF,OArBpB,KA6CMN,EAAwB,SAAAS,GAAG,OAAI,SAAA3F,GAAG,OAAI2F,EAAI3F,GAAO2F,EAAI3F,IAAQ,K,8CC7C/D4F,G,MAAO,MAEEC,EAAmB,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAKD,EAAMF,IAASE,EAAMF,GAAMG,IAAUA,I,OCIjFC,EAAIH,ECNc,CACpB,GAAM,CACF,6BAA8B,0GAC9B,QAAW,6CACX,MAAS,2BACT,KAAQ,qBACR,QAAW,mDACX,gBAAiB,mCACjB,aAAc,wBACd,WAAY,iBACZ,WAAY,4CDILI,eANS,SAACrG,GACrB,OAAO,eACAA,EAAMsG,SAASC,iBAIXF,EAAyB,SAASxF,GAC7C,OACI,sBAAK2F,UAAU,OAAf,UACI,wBACIA,UAAU,yBACVC,QAAS,kBAAM5F,EAAM6F,SAAS,CAAEtC,KAAM,iBAF1C,eAKA,sBAAKoC,UAAU,aAAf,UACI,4BAAIJ,EAAEvF,EAAM8F,SACZ,4BAAIP,EAAEvF,EAAM+F,WACZ,6BAAK/F,EAAMgG,SAAS7F,KAAI,SAAC2E,EAAMT,GAAP,OACpB,+BACKA,EAAQ,EADb,QAEKS,EAAKmB,KACA,+BAAM,mBAAGA,KAAMnB,EAAKmB,KAAMC,OAAO,QAA3B,SAAoCX,EAAET,EAAKqB,UACjD,+BAAOZ,EAAET,EAAKqB,QACnB9B,IAAUrE,EAAMoG,qBAAuBb,EAAE,gBALrClB,QAQb,4BAAIrE,EAAMqG,aACV,6BAAKrG,EAAMsG,WAAWnG,KAAI,SAAC2E,EAAMT,GAAP,OACtB,+BACKkB,EAAET,EAAKqB,MACR,mBAAGF,KAAMnB,EAAKmB,KAAMC,OAAO,QAA3B,SAAoCX,EAAET,EAAKyB,WAFtClC,iBE3BdmB,G,MAAAA,aACX,SAAArG,GAAK,MAAK,CACFqH,OAAQrH,EAAMsG,SAASe,OACvBC,eAAgBtH,EAAMsG,SAASgB,eAC/BC,mBAAoBvH,EAAMsG,SAASiB,mBACnCC,OAAQxH,EAAMsG,SAASkB,UALpBnB,EAQX,SAASxF,GACT,MAAyD4G,oBAAS,GAAlE,mBAAOC,EAAP,KAA6BC,EAA7B,KAQA,OANAC,qBAAU,kBACN/G,EAAMgH,YAAYC,QAAQC,UAAU,aAApClH,EAAkD,SAAAmH,GACtC,mBAARA,GAA4BL,GAAyB,SAKzD,sBAAKnB,UAAU,cAAf,UACK3F,EAAMyG,gBAAkBzG,EAAM0G,oBAAsB,wBACjDf,UAAU,qBACVyB,UAAW,WACPpH,EAAMgH,YAAYC,QAAQI,KAAK,cAA/BrH,EAA+CA,EAAM2G,QACrD3G,EAAM6F,SAAS,CAAEtC,KAAM,cAAe+D,IAAKtH,EAAM2G,UAErDY,WAAY,WACRvH,EAAMgH,YAAYC,QAAQI,KAAK,cAA/BrH,EAA+CA,EAAM2G,QACrD3G,EAAM6F,SAAS,CAAEtC,KAAM,cAAe+D,IAAKtH,EAAM2G,UARJ,SAWhD3G,EAAM2G,OAAS,8CAAgB,gDAGnC3G,EAAMyG,gBAAkB,wBACrBd,UAAU,oBACV6B,YAAa,kBAAMxH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,cAC/DyH,aAAc,kBAAMzH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,cAChEoH,UAAW,kBAAMpH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,cAC3DuH,WAAY,kBAAMvH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,cALvC,oBAWxBA,EAAMyG,gBAAkB,wBACrBd,UAAU,qBACV6B,YAAa,kBAAMxH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,eAC/DyH,aAAc,kBAAMzH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,eAChEoH,UAAW,kBAAMpH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,eAC3DuH,WAAY,kBAAMvH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,eALvC,oBAWxBA,EAAMyG,gBAAkB,wBACrBd,UAAU,qBACV6B,YAAa,kBAAMxH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,eAC/DyH,aAAc,kBAAMzH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,eAChEoH,UAAW,kBAAMpH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,eAC3DuH,WAAY,kBAAMvH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,eALvC,oBAUxBA,EAAMyG,gBAAkB,wBACrBd,UAAU,oBACV6B,YAAa,kBAAMxH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,cAC/DyH,aAAc,kBAAMzH,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,cAChEoH,UAAW,kBAAMpH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,cAC3DuH,WAAY,kBAAMvH,EAAMgH,YAAYC,QAAQI,KAAK,UAA/BrH,CAA0C,cALvC,oBAYxBA,EAAMyG,gBAAkBI,GACrB,wBACIlB,UAAU,0BACVC,QAAS,WACL5F,EAAMgH,YAAYC,QAAQI,KAAK,YAA/BrH,CAA4C,mBAC5C8G,GAAyB,IAJjC,qBASF9G,EAAMwG,QACJ,wBACIb,UAAU,oBACVC,QAAS,kBAAM5F,EAAM6F,SAAS,CAAEtC,KAAM,iBAF1C,eAOHvD,EAAMwG,QAAU,cAAC,EAAD,WCrFtB,IAAMkB,EAAa,CAAE7B,SAAU,MACvBL,eAjBS,SAAArG,GAAK,MAAK,CAC9BsH,eAAgBtH,EAAMsG,SAASgB,eAC/BD,OAAQrH,EAAMsG,SAASe,UAeZhB,EAZf,SAAaxF,GAET,OADC0H,EAAW7B,WAAa6B,EAAW7B,SAAW7F,EAAM6F,UAEjD,sBAAKF,UAAU,KAAf,WACM3F,EAAMwG,QAAUxG,EAAMgH,YAAYW,sBAAwB,cAAC3H,EAAMgH,YAAYW,qBAAnB,CAAwCX,YAAahH,EAAMgH,cACtH,cAAC,EAAD,CAAgBA,YAAahH,EAAMgH,oB,gBCbnCY,EAAwB,CACjCnB,gBAAgB,EAChBC,oBAAoB,EACpBC,QAAQ,EACRH,QAAQ,EACRd,cAAe,CACXI,MAAO,6BACPC,QAAS,GACTC,SAAU,CAMN,CAAEG,KAAM,UAAWF,KAAM,kBACzB,CAAEE,KAAM,QAASF,KAAM,kBACvB,CAAEE,KAAM,OAAQF,KAAM,kBACtB,CAAEE,KAAM,UAAWF,KAAM,kBACzB,CAAEE,KAAM,kBAEZC,oBAAqB,KACrBC,WAAY,GACZC,WAAY,CACR,CAAEH,KAAM,WAAaI,MAAO,oBAAqBN,KAAM,wBACvD,CAAEE,KAAM,WAAaI,MAAO,uCAAwCN,KAAM,2CCftF,IAAM4B,EAASC,SAASC,cAAc,aAClCC,GAAgB,IAChBC,GAAkB,GAIA,SAAhBC,IACGD,GAELE,YAAW,WAEU,MADjBH,IACuBA,GAAgB,KACvCH,EAAOO,MAAMC,WAAaL,EAAe,IACzCE,MACD,IAKPA,GAIO,IAAMI,EAAb,WACI,WAAYzJ,GAAO,oBACfA,EAAK6I,WAAaA,EAClB1D,KAAKuE,MAAQ1J,EACb,IAAM2J,EC9BP,SAAsB3J,GACpBA,EAAK4J,cAAa5J,EAAK4J,YAAc,IAE1C,IAsCMC,EAAcC,YAAgB,aAAElD,SAtCrB,WAAiD,IAAxCtG,EAAuC,uDAA/ByI,EAAuBjD,EAAQ,uCAC7D,MAAoB,gBAAhBA,EAAOpB,KACA,YAAC,eACDpE,GADP,IAEIsH,iBAAkBtH,EAAMqH,OACxBA,QAASrH,EAAMqH,SAGH,wBAAhB7B,EAAOpB,KACA,YAAC,eACDpE,GADP,IAEIuG,cAAc,2BACPvG,EAAMuG,eADA,IAETU,oBAAqBzB,EAAOyB,wBAIpB,oBAAhBzB,EAAOpB,KACA,YAAC,eACDpE,GADP,IAEIsH,eAAgB9B,EAAO2C,KAGX,yBAAhB3C,EAAOpB,KACA,YAAC,eACDpE,GADP,IAEIuH,oBAAoB,IAGR,gBAAhB/B,EAAOpB,KACA,YAAC,eACDpE,GADP,IAEIwH,OAAQhC,EAAO2C,KAGhB,eAAMnI,KAGkCN,EAAK4J,cAClDG,EAAmBrG,OAAOsG,sCAAwCC,IACxE,OAAOC,YAAYL,EAAaE,EAAiBI,YAAgBC,ODb/CC,CAAarK,GAG3B2J,GAASW,IAASC,OACd,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACI,cAAC,EAAD,CAAKxB,YAAanI,MAEtBiJ,SAASuB,eAAe,SAXpC,mDAeI,SAAgBzD,GACZ,IAAM0D,EAAexB,SAASC,cAAc,yBACtCwB,EAAkBzB,SAASC,cAAc,qBAEzCyB,EAAkB,SAAAC,GNlDN,IAAAC,EMmDdD,EAAEvD,OAAOyD,SAAWF,EAAEvD,OAAOyD,QAAQxE,ONnDvBuE,EMmD0CD,EAAEvD,OAAOyD,QAAQxE,KNnDtDA,EAAOuE,GMoD1B5B,SAASC,cAAc,iBAAiBK,MAAMwB,QAAU,QAG5D3B,GAAkB,EAClBqB,EAAalB,MAAMwB,QAAU,OAC7BN,EAAaO,iBAAiB,SAAS,SAAAJ,GACnC7D,IACA4D,EAAgBC,MAEpBF,EAAgBnB,MAAMwB,QAAU,WA9BxC,K,wCEhCaE,EAAW,CACxBC,SAAU,CACV,SAAY,CAAEC,MAAO,OAIrBC,aAAa,gIASbC,eAAe,wK,QCJFC,GAAb,WACI,WAAYtL,GAAO,IAAD,2BACdmF,KAAKuE,MAAQ1J,EACb,IAAQK,EAAqBL,EAArBK,OAAQ+H,EAAapI,EAAboI,QAChB,EAAgDpI,EAAKH,UAAUwC,aAAvDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAagJ,EAA5B,EAA4BA,WAAY9I,EAAxC,EAAwCA,IAExCF,EAAYiJ,OAASvC,SAASuB,eAAelI,GAE7C6C,KAAKsG,UAAY,IAAI1G,gBAAoBxC,GACzC4C,KAAKsG,UAAUC,cAAcH,GAC7BpG,KAAKsG,UAAUE,cAAcjI,OAAOkI,kBACpCzG,KAAKsG,UAAUI,QAAQnI,OAAOC,WAAYD,OAAOE,aAEjDuB,KAAK2G,OAAS,IAAI/G,QAGd,MAAqD/E,EAAKH,UAAUwC,aAAaM,iBAAzEvB,EAAR,EAAQA,MAAOW,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,iBAGhCkD,KAAK2G,OAAOC,WAAa1L,EAAO4B,IAAqB,KACrDkD,KAAK2G,OAAOE,IAAM,IAAIjH,MAAU3D,EAAOW,EAASC,GAIpDmD,KAAK8G,QAAU,KAEX,IAAQ7K,EAAoBqB,EAApBrB,MAAOsB,EAAaD,EAAbC,SACfyC,KAAK8G,QAAU,IAAIlH,eAAoB3D,EAAOsB,GAC9CyC,KAAK2G,OAAOI,IAAK/G,KAAK8G,SAG1B9G,KAAKgH,cAAgB,IAAIpH,oBAAwB,GAAIrB,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAGlGuB,KAAKiH,gBAAkB,IAAIrH,oBAAwB,GAAIrB,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KACpGuB,KAAKiH,gBAAgBC,SAASC,IAAI,EAAG,EAAG,IACxC,IAAM1F,EAAW,IAAI2F,IAAcpH,KAAKiH,gBAAiBjH,KAAKsG,UAAUe,YACxE5F,EAASS,OAAOiF,IAAI,EAAG,EAAG,GAC1B1F,EAAS6F,SAGTtH,KAAKuH,UAAY,IAAIC,IAAexH,KAAKsG,WACzCtG,KAAKyH,YAAc,IAAIC,IAAW1H,KAAK2G,OAAQ3G,KAAKiH,iBACpDjH,KAAKuH,UAAUI,QAAQ3H,KAAKyH,aACxBzH,KAAKuE,MAAM7J,UAAUwC,aAAaO,iBACwB,aAAtDuC,KAAKuE,MAAM7J,UAAUwC,aAAaO,iBAClCuC,KAAKuH,UAAUI,QAAQ,IAAIC,IAAW9B,IAO9C,IAAM+B,EAAO,IAAIjI,UACbkI,GAAe,EACfC,EAAc,KAClB9E,EAAQC,UAAU,WAAlBD,EAA8B,SAAA9C,GACrBA,EAAI,IAIL2H,GACAC,EAAW,eAAQ,EAAKpB,OAAOE,KAC/B,EAAKF,OAAOE,IAAInI,KAAO,IACvB,EAAKiI,OAAOE,IAAIlI,IAAM,IACtBmJ,GAAe,EACf,EAAKL,YAAYO,OAAS,EAAKf,gBAC/B,EAAKD,cAAciB,iBAAiBJ,GACpC,EAAKZ,gBAAgBC,SAASgB,EAAIL,EAAKK,EAAI,IAC3C,EAAKjB,gBAAgBC,SAASiB,EAAIN,EAAKM,EAAI,IAC3C,EAAKlB,gBAAgBC,SAASkB,EAAIP,EAAKO,EACvC3G,EAASS,OAAOiF,IAAIU,EAAKK,EAAGL,EAAKM,EAAGN,EAAKO,GACzC3G,EAAS6F,WAET,EAAKX,OAAOE,IAAInI,KAAOqJ,EAAYrJ,KACnC,EAAKiI,OAAOE,IAAIlI,IAAMoJ,EAAYpJ,IAClCmJ,GAAe,EACf,EAAKL,YAAYO,OAAS,EAAKhB,mBAMvC,IAAMqB,EAAS,WACX,IAAMC,EAAO,CAAEC,MAAOhK,OAAOC,WAAYgK,OAAQjK,OAAOE,aACxD,EAAK6H,UAAUI,QAAQ4B,EAAKC,MAAOD,EAAKE,QACxC,EAAKjB,UAAUb,QAAQ4B,EAAKC,MAAOD,EAAKE,QACpC,EAAKvB,kBACL,EAAKA,gBAAgBwB,OAASH,EAAKC,MAAMD,EAAKE,OAC9C,EAAKvB,gBAAgByB,0BAErB,EAAK1B,gBACL,EAAKA,cAAcyB,OAASH,EAAKC,MAAMD,EAAKE,OAC5C,EAAKxB,cAAc0B,2BAG3BnK,OAAOsH,iBAAiB,SAAUwC,GAClCA,IAKArI,KAAK2I,WAAa3I,KAAK2G,OAAOI,IAAI6B,KAAK5I,KAAK2G,QAC5C3G,KAAK6I,gBAAkB7I,KAAK2G,OAAOmC,OAAOF,KAAK5I,KAAK2G,QAOpD1D,EAAQC,UAAU,cAAlBD,EAHkB,WACd,EAAKsE,UAAUnC,OAAO,EAAKuB,OAAQ,EAAKM,oBAM5CjH,KAAK+I,kBAAoBlO,EAAKH,UAAUwC,aAAaM,iBAAiBV,iBACtEmG,EAAQC,UAAU,yBAAlBD,EAA4C,SAAAzF,GACxCwD,QAAQC,IAAI,eAAgB,SAAU,yBAA0BzD,MApH5E,6CA2HI,SAAWwL,GACPhJ,KAAKgH,cAAgBgC,EACrBhJ,KAAKyH,YAAYO,OAAShI,KAAKgH,gBA7HvC,+BAiII,SAAmBxJ,GAAgC,IAAdyL,EAAa,uDAAN,KACxCjJ,KAAKkJ,WAAW1L,EAAkByL,GAClCjJ,KAAKmJ,kBAAkB3L,EAAkByL,KAnIjD,wBAyII,SAAYzL,EAAkByL,GAAO,IAAD,OACxBrM,EAA2BY,EAA3BZ,QAASC,EAAkBW,EAAlBX,OAAQZ,EAAUuB,EAAVvB,MACzB,GACI+D,KAAK2G,OAAOE,IAAInI,OAAS9B,GACzBoD,KAAK2G,OAAOE,IAAIlI,MAAQ9B,GACxBmD,KAAK2G,OAAOE,IAAI5K,QAAUY,EAC5B,CACE,IAAMuM,EAAY,CACdnN,MAAO+D,KAAK2G,OAAOE,IAAI5K,MACvByC,KAAMsB,KAAK2G,OAAOE,IAAInI,KACtBC,IAAKqB,KAAK2G,OAAOE,IAAIlI,KAEnB0K,EAAU,CACZpN,MAAO,IAAI2D,QAAY3D,GACvByC,KAAM9B,EACN+B,IAAK9B,GAGT,IAAIyM,IAAYF,GACXG,GAAGF,EAAUJ,GAAQA,EAAKO,MAAS,KACnCC,UAAS,WACN,EAAK9C,OAAOE,IAAI5K,MAAQmN,EAAUnN,MAClC,EAAK0K,OAAOE,IAAInI,KAAO0K,EAAU1K,KACjC,EAAKiI,OAAOE,IAAIlI,IAAMyK,EAAUzK,IAC5BsK,EACIA,EAAKS,YAAW,EAAK5C,QAAQ7K,MAAQmN,EAAUnN,OAEnD,EAAK6K,QAAQ7K,MAAQmN,EAAUnN,MAEnC,EAAKqK,UAAUC,cAAc6C,EAAUnN,UAE1C0N,WAxKjB,+BA8KI,SAAmBnM,GACf,IAAQV,EAAqBU,EAArBV,iBAEJA,IAAqBkD,KAAK+I,oBAC1B/I,KAAK+I,kBAAoBjM,EACzBkD,KAAK2G,OAAOC,WAAa5G,KAAKuE,MAAMrJ,OAAO4B,IAAqB,UAnL5E,KCVa8M,GAAb,WACI,WAAa5G,GAAc,oBACvB,IAAQC,EAAYD,EAAZC,QAEF4G,EAAO,CACT,IAAM,EACN,MAAQ,EACR,MAAQ,EACR,OAAS,EACT,GAAK,GAGHC,EAAc,CAChB,IAAM,EACN,MAAQ,EACR,MAAQ,EACR,OAAS,GAGb9J,KAAK8J,YAAcA,EACnB9J,KAAK6J,KAAOA,EAGZ,IAAME,EAAY,SAAWC,EAASC,GAClC,OAAQD,GACJ,KAAK,GACL,KAAK,GACDF,EAAW,KAAWD,EAAI,GAASI,GACnC,MACJ,KAAK,GACL,KAAK,GACDH,EAAW,OAAaD,EAAI,KAAWI,GACvC,MACJ,KAAK,GACL,KAAK,GACDJ,EAAI,KAAWI,EACf,MACJ,KAAK,GACL,KAAK,GACDJ,EAAI,MAAYI,EAChB,MACJ,KAAK,GACDJ,EAAI,EAAQI,EACZ,MACJ,KAAK,GACDJ,EAAI,EAAQI,EAKpBhH,EAAQI,KAAK,WAAbJ,CAAyB4G,IAK7B/F,SAAS+B,iBAAiB,WAAW,SAAAqE,GAAK,OAAIH,EAAUG,EAAMF,SAAS,MACvElG,SAAS+B,iBAAiB,SAAS,SAAAqE,GAAK,OAAIH,EAAUG,EAAMF,SAAS,MAIrE/G,EAAQC,UAAU,YAAlBD,EAA+B,SAAA1H,GACf,cAARA,GAAqBwO,EAAU,IAAI,GAC3B,eAARxO,GAAsBwO,EAAU,IAAI,GAC5B,eAARxO,GAAsBwO,EAAU,IAAI,GAC5B,cAARxO,GAAqBwO,EAAU,IAAI,MAE3C9G,EAAQC,UAAU,UAAlBD,EAA6B,SAAA1H,GACb,cAARA,GAAqBwO,EAAU,IAAI,GAC3B,eAARxO,GAAsBwO,EAAU,IAAI,GAC5B,eAARxO,GAAsBwO,EAAU,IAAI,GAC5B,cAARxO,GAAqBwO,EAAU,IAAI,MAtEnD,oDA0EI,SAAkBxO,EAAK+H,GACnBtD,KAAK8J,YAAYvO,GAAO+H,GACvBA,IAAOtD,KAAK6J,KAAKtO,IAAO,OA5EjC,KCEa4O,GAAb,WACI,WAAatP,GAAO,oBAChB,IAAQuP,EAAsBvP,EAAtBuP,OAER,EAF8BvP,EAAdH,UASFgD,aAJVU,GAHJ,EACID,SADJ,EAEID,SAFJ,EAGIE,YAGAW,GANJ,EAIIF,YAJJ,EAKIC,WALJ,EAMIC,cAIJiB,KAAKqK,QAAU,KACfrK,KAAKsK,WAAY,EACjBtK,KAAKuK,UAAW,EAEhBvK,KAAKwK,KAAO,IAAI5K,WAChBI,KAAKwK,KAAKC,SAASC,UAAU,CAAC,EAAG,EAAG,IACpC1K,KAAKwK,KAAKG,SAASpL,KAAO,SAG1BS,KAAK4K,UAAY,IAAIhL,WACrBI,KAAK4K,UAAU1D,SAASwD,UAAU,CAAC,GAAI,IAAK,IAC5C1K,KAAKwK,KAAKzD,IAAI/G,KAAK4K,WAEnB5K,KAAK6K,SAAW,IAAIjL,WACpBI,KAAK6K,SAAS3D,SAASwD,UAAU,CAAC,EAAG,GAAI,MACzC1K,KAAKwK,KAAKzD,IAAI/G,KAAK6K,UAEnB7K,KAAK8K,QAAU,IAAIlL,WACnBI,KAAK8K,QAAQ5D,SAASwD,UAAU,CAAC,EAAG,EAAG,MACvC1K,KAAKwK,KAAKzD,IAAI/G,KAAK8K,SAIf,IAAQzM,EAA+BD,EAA/BC,IAAKC,EAA0BF,EAA1BE,MAAOI,EAAmBN,EAAnBM,KAAMC,EAAaP,EAAbO,IAAaP,EAARQ,IAC/BoB,KAAKqK,QAAU,IAAIzK,oBAAwBvB,EAAKC,EAAOI,EAAMC,GAC7DqB,KAAKqK,QAAQnD,SAASwD,UAAU,CAAC,EAAG,GAAI,IACxC1K,KAAKwK,KAAKzD,IAAI/G,KAAKqK,SAInB,IAAQpO,EAAwB8C,EAAxB9C,MAAO8O,EAAiBhM,EAAjBgM,QAASnM,EAAQG,EAARH,IAClBoM,EAAQ,IAAIpL,aAAiB3D,EAAO8O,GAC1CC,EAAM9D,SAASwD,UAAU9L,GACzBoB,KAAKwK,KAAKzD,IAAIiE,GAGlBZ,EAAOa,UAAUjL,KAAKqK,SACtBD,EAAOzB,WAAW3I,KAAKwK,MAnD/B,+CA0DI,SAAarH,GACTnD,KAAKkL,QAAU/H,IA3DvB,2BA8DI,SAAc5H,EAAK4H,MA9DvB,oBAkEI,WACI,OAAOnD,KAAKwK,OAnEpB,uBAsEI,WACI,OAAOxK,KAAKqK,UAvEpB,sBA0EI,SAAUnC,EAAGC,EAAGC,GACZpI,KAAKwK,KAAKtD,SAASC,IAAIe,EAAGC,EAAGC,OA3ErC,KCQM+C,GAAkB,SAACjQ,EAAQY,GAC7B,IAAK,IAAIP,KAAOL,EACZA,EAAOK,GAAK6P,QAAUlQ,EAAOK,GAAK6P,MAAQlQ,EAAOK,GAAK8P,MAAQzL,kBAElE,IAAM0L,EAAW,CAAC,UAAW,SAAU,MAAO,YAAa,WAAY,SACjEC,EAAY,GALgC,WAMzChQ,GACLgQ,EAAUhQ,GAAO,IAAIqE,EAAM9D,EAAiBP,GAAKQ,KAAhC,eACVD,EAAiBP,GAAKS,QAE7BsP,EAASnP,KAAI,SAAAqP,GAAM,OACf1P,EAAiBP,GAAKS,MAAMwP,KACvBD,EAAUhQ,GAAKiQ,GAAUtQ,EAAOY,EAAiBP,GAAKS,MAAMwP,SANzE,IAAK,IAAIjQ,KAAOO,EAAmB,EAA1BP,GAST,OAAOgQ,GCFLE,GAAoB,SAACvQ,EAAQqQ,GAC/B,IAAMG,EAAY,GACZC,EAAQ,GAsCd,OApCAzQ,EAAO,eAAe0Q,UAAS,SAAAC,GAC3B,IAAIrB,EAAO,KAoBX,GAlBIqB,EAAMC,KAAKC,SAAS,YAEhBvB,EADe,kBAAfqB,EAAMC,KACC,IAAIlM,OAAWiM,EAAMG,SAAUT,EAAUU,WAEzC,IAAIrM,OAAWiM,EAAMG,SAAUT,EAAUW,OAE/CJ,KAAOD,EAAMC,KAClBJ,EAAUG,EAAMC,MAAQtB,GAGxBqB,EAAMC,KAAKC,SAAS,eACpBvB,EAAO,IAAI5K,OAAWiM,EAAMG,SAAUT,EAAUY,OAC3CL,KAAOD,EAAMC,KAClBtB,EAAKG,SAAL,eAAiC,EACjCe,EAAUG,EAAMC,MAAQtB,GAIxBqB,EAAMC,KAAKC,SAAS,UAAYF,EAAMC,KAAKC,SAAS,YAAa,CACjE,IAAMK,EAASP,EAAMC,KAAKO,MAAM,KAE5BD,EAAO,IAAM5B,IACRmB,GAAOS,EAAO,MACfT,GAAOS,EAAO,IAAM,IAExB5B,EAAKG,SAAS2B,MAAQF,EAAO,GAC7BT,GAAOS,EAAO,IAAIvQ,KAAK2O,QAO5B,CACHkB,YACAC,UClEO,OAA0B,oCCA1B,OAA0B,6CCA1B,OAA0B,6CCA1B,OAA0B,4CCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCA1B,OAA0B,+BCG5BY,GAAb,WACI,aAAgB,oBACZvM,KAAKwM,WAAa,GAGlBxM,KAAKyM,UAAY,IAAI7M,UACrBI,KAAK0M,QAAU,IAAI9M,UACnBI,KAAK2M,WAAa,IAAI/M,YAAgBI,KAAKyM,UAAWzM,KAAK0M,SAPnE,sDAUI,SAAoBlC,GAChB,IAAK,IAAInP,EAAI,EAAGA,EAAI2E,KAAKwM,WAAWlR,SAAUD,EAC1C,GAAI2E,KAAKwM,WAAWnR,KAAOmP,EACvB,OAGRxK,KAAKwM,WAAW3Q,KAAK2O,KAhB7B,qCAoBI,SAAwBA,GACpBxK,KAAKwM,WAAaxM,KAAKwM,WAAW3L,QAAO,SAAAC,GAAI,OAAIA,IAAS0J,OArBlE,6BAyBI,SAAiBoC,EAASC,EAAOC,GAC7BF,EAAQ3E,iBAAiBjI,KAAKyM,WAC9BI,EAAM5E,iBAAiBjI,KAAK0M,SAE5B1M,KAAK0M,QAAQK,IAAI/M,KAAKyM,WAEtB,IAAMO,EAAahN,KAAK2M,WAAWM,iBAAiBjN,KAAKwM,YAEzD,OAAIQ,EAAW,IAAMA,EAAW,GAAGE,SAAWJ,EACnC,EAAE,EAAME,EAAW,IAEvB,EAAE,EAAO,UApCxB,KCsMMG,GAAgB,SAAC3C,EAAM4C,EAAOC,GAChC,OAAO,IAAI7N,SAAQ,SAAAC,GACf,IAAI6N,EAAI,GAEO,SAAThG,IAMF,IALAgG,GAAK,KACD,IAAMA,EAAI,GAEd9C,EAAK+C,WAAWC,iBAAiBJ,EAAOC,EAAOC,GAErC,IAANA,EACA,OAAO7N,IAGX0E,WAAWmD,EAAQ,IAGvBA,OAOFmG,GAAmB,SAAC9B,EAAOvB,EAAQsD,EAAiBzK,GACtD,IAAM0K,EAAkB,SAACC,EAAKjN,GAC1B,GAAKgL,EAAMiC,GAEX,IAAK,IAAIvS,EAAI,EAAGA,EAAIsQ,EAAMiC,GAAKtS,SAAUD,EAAG,CACxC,IAAMmP,EAAOmB,EAAMiC,GAAKvS,GACT,WAAXsF,GAAqByJ,EAAOvB,gBAAgB2B,GACjC,QAAX7J,GAAkByJ,EAAOzB,WAAW6B,KAI1CqD,EAAuB,SAACD,EAAKjN,GAC/B,GAAKgL,EAAMiC,GAEX,IAAK,IAAIvS,EAAI,EAAGA,EAAIsQ,EAAMiC,GAAKtS,SAAUD,EAAG,CACxC,IAAMmP,EAAOmB,EAAMiC,GAAKvS,GACT,WAAXsF,GAAqB+M,EAAgBI,wBAAwBtD,GAClD,QAAX7J,GAAkB+M,EAAgBK,mBAAmBvD,KA6BjE,OAxBoB,SAAAnK,GAChBW,QAAQC,IAAIZ,GACZ4C,EAAQI,KAAK,eAAbJ,CAA6B5C,GAG7BsN,EAAgBtN,EAAQ,EAAG,UAC3BsN,EAAgBtN,EAAQ,EAAG,UAC3BsN,EAAgBtN,EAAQ,EAAG,OAC3BsN,EAAgBtN,EAAQ,EAAG,OAC3BsN,EAAgBtN,EAAO,OACvBsN,EAAgBtN,EAAQ,EAAG,OAC3BsN,EAAgBtN,EAAQ,EAAG,OAC3BsN,EAAgBtN,EAAQ,EAAG,OAG3BwN,EAAqBxN,EAAQ,EAAG,UAChCwN,EAAqBxN,EAAQ,EAAG,UAChCwN,EAAqBxN,EAAQ,EAAG,OAChCwN,EAAqBxN,EAAO,OAC5BwN,EAAqBxN,EAAQ,EAAG,OAChCwN,EAAqBxN,EAAQ,EAAG,SCzQlC2N,GAAMC,KAAKC,OAGXC,GAAgB,CAClB,EAAK,CACDvP,IAAK,CAAC,GAAI,IAAK,oBACfwP,IAAK,CAAC,EAAG,EAAG,GACZC,SAAU,KACVC,iBAAkB,UAEtB,EAAK,CACD1P,IAAK,EAAE,mBAAoB,GAAI,oBAC/BwP,IAAK,CAAC,EAAGH,KAAKM,GAAK,EAAG,GACtBF,SAAU,IACVC,iBAAkB,QAEtB,GAAM,CACF1P,IAAK,EAAE,kBAAmB,KAAM,oBAChCwP,IAAK,CAAC,EAAGH,KAAKM,GAAK,EAAG,GACtBF,SAAU,KACVC,iBAAkB,QAGtB,GAAM,CACF1P,IAAK,EAAE,mBAAoB,YAAa,mBACxCwP,IAAK,CAAC,EAAGH,KAAKM,GAAI,GAClBF,SAAU,KACVC,iBAAkB,SAQbE,GAAb,WACI,WAAY3T,GAAO,IAAD,2BACd,IACIuP,EAIAvP,EAJAuP,OACAlP,EAGAL,EAHAK,OACAqQ,EAEA1Q,EAFA0Q,UACAtI,EACApI,EADAoI,QAIJjD,KAAKyO,aAAe,KAEpBzO,KAAK0O,KAAOxT,EAAOyT,IAAIC,MAAMC,SAAS,GACtC7O,KAAK0O,KAAK9C,UAAS,SAAA9K,GACfA,EAAKgO,SAAWvD,EAAS,QAI7BvL,KAAK+O,UAAY,IAAInP,WACrBI,KAAK+O,UAAU7H,SAASC,IAAI,EAAG,EAAG,IAClCnH,KAAK0O,KAAK3H,IAAI/G,KAAK+O,WACnB/O,KAAK0O,KAAKM,MAAM7H,IAAI,KAAM,KAAM,MAGhCnH,KAAKiP,YAAcC,GAAiBhU,EAAOyT,KAC3C3O,KAAKiP,YAAYE,KAAK,QAGtBnP,KAAKoP,UAAYC,GAAerP,KAAK0O,KAAM1O,KAAK+O,UAAW,GAAI9L,GAC/DjD,KAAKsP,OAASpU,EAAOyQ,MAGrBvB,EAAOzB,WAAW3I,KAAK0O,MAGvBzL,EAAQC,UAAU,cAAlBD,EAAiC,SAAA9C,GACxB,EAAKuO,KAAKa,SAEf,EAAKN,YAAY3H,OAAOnH,MAK5B,IAAMqP,EAAS,GAEfvM,EAAQC,UAAU,eAAlBD,EAAkC,SAAA5C,GAC9B,GAAc,KAAVA,EAAc,CAEd,IAAK,IAAIhF,EAAI,EAAGA,EAAImU,EAAOlU,SAAUD,EACjC,GAAkB,KAAdmU,EAAOnU,GAAW,OAE1BmU,EAAO3T,KAAK,IACZ,EAAK4T,SAAS,IAElB,GAAc,KAAVpP,EAAc,CAEd,IAAK,IAAIhF,EAAI,EAAGA,EAAImU,EAAOlU,SAAUD,EACjC,GAAkB,KAAdmU,EAAOnU,GAAW,OAE1BmU,EAAO3T,KAAK,IACZ,EAAK4T,SAAS,QA5D9B,4CAiEI,SAAUtM,GACNnD,KAAKyO,aAAetL,EAEpB,MAAiDgL,GAAchL,GAAvDvE,EAAR,EAAQA,IAAKwP,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,iBAI5B,GAFAtO,KAAKiP,YAAYE,KAAKb,GAElBD,EAAU,CACVrO,KAAKoP,UAAUM,kBACf,IAAK,IAAIrU,EAAI,EAAGA,EAAI2E,KAAKsP,OAAOjB,GAAU/S,SAAUD,EAChD2E,KAAKoP,UAAUrB,mBAAmB/N,KAAKsP,OAAOjB,GAAUhT,IAE5D2E,KAAKoP,UAAUzF,aAEf3J,KAAKoP,UAAUO,OAInB3P,KAAK0O,KAAKxH,SAASwD,UAAU9L,GAC7BoB,KAAK0O,KAAKjE,SAASC,UAAU0D,KApFrC,oBAuFI,WACI,OAAOpO,KAAK0O,OAxFpB,4BA2FI,WACI,OAAO1O,KAAKyO,eA5FpB,yBA+FI,SAAamB,GACT5P,KAAKoP,UAAUO,OACf3P,KAAKiP,YAAYE,KAAK,UACtB,IAAMU,EAAQ,IAAIjQ,UAAcgQ,EAAU1H,EAAGlI,KAAK0O,KAAKxH,SAASiB,EAAGyH,EAAUxH,GAC7EpI,KAAK0O,KAAKoB,OAAOD,KAnGzB,wBAsGI,WACI,MAAuC1B,GAAcnO,KAAKyO,cAAlDJ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,iBAElBD,GAAYrO,KAAKoP,UAAUzF,QAC3B3J,KAAKiP,YAAYE,KAAKb,OA1G9B,KAoHMY,GAAmB,SAAAa,GACrB,IAAMC,EAAaD,EAAUC,WACvBC,EAAQ,IAAIrQ,iBAAqBmQ,EAAUnB,MAAMC,SAAS,IAE1DqB,EAASD,EAAME,WAAWH,EAAW,IAC3CE,EAAOE,UAAY,IAEnB,IAAMC,EAAOJ,EAAME,WAAWH,EAAW,IACzCK,EAAKD,UAAY,EAEjB,IAAME,EAAOL,EAAME,WAAWH,EAAW,IACzCM,EAAKF,UAAY,EAGjB,IAAMG,EAAU,CACZL,SACAG,OACAC,QAGAE,EAAgB,KAEpB,MAAO,CACHlJ,OAAQ,SAAAnH,GAAI,OAAI8P,EAAM3I,OAAOnH,EAAKsQ,QAClCtB,KAAM,SAAA5T,GACEiV,IAAkBjV,IAEtBiV,EAAgBjV,EAEhB0U,EAAMS,gBACNH,EAAQhV,GAAK4T,WAWnBwB,GAAc,SAAAnG,GAChB,IAAMoG,GAAY5C,KAAQC,KAAKM,GAAK,IAAM,KAAOP,KAAQ,GAAM,GAAK,EAE9DrQ,EAAQiT,EADO,GAGjBC,EAAgB,EAEpB,OAAO,WAEH,OADArG,EAAKC,SAAStC,GAAKxK,IACVkT,EAPQ,KAanBC,GAAU,SAACtG,EAAMsC,GACnB,IACMiE,EAAWjE,EACXmB,KAAK+C,IAAIlE,EAFD,IAEuB,IAARkB,KAAc,KACrC,KAEFiD,EAAY,EAEhB,OAAO,WACH,QAAKnE,IAGLtC,EAAK0G,WAXK,OAYDD,EAAYF,KASvB1B,GAAiB,SAAC7E,EAAM2G,EAAcC,EAAYnO,GACpD,IAAIoO,GAAW,EACTC,EAAaC,KAEbhB,EAAU,CACZ,OAAUI,GACV,GAAMG,IAGN3V,EAAQ,SACRqV,EAAgB,KAGdgB,EAAe,SAAAjW,GACZA,IACS,WAAVJ,IAAuBI,EAAM,MACnB,OAAVJ,IAAmBI,EAAM,WAG7BJ,EAAQI,EACR,IAAMkW,EAAIH,EAAWI,gBAAgBlH,EAAM2G,GAC3CX,EAAgBD,EAAQhV,GAAKiP,EAAMyD,KAAK0D,IAAIF,EAAI,GAAI,KAexD,OAXAD,EAAarW,GAGb8H,EAAQC,UAAU,cAAlBD,EAAiC,WACxBoO,IAGJb,KAAmBgB,OAIjB,CACH7H,MAAO,WACH6H,EAAa,UACbH,GAAW,GAEf1B,KAAM,kBAAM0B,GAAW,GACvBtD,mBAAoBuD,EAAWvD,mBAC/BD,wBAAyBwD,EAAWxD,wBACpC4B,gBAAiB4B,EAAW5B,kBAQ9B6B,GAA2B,WACzB,IAAIK,EAAY,GAEVC,EAAW,IAAIjS,UACfkS,EAAS,IAAIlS,UACbmS,EAAY,IAAInS,YAAgBiS,EAAUC,GAGpD,MAAO,CACH/D,mBADG,SACiBvD,GAChBoH,EAAU/V,KAAK2O,IAEnBsD,wBAJG,SAIsBtD,GACrBoH,EAAYA,EAAU/Q,QAAO,SAAAC,GAAI,OAAIA,IAAS0J,MAElDkF,gBAPG,WAQCkC,EAAY,IAEhBF,gBAVG,SAUc9E,EAASC,GACtBD,EAAQ3E,iBAAiB4J,GACzBhF,EAAM5E,iBAAiB6J,GAEvBA,EAAO/E,IAAI8E,GAEX,IAAM7E,EAAa+E,EAAU9E,iBAAiB2E,GAAW,GAEzD,QAAI5E,EAAW,IACJA,EAAW,GAAGE,YCtTtB,OAA0B,qCCA1B,OAA0B,iCCA5B8E,I,MAAmB,CAC5B,GAAM,CACF,sBAAuB,qFACvB,qCAAsC,+HACtC,eAAgB,mCAChB,sBAAuB,4GACvB,sBAAuB,8EACvB,+CAAgD,8LAChD,4BAA6B,4IAC7B,qCAAsC,iJACtC,kCAAmC,wGACnC,sDAAuD,yLACvD,uBAAwB,8EACxB,+FAA+F,4YAC/F,qCAAsC,6HACtC,qDAAsD,oOACtD,SAAU,YACV,qFAAsF,gdAGtF,cAAe,4EACf,eAAgB,8FAChB,kBAAmB,gHACnB,QAAW,iCACX,KAAQ,2BACR,WAAY,mCACZ,KAAQ,0CCrBVzQ,GAAI0Q,EAAsBD,IAYnBE,GAAgB1Q,aAPL,SAAArG,GAAK,MAAK,CAC9BgX,cAAehX,EAAMiX,GAAGD,iBAMC3Q,EAAyB,SAAUxF,GAC5D,OACI,qBAAK2F,UAAU,YAAf,SACK3F,EAAMmW,cAAchW,KAAI,SAAA2E,GAAI,OAAK,wBAE1Bc,QAAS,WACL5F,EAAM6F,SAAS,CACXtC,KAAM,eACN8S,OAAQvR,IAEZqD,YAAW,WACPnI,EAAM6F,SAAS,CACXtC,KAAM,eACN8S,OAAQvR,MAIb,MAdmB,SAiBzBS,GAAET,EAAKwR,IAhBHrE,KAAKsE,MAAqB,IAAftE,KAAKC,mBCfnC3M,GAAIH,EAAiB4Q,IAYdQ,GAAahR,aAPF,SAAArG,GAAK,MAAK,CAC9BsX,WAAYtX,EAAMiX,GAAGK,cAMCjR,EAAyB,SAAUxF,GACzD,OACI,qBAAK2F,UAAU,WAAf,SACK3F,EAAMyW,WAAWtW,KAAI,SAAA2E,GAAI,OAAK,gCACvB,qBAAKa,UAAU,IAAf,SAAoBJ,GAAET,EAAKwR,KAC3B,qBAAK3Q,UAAU,IAAf,SAAoBJ,GAAET,EAAKnG,OAFMsT,KAAKsE,MAAsB,IAAhBtE,KAAKC,mBCZ/D3M,GAAIH,EAAiB4Q,IAmDZxQ,oBAjDS,SAAArG,GACpB,MAAQ,CACJuX,eAAgBvX,EAAMiX,GAAGM,eACzBC,mBAAoBxX,EAAMiX,GAAGO,mBAC7BC,oBAAqBzX,EAAMiX,GAAGQ,uBA6CvBpR,EAtCf,SAA8BxF,GAE1B,OACI,uCACOA,EAAM2W,oBAAsB3W,EAAM0W,gBAAkB1W,EAAM4W,sBACzD,qBAAKjR,UAAU,iBAAf,SACI,sBAAKA,UAAU,iBAAf,UAEK3F,EAAM4W,qBAAuB,sBAAKjR,UAAU,mBAAf,UAC1B,cAAC6Q,GAAD,IACA,cAACN,GAAD,OAGHlW,EAAM0W,gBAAkB,wBACrB/Q,UAAU,uBACVC,QAAS,kBAAM5F,EAAM6F,SAAS,CAAEtC,KAAM,gBAAiBqT,qBAAsB5W,EAAM4W,uBAF9D,SAGpB5W,EAAM4W,oBAAsBrR,GAAE,gBAAkBA,GAAE,sBAOlEvF,EAAM2W,oBACH,qBAAKhR,UAAU,aAAf,SACQ,wBACIC,QAAS,WACLrD,OAAOsU,SAASC,QAAQ,mBAFhC,SAIKvR,GAAE,sB,SCqBlBwR,GAAU,CACnBN,WAAY,GACZN,cAAe,GACf1P,gBAAgB,EAChBiQ,gBAAgB,EAChBE,qBAAqB,EACrBD,oBAAoB,EAEpBK,WAAY,KACZC,YAAa,EACbC,kBAAkB,EAClBC,YA3DiB,CACjB,EAAK,CACD,CACIb,EAAG,sBACH3X,EAAG,qCACHuP,MAAO,aACR,CACCoI,EAAG,eACH3X,EAAG,sBACHuP,MAAO,aACR,CACCoI,EAAG,sBACH3X,EAAG,+CACHuP,MAAO,UAGf,GAAM,CACF,CACIoI,EAAG,4BACH3X,EAAG,qCACHuP,MAAO,aACR,CACCoI,EAAG,kCACH3X,EAAG,sDACHuP,MAAO,UAGf,GAAM,CACF,CACIoI,EAAG,uBACH3X,EAAG,+FACHuP,MAAO,aAEX,CACIoI,EAAG,qCACH3X,EAAG,qDACHuP,MAAO,aAEX,CACIoI,EAAG,SACH3X,EAAG,qFACHuP,MAAO,YCdNkJ,GAAe,CACxB,CACI7X,IAAK,UACLC,OAAQ8E,EACR7E,aAAc,cAOlB,CACIF,IAAK,gBACLC,OCvDJ,WAAawH,GAAc,oBACvB,IAAMC,EAAwBD,EAAxBC,QAASoQ,EAAerQ,EAAfqQ,YAEdA,IAAeA,EAAavP,SAASC,cAAc,iBAEpDd,EAAQC,UAAU,YAAlBD,EAA+B,SAAA1H,GACf,oBAARA,GAA2B+X,OAInC,IAAMA,EAA4B,WAC1BD,EAAWE,kBACXF,EAAWE,oBACJF,EAAWG,qBAClBH,EAAWG,uBACJH,EAAWI,wBAClBJ,EAAWI,0BACJJ,EAAWK,qBAClBL,EAAWK,uBAKbrL,EAAS,SAAA5C,GACX4N,EAAWjP,MAAMmE,MAAQhK,OAAOC,WAAa,KAC7C6U,EAAWjP,MAAMoE,OAASjK,OAAOE,YAAc,KAC/C4U,EAAWjP,MAAMuP,SAAW1F,KAAK0D,IAAI1D,KAAK+C,IAAI/C,KAAK+C,IAAIzS,OAAOC,WAAYD,OAAOE,aAhC/E,KACA,KA+B8G,GAAK,KAEhHqF,SAAS8P,mBACV3Q,EAAQI,KAAK,aAAbJ,CAA2B,mBAKnC1E,OAAOsH,iBAAiB,SAAUwC,GAClCA,KDqBA5M,aAAc,cAElB,CACIF,IAAK,eACLC,OAAQuE,EACRtE,aAAc,cAKlB,CACIF,IAAK,eACLC,OEzEJ,WAAawH,GAAc,oBACvB,IAEM6Q,EAFc7Q,EAAZC,QAEwBI,KAAK,eAEjClD,EAAO,CACPqJ,KAAM,EACNiH,MAAO,EACPqD,MAAO,EACPC,QAAS,GAsCPzM,EAAS0M,KAnCc,kBAAM7T,KAEhB,SAAAA,GAEf,OADAA,EAAKqJ,KAAOyK,KAAKC,MACV/T,KAGS,SAAAA,GAKhB,OAJAA,EAAKsQ,MAAqC,MAA5BtQ,EAAKqJ,KAAOrJ,EAAK4T,UAC3BI,MAAMhU,EAAKsQ,QAAUtQ,EAAKsQ,MAAQ,KAAuB,IAAftQ,EAAKsQ,SAC/CtQ,EAAKsQ,MAAQ,IAAK,GAAK,MAEpBtQ,KAGS,SAAAA,GAEhB,OADAA,EAAK2T,MAAQ3T,EAAKsQ,OAAS,EAAE,IACtBtQ,KAGE,SAAAA,GAET,OADA0T,EAAgB1T,GACTA,KAGW,SAAAA,GAElB,OADAA,EAAK4T,QAAU5T,EAAKqJ,KACbrJ,KAGiB,SAAAiU,GAExB,OADAjU,EAAOiU,MAcK,SAAVC,IACFC,sBAAsBD,GACtB/M,EAAOnH,GAGXkU,IFYA5Y,aAAc,mBAElB,CACIF,IAAK,eACLC,OG9EJ,WAAawH,GAAc,oBACvBA,EAAW,QAAYE,UAAU,cAAjCF,EAAgD,kBAAMsG,UH8EtD7N,aAAc,mBAElB,CACIF,IAAK,SACLC,OAAQ2K,GACR1K,aAAc,mBAElB,CACIF,IAAK,WACLC,OAAQoO,GACRnO,aAAc,mBAElB,CACIF,IAAK,SACLC,OAAQ2O,GACR1O,aAAc,mBAElB,CACIF,IAAK,eACLC,O5BnGJ,WAAawH,GAAc,oBACvB,IAAQ9H,EAAsB8H,EAAtB9H,OAAQR,EAAcsI,EAAdtI,UAEhBsI,EAAYuI,UAAYJ,GAAgBjQ,EAAQR,EAAUoB,mB4BiG1DL,aAAc,mBAElB,CACIF,IAAK,QACLC,O3BrGJ,WAAYX,GAAO,oBAKXA,EAHAuP,OADJ,IAEIlP,EAEAL,EAFAK,OACAqQ,EACA1Q,EADA0Q,UAGJ,EAA6BE,GAAkBvQ,EAAQqQ,GAApCI,GAAnB,EAAQD,UAAR,EAAmBC,OACnB9Q,EAAKK,OAAOyQ,MAAQA,G2B8FpBlQ,aAAc,kBACdE,aAAc,CACV,CAAE4D,KAAM,MAAOD,KAAMiV,GAAehZ,IAAK,eACzC,CAAEgE,KAAM,eAAgBD,KAAM,CAAEkV,GAAOC,GAAOC,GAAOC,GAAOC,GAAOC,IAAUtZ,IAAK,UAClF,CAAEgE,KAAM,eAAgBD,KAAM,CAAEwV,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,IAAW5Z,IAAK,WACxF,CAAEgE,KAAM,MAAOD,KAAM8V,GAAe7Z,IAAK,gBAAiB8Z,MAAM,GAChE,CAAE9V,KAAM,MAAOD,KAAMgW,GAAgB/Z,IAAK,iBAAkB8Z,MAAM,GAClE,CAAE9V,KAAM,MAAOD,KAAMiW,GAAQha,IAAK,SAAU8Z,MAAM,KAG1D,CACI9Z,IAAK,2BACLC,OTlHJ,WAAaX,GAAO,IAAD,2BAIf,IACIoI,EAMApI,EANAoI,QACAvI,EAKAG,EALAH,UACA8a,EAIA3a,EAJA2a,OAEAta,GAEAL,EAHAoD,MAGApD,EAFAK,QACAkP,EACAvP,EADAuP,OAKAqL,EAAc,EAClBD,EAAOhL,KAAKtD,SAASwD,UAAU,CAAC,GAAI,GAAI,IAexC,IAAMgD,EAAkB,IAAInB,GACtBmJ,EAAcjI,GAAiBvS,EAAOyQ,MAAOvB,EAAQsD,EAAiBzK,GAC5EyS,EAAYD,GAGZ,MAII/a,EAAUgD,aAHVC,EADJ,EACIA,MACAE,EAFJ,EAEIA,UACAD,EAHJ,EAGIA,SAGA0M,GAAY,EAChBkL,EAAOG,cAAgB,SAAAxS,GAAG,OAAImH,EAAYnH,GAE1CnD,KAAK4V,UAAY,CACb,SAAW,EACX,MAAQ,GAEZJ,EAAOK,cAAgB,SAACC,EAAK3S,GAAN,OAAc,EAAKyS,UAAUE,GAAO3S,GAG3D,IACI0G,EAAO,GAELkM,EAAgB,IAAInW,aACpBoW,EAAgB,IAAIpW,aAEpBqW,EAAY,IAAIrW,UAAc,EAAG,EAAG,GAMpCsW,EAAoB,WACtBH,EAAcI,KAAKX,EAAOhL,KAAK+C,YAC/ByI,EAAcI,iBAAiBH,EAAWhI,KAAKC,SAAWD,KAAKM,GAAK,GAEpEjE,GAAY,EACZ6C,GAAcqI,EAAOhL,KAAMuL,EAAeC,GACrCK,MAAK,WACFb,EAAOhL,KAAK8L,GAAGH,KAAKF,GACpB3L,GAAY,MAmElBiM,EAAoB,SAAApW,GACtB,MAAiCuN,EAAgBgE,gBAAgB8D,EAAOhL,KAAMgL,EAAO3K,SAjF9D,IAiFvB,mBAAO2L,EAAP,KAAoBC,EAApB,KAGID,GACIC,EAAUC,OAAO/L,SAAS2B,OAASmJ,IACnCA,EAAcgB,EAAUC,OAAO/L,SAAS2B,KACxCoJ,EAAYD,IAIfe,EAGMC,EAAUC,OAAO/L,SAAjB,eA3EuB,SAAA8L,GAClCV,EAAcI,KAAKX,EAAOhL,KAAK+C,YAC/B,IAAMoJ,GAAK,IAAI/W,WAAgBgX,WAAWpB,EAAOhL,KAAKtD,SAAUuP,EAAUI,KAAKC,QAC/EtB,EAAOhL,KAAKsF,OAAO6G,GACnBnB,EAAOhL,KAAK8L,GAAGH,KAAKM,EAAUI,KAAKC,QACnCtB,EAAOhL,KAAKuM,QAAQ9I,KAAKM,GAAK,GAC9ByH,EAAcG,KAAKX,EAAOhL,KAAK+C,YAE/BiI,EAAOhL,KAAKwM,0BAA0BjB,GAEtCzL,GAAY,EACZ6C,GAAcqI,EAAOhL,KAAMuL,EAAeC,GACrCK,MAAK,WACF/L,GAAY,KA+DhB2M,CAA8BR,IAH9BjB,EAAOhL,KAAK0G,YAAYvT,EAAQwC,EAAK2T,OACrC7Q,EAAQI,KAAK,aAAbJ,CAA2B,aAkCnCA,EAAQC,UAAU,WAAlBD,EAA8B,SAAA9C,GAAI,OAAI0J,EAAO1J,KAC7C8C,EAAQC,UAAU,cAAlBD,EAjBe,SAAA9C,GAGX0J,EAAI,MAAY2L,EAAOhL,KAAK0M,QAAQtZ,EAAWuC,EAAK2T,OACpDjK,EAAI,OAAa2L,EAAOhL,KAAK0M,SAAStZ,EAAWuC,EAAK2T,OAElDxJ,KA/E6B,SAAAnK,GACjC,MAAiCuN,EAAgBgE,gBAAgB8D,EAAOhL,KAAMgL,EAAO5K,UAtCtD,MAsC/B,mBAAO4L,EAAP,KAAoBC,EAApB,KAYA,GATID,GACIC,EAAUC,OAAO/L,SAAS2B,OAASmJ,IACnCA,EAAcgB,EAAUC,OAAO/L,SAAS2B,KACxCoJ,EAAYD,MAMhBe,GAnDmB,GAmDiBC,EAAUvJ,UAQlD,OAAKsJ,OAUAC,EAAUC,OAAO/L,SAAjB,eACA6K,EAAOhL,KAAK8L,GAAGa,OAAOlB,IAEvBC,OAXCV,EAAOhL,KAAK8L,GAAGa,OAAOlB,IAAcC,SACrCV,EAAOhL,KAAKtD,SAASiB,GAAMtK,EAAYsC,EAAK2T,QAV5C0B,EAAOhL,KAAK4M,WApDO,GAoDyBX,EAAUvJ,UAmE1DmK,CAA6BlX,GAC7B0J,EAAI,IAAU,EAAK+L,UAAL,SAA6BW,EAAkBpW,GAC7D0J,EAAI,MAAY,EAAK+L,UAAL,MApBK,SAAAzV,GACrB,MAAsBuN,EAAgBgE,gBAAgB8D,EAAOhL,KAAMgL,EAAO1K,QAtGnD,IAsGvB,sBAGA0K,EAAOhL,KAAK0G,WAAWvT,EAAQwC,EAAK2T,OACpC7Q,EAAQI,KAAK,aAAbJ,CAA2B,SAeeqU,CAAiBnX,GAC3D0J,EAAI,GAAS7I,QAAQC,IAAR,0CAA+CuU,EAAOhL,KAAKtD,SAASgB,EAApE,aAA0EsN,EAAOhL,KAAKtD,SAASiB,EAAI,GAAnG,aAA0GqN,EAAOhL,KAAKtD,SAASkB,EAA/H,YSlEjB3M,aAAc,mBAElB,CACIF,IAAK,kBACLC,OAAQgT,GACR/S,aAAc,kBACdE,aAAc,CACV,CAAE4D,KAAM,MAAOD,KAAMiY,GAAQhc,IAAK,OAClC,CAAEgE,KAAM,MAAOD,KAAMkY,GAAgBjc,IAAK,OAAQ8Z,MAAM,KAGhE,CACI9Z,IAAK,wBACLC,OIjIJ,WAAaX,GAAO,oBAEhB,IACIoI,EAIApI,EAJAoI,QACAuS,EAGA3a,EAHA2a,OACAhH,EAEA3T,EAFA2T,gBACA9K,EACA7I,EADA6I,WAGEiL,EAAMH,EAAgBiJ,SAExBnN,EAAY,CACZ,SAAW,EACX,MAAQ,GAGNoN,EAAW,IAAI9X,UAGjB8S,GAAiB,EAGrBzP,EAAQC,UAAU,aAAlBD,EAAgC,SAAA6S,GAC5BN,EAAO3K,SAAS5C,iBAAiByP,GAE7BA,EAASC,WAAWhJ,EAAIzH,UAAY,GAChCwL,IACAA,GAAiB,EACjBhP,EAAW7B,SAAS,CAAEtC,KAAM,gBAAiBmT,gBAAgB,IAC7DlE,EAAgBoJ,eAIflF,IACDA,GAAiB,EACjBhP,EAAW7B,SAAS,CAAEtC,KAAM,gBAAiBmT,gBAAgB,EAAMM,WAAYxE,EAAgBqJ,mBAC/FrJ,EAAgBsJ,YAAYtC,EAAOhL,KAAKtD,WAIpC,YAAR4O,GAEI4B,EAASC,WAAWhJ,EAAIzH,UAAY,KAAOoD,EAAUwL,KACrDxL,EAAUwL,IAAO,EACjBN,EAAOK,cAAcC,GAAK,GAC1BtH,EAAgBsJ,YAAYtC,EAAOhL,KAAKtD,WAI5CoD,EAAS,UACTA,EAAS,MAAW,EACpBkL,EAAOK,cAAc,QAAQ,QAIrC5S,EAAQC,UAAU,cAAlBD,EAAiC,WACzBuS,EAAOhL,KAAKtD,SAASyQ,WAAWhJ,EAAIzH,UAAY,KAAOoD,EAAS,SAAeA,EAAS,QACxFA,EAAS,SAAc,EACvBA,EAAS,MAAW,EACpBkL,EAAOK,cAAc,WAAW,GAChCL,EAAOK,cAAc,QAAQ,GAC7BrH,EAAgBoJ,kBJqExBnc,aAAc,mBAElB,CACIF,IAAK,eACLC,OKzIR,WACI,WAAaX,GAAO,IAAD,2BACf,IAAMkd,EAAW,IAAInY,gBACT/E,EAAK2a,OAAOwC,YACpBjR,IAAIgR,GAER/X,KAAKiY,OAAS,IAAIrY,QAAYmY,GAC9B/X,KAAKiY,OAAOC,UAAUrd,EAAKK,OAAOid,cAClCnY,KAAKiY,OAAOG,SAAQ,GACpBpY,KAAKiY,OAAOI,UAAU,KAEtBxd,EAAKoI,QAAQC,UAAU,cAAvBrI,EAAsC,SAAA8H,GAClCA,EACM,EAAKsV,OAAOtI,OACZ,EAAKsI,OAAO9I,UAd9B,+CAkBI,WACInP,KAAKiY,OAAO9I,WAnBpB,KL0IQ1T,aAAc,kBACdE,aAAc,CACV,CAAE4D,KAAM,WAAYD,KM9IjB,IAA0B,oCN8Ic/D,IAAK,kBAGxD,CACIA,IAAK,WACLC,OO9IJ,WAAYX,GAAO,oBACfA,EAAKwY,WAAavP,SAASC,cAAc,gBACzClJ,EAAK8I,qBAAuBA,GAC5B9I,EAAK4J,YR+EoB,SAAA5J,GAyG7B,MAAO,CAAEuX,GAxGE,WAA8B,IAA7BjX,EAA4B,uDAApB4X,GAASpS,EAAW,uCAEpC,GAAoB,iBAAhBA,EAAOpB,KACP,OAAO,YAAC,eACDpE,GADP,IAEIsX,WAAW,GAAD,oBACHtX,EAAMsX,YADH,CAEN9R,EAAO0R,SAEXF,cAAe,KAKvB,GAAoB,iBAAhBxR,EAAOpB,KAAyB,CAChC,MAA8BoB,EAAO0R,OAA7BnI,EAAR,EAAQA,MAER,GAFA,EAAeoO,WAED,cAAVpO,EAAuB,CACvB,IAAMiI,EAAgB,CAAChX,EAAMgY,YAAYhY,EAAM6X,YAAY7X,EAAM8X,YAAc,IAE/E,OAAO,YAAC,eACD9X,GADP,IAEI8X,YAAa9X,EAAM8X,YAAc,EACjCd,kBAKR,GAAc,UAAVjI,EAeA,OAbyB,KAArB/O,EAAM6X,YACN7O,YAAW,WACPtJ,EAAK6I,WAAW7B,SAAS,CAAEtC,KAAM,gBAAiBmT,gBAAgB,IAClE7X,EAAK6I,WAAW7B,SAAS,CAAEtC,KAAM,gBAAiBqT,qBAAqB,IACvE/X,EAAKuP,OAAOmO,kBAAkBtb,EAAoB,CAAEyM,WAAW,EAAOF,KAAM,OAC5E3O,EAAK2a,OAAOG,eAAc,GAC1BxR,YAAW,WACPtJ,EAAK6I,WAAW7B,SAAS,CAAEtC,KAAM,yBAClC,OACJ,KAIA,YAAC,eACDpE,GADP,IAEIgX,cAAe,GACfe,kBAAkB,EAClBR,gBAAgB,IAO5B,GAAoB,kBAAhB/R,EAAOpB,KAA0B,CACjC,IAAI4S,EAAgB,GAQpB,OANAtX,EAAK2a,OAAOG,cAAchV,EAAOiS,qBAE7BjS,EAAOiS,sBACPT,EAAgBhX,EAAM+X,iBAAmB,GAAK,CAAC/X,EAAMgY,YAAYhY,EAAM6X,YAAY7X,EAAM8X,eAGtF,YAAC,eACD9X,GADP,IAEIyX,oBAAqBjS,EAAOiS,oBAC5BT,kBAKR,GAAoB,kBAAhBxR,EAAOpB,KAA0B,CAEjC,IAAIkT,EAAatX,EAAMsX,WACnBQ,EAAc9X,EAAM8X,YACpBC,EAAmB/X,EAAM+X,iBAO7B,OANIvS,EAAOqS,YAAcrS,EAAOqS,aAAe7X,EAAM6X,aACjDP,EAAa,GACbQ,EAAc,EACdC,GAAmB,GAGhB,YAAC,eACD/X,GADP,IAEI8X,cACAD,WAAYrS,EAAOqS,YAAc7X,EAAM6X,WACvCN,eAAgB/R,EAAO+R,eACvBQ,mBACAT,eAKR,MAAoB,uBAAhB9R,EAAOpB,KACA,YAAC,eACDpE,GADP,IAEIwX,oBAAoB,IAKrBxX,IQrLYqd,CAAkB3d,GAErC,IAAMuX,EAAK,IAAI9N,EAAGzJ,GAClBA,EAAKuX,GAAKA,GPyIV3W,aAAc,cAElB,CACIF,IAAK,cACLC,OQhJJ,WAAawH,GAAc,oBACvB,IACIwS,EAMAxS,EANAwS,OACApD,EAKApP,EALAoP,GACAhI,EAIApH,EAJAoH,OACA1G,EAGAV,EAHAU,WACA8K,EAEAxL,EAFAwL,gBACAiK,EACAzV,EADAyV,aAGJ/U,EAAW7B,SAAS,CAChBtC,KAAM,sBACN6C,oBAAqB,IAGzBsB,EAAW7B,SAAS,CAChBtC,KAAM,yBAGViP,EAAgBiB,SAAS,GAIzB2C,EAAGsG,iBAAgB,WACfD,EAAaE,cAETvO,EAAOmO,kBAAkB5b,EAAkB,CAAE+M,WAAW,EAAOF,KAAM,OAErErF,YAAW,WACPiG,EAAOmO,kBAAkBxb,EAAoB,CAAE2M,WAAW,EAAOF,KAAM,OAEvErF,YAAW,WACPqK,EAAgBiB,SAAS,GACzBrF,EAAOmO,kBAAkBvb,EAAoB,CAAE0M,WAAW,EAAOF,KAAM,OACvEgM,EAAOG,eAAc,KACtB,QACJ,SR6GXla,aAAc,oBS3ItB8C,OAAOsH,iBAAiB,QAAQ,kBrDdzB,SAAP,oCqDcsC+S,CAAgBxF,GAAc1Y,Q","file":"static/js/main.c214c73d.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","\r\n\r\nexport const MATERIALS_CONFIG = {\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x338877,\r\n            emissive: 0x9997777,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.3,\r\n            shininess: 60,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'groundTop': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xaa6666,\r\n            emissive: 0xaa6666,\r\n            map: 'mapTop',\r\n            bumpMap: 'mapTop',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox2',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x666666,\r\n            map: 'mapFloorOuter2',\r\n            bumpMap: 'mapFloorOuter2',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.3,\r\n        },\r\n    },\r\n\r\n    'skin': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x555555,\r\n            specular: 0xffffff,\r\n            shininess: 12,\r\n            bumpMap: 'skin',\r\n            bumpScale: 0.8,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            map: 'skin',\r\n            skinning: true,\r\n        },        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const START_ENV_CONFIG = { fogNear: -10, fogFar: 20, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\nexport const START_ENV_CONFIG_2 = { fogNear: -10, fogFar: 0, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\nexport const START_ENV_CONFIG_3 = { fogNear: 20, fogFar: 500, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\nexport const START_ENV_CONFIG_4 = { fogNear: -10, fogFar: 0, color: 0x4a0a45, backgroundImgKey: null }\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    amb: {\r\n        color: 0xa5ecc5,\r\n        strength: 0.8,\r\n    },\r\n    sceneEnvironment: { fogNear: -20, fogFar: 0, color: 0x4a0a45, backgroundImgKey: 'skyBox2' },\r\n    composerAddPass: 'Saturate',\r\n}\r\n\r\n\r\n\r\n\r\nexport const playerConfig = {\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [0, 5, 0],\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0x555555,\r\n        strength: 0,\r\n        pos: [0, 400, 5],\r\n    },\r\n}\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null,\r\n        soundLoader = null\r\n\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures') {\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n        }\r\n        if (type === 'soundMp3') {\r\n            return soundLoader = (soundLoader || new THREE.AudioLoader())\r\n        }\r\n\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => {\r\n        getterLoader(type).load(path, resolve)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'Endways': 'Напрямик',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n            isShowControlSound: state.controls.isShowControlSound,\r\n            isMute: state.controls.isMute,\r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n            {props.isShowControls && props.isShowControlSound && <button\r\n                className=\"butt-sound control\"\r\n                onMouseUp={() => { \r\n                    props.gameContext.emitter.emit('toggleSound')(!props.isMute) \r\n                    props.dispatch({ type: 'TOGGLE_MUTE', is: !props.isMute })\r\n                }}\r\n                onTouchEnd={() => { \r\n                    props.gameContext.emitter.emit('toggleSound')(!props.isMute) \r\n                    props.dispatch({ type: 'TOGGLE_MUTE', is: !props.isMute })\r\n                }}\r\n            >\r\n                {props.isMute ? <>&#10236;</> : <>&#10239;</>}\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isShowControlSound: false,\r\n    isMute: false, \r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            // { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            // { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            // { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            // { text: 'Endways', href: 'http://js.otrisovano.ru/endways/' },\r\n\r\n            { text: 'Factory', href: './../chapter01' },\r\n            { text: 'Brige', href: './../chapter02' },\r\n            { text: 'Cube', href: './../chapter03' },\r\n            { text: 'Endways', href: './../chapter04' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        if (action.type === \"TOGGLE_CONTROLS\") {\r\n            return ({\r\n                ...state,\r\n                isShowControls: action.is,\r\n            })\r\n        }\r\n        if (action.type === 'ENABLE_CONTROL_SOUND') {\r\n            return ({\r\n                ...state,\r\n                isShowControlSound: true,\r\n            })\r\n        }\r\n        if (action.type === 'TOGGLE_MUTE') {\r\n            return ({\r\n                ...state,\r\n                isMute: action.is,\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n\r\n\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._playerCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n\r\n\r\n        this._controlsCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n        this._controlsCamera.position.set(0, 0, 20)\r\n        const controls = new OrbitControls(this._controlsCamera, this._renderer.domElement)\r\n        controls.target.set(0, 0, 0)\r\n        controls.update();\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        this._renderPass = new RenderPass(this._scene, this._controlsCamera)\r\n        this._composer.addPass(this._renderPass)\r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass) {\r\n            if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n                this._composer.addPass(new ShaderPass(Saturate))\r\n            }  \r\n        } \r\n\r\n\r\n\r\n        /** toggle view camera to debug by orbitControls */\r\n        const vec3 = new THREE.Vector3()\r\n        let isPlayerView = true \r\n        let saveFogData = null\r\n        emitter.subscribe('keyEvent')(data => {\r\n            if (!data['o']) {\r\n                return;\r\n            }\r\n\r\n            if (isPlayerView) {\r\n                saveFogData = { ...this._scene.fog }\r\n                this._scene.fog.near = 1000\r\n                this._scene.fog.far = 2000\r\n                isPlayerView = false\r\n                this._renderPass.camera = this._controlsCamera\r\n                this._playerCamera.getWorldPosition(vec3)\r\n                this._controlsCamera.position.x = vec3.x + 100\r\n                this._controlsCamera.position.y = vec3.y + 100\r\n                this._controlsCamera.position.z = vec3.z\r\n                controls.target.set(vec3.x, vec3.y, vec3.z)\r\n                controls.update()\r\n            } else {\r\n                this._scene.fog.near = saveFogData.near\r\n                this._scene.fog.far = saveFogData.far\r\n                isPlayerView = true \r\n                this._renderPass.camera = this._playerCamera\r\n            }\r\n        })\r\n    \r\n        \r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._controlsCamera) {\r\n                this._controlsCamera.aspect = size.width/size.height\r\n                this._controlsCamera.updateProjectionMatrix()\r\n            }\r\n            if (this._playerCamera) {\r\n                this._playerCamera.aspect = size.width/size.height\r\n                this._playerCamera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        this.removeFromScene = this._scene.remove.bind(this._scene)\r\n\r\n\r\n\r\n        const drawFrame = () => {\r\n            this._composer.render(this._scene, this._controlsCamera)\r\n        }\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._playerCamera = cam\r\n        this._renderPass.camera = this._playerCamera\r\n    }\r\n\r\n\r\n    changeEnvironment (sceneEnvironment, conf = null) {\r\n        this._changeFog(sceneEnvironment, conf)\r\n        this._changeBackground(sceneEnvironment, conf)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment, conf) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, (conf && conf.time) || 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    if (conf) { \r\n                        if (conf.updateAmb) this._lightA.color = startData.color\r\n                    } else {\r\n                        this._lightA.color = startData.color\r\n                    }\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n            'p': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break;\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break;\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break;\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break;\r\n                case 79: \r\n                    keys['o'] = isDown\r\n                    break;                \r\n                case 80: \r\n                    keys['p'] = isDown\r\n                default:\r\n                    break;\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        const { studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        this.isBlocked = true\r\n        this.isFreeze = true\r\n        \r\n        this.mesh = new THREE.Object3D()\r\n        this.mesh.rotation.fromArray([0, 0, 0])\r\n        this.mesh.userData.type = 'player'\r\n\r\n\r\n        this.bottomObj = new THREE.Object3D()\r\n        this.bottomObj.position.fromArray([0, -.02, 0])\r\n        this.mesh.add(this.bottomObj)\r\n\r\n        this.frontObj = new THREE.Object3D()\r\n        this.frontObj.position.fromArray([0, 0, -.02])\r\n        this.mesh.add(this.frontObj)\r\n\r\n        this.backObj = new THREE.Object3D()\r\n        this.backObj.position.fromArray([0, 0, 0.02])\r\n        this.mesh.add(this.backObj)\r\n\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray([0, 0, -2])\r\n            this.mesh.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this.mesh.add(light)\r\n        }\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this.mesh)\r\n    }\r\n\r\n    // toggleBlocked (val) {\r\n    //     this.isFeeze = val\r\n    // }\r\n\r\n    toggleFeeze (val) {\r\n        this.isFeeze = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        //this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this.mesh\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this.mesh.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\n\r\nexport class Level {\r\n    constructor(root) {\r\n        const { \r\n            studio, \r\n            assets, \r\n            materials, \r\n        } = root\r\n\r\n        const { allMeshes, areas } = createLevelMeshes(assets, materials)\r\n        root.assets.areas = areas\r\n\r\n\r\n        //this.allMeshes = allMeshes\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const areas = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        let mesh = null\r\n        \r\n        if (child.name.includes(\"level\")) {\r\n            if (child.name === 'level_020_001') {\r\n                mesh = new THREE.Mesh(child.geometry, materials.groundTop)\r\n            } else {\r\n                mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            }\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n        if (child.name.includes(\"roadwall\")) {\r\n            mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            mesh.userData['isWallWalking'] = true\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n\r\n        if (child.name.includes(\"level\") || child.name.includes(\"roadwall\")) {\r\n            const strArr = child.name.split('_')\r\n\r\n            if (strArr[1] && mesh) {\r\n                if (!areas[+strArr[1]]) {\r\n                    areas[+strArr[1]] = [] \r\n                }\r\n                mesh.userData.area = +strArr[1]\r\n                areas[+strArr[1]].push(mesh)   \r\n            }\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        allMeshes,\r\n        areas\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level02.e54f4bde.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map3.558e9646.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map2.2bd99ce1.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/px.c5995c72.jpg\";","export default __webpack_public_path__ + \"static/media/nx.04390d21.jpg\";","export default __webpack_public_path__ + \"static/media/py.f7a76cc4.jpg\";","export default __webpack_public_path__ + \"static/media/ny.4e15a317.jpg\";","export default __webpack_public_path__ + \"static/media/pz.7c1308f5.jpg\";","export default __webpack_public_path__ + \"static/media/nz.6287fe7d.jpg\";","export default __webpack_public_path__ + \"static/media/px.96d0b65f.jpg\";","export default __webpack_public_path__ + \"static/media/nx.8cbf039d.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.09051a4e.jpg\";","export default __webpack_public_path__ + \"static/media/pz.a1539724.jpg\";","export default __webpack_public_path__ + \"static/media/nz.0bc769f7.jpg\";","import * as THREE from \"three\";\r\n\r\n\r\nexport class helper_CollisionsItems_v02 {\r\n    constructor () {\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision (mesh) {\r\n        for (let i = 0; i < this._arrMeshes.length; ++i) {\r\n            if (this._arrMeshes[i] === mesh) {\r\n                return;\r\n            }\r\n        }\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, dist) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0] && intersects[0].distance < dist) {\r\n            return [ true, intersects[0] ]\r\n        }\r\n        return [ false, null ]\r\n    }\r\n}","import { helper_CollisionsItems_v02 } from '../../../_CORE/helpers/helper_CollisionsItems_v02'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport class system_PlayerMoveOnLevel {\r\n    constructor (root) {\r\n\r\n\r\n\r\n        const { \r\n            emitter, \r\n            CONSTANTS,\r\n            player,\r\n            level,\r\n            assets,\r\n            studio,\r\n        } = root\r\n\r\n\r\n\r\n        let currentArea = 0\r\n        player.mesh.position.fromArray([0, -40, 0])\r\n\r\n        //let currentArea = 4\r\n        //player.mesh.position.fromArray([-531.9216580366183, 62.97990036010742, 198.1976467682245])\r\n\r\n        //let currentArea = 11\r\n        //player.mesh.position.fromArray([-574.1384065002559, 1379.6997473405822, 159.23052507760912])\r\n\r\n        //let currentArea = 18\r\n        //player.mesh.position.fromArray([-1656.0663386897618, 1906.31640625, 28.162585622834097])\r\n\r\n\r\n\r\n\r\n\r\n        const collisionsWalls = new helper_CollisionsItems_v02()\r\n        const updateLevel = changerAreaLevel(assets.areas, studio, collisionsWalls, emitter)\r\n        updateLevel(currentArea)\r\n\r\n\r\n        const {\r\n            speed,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n        let isBlocked = true\r\n        player.toggleBlocked = val => isBlocked = val\r\n\r\n        this.isCanMove = {\r\n            'forward': true,\r\n            'back': true,\r\n        }\r\n        player.toggleCanMove = (dir, val) => this.isCanMove[dir] = val\r\n\r\n\r\n        let isButtonsDisabled = false\r\n        let keys = {}\r\n    \r\n        const quaternionOld = new THREE.Quaternion()\r\n        const quaternionNew = new THREE.Quaternion()\r\n\r\n        const UP_VECTOR = new THREE.Vector3(0, 1, 0)\r\n        const OFFSET_FROM_PLANES = 17\r\n        const OFFSET_FROM_PLANES_TO_DROP = 17.2\r\n\r\n\r\n\r\n        const rotatePlayerToTop = () => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            quaternionNew.setFromAxisAngle(UP_VECTOR, Math.random() * Math.PI * 2)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    player.mesh.up.copy(UP_VECTOR)\r\n                    isBlocked = false\r\n                })\r\n        }\r\n\r\n\r\n\r\n        const rotatePlayerToCollisionTarget = collision => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            const la = new THREE.Vector3().addVectors(player.mesh.position, collision.face.normal)\r\n            player.mesh.lookAt(la)\r\n            player.mesh.up.copy(collision.face.normal)\r\n            player.mesh.rotateX(Math.PI / 2)\r\n            quaternionNew.copy(player.mesh.quaternion)\r\n\r\n            player.mesh.setRotationFromQuaternion(quaternionOld)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    isBlocked = false\r\n                })\r\n        } \r\n\r\n\r\n\r\n        const checkBottomAndDropDownPlayer = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.bottomObj, OFFSET_FROM_PLANES_TO_DROP)\r\n\r\n            /** update level new area */\r\n            if (isCollision) {\r\n                if (collision.object.userData.area !== currentArea) {\r\n                    currentArea = collision.object.userData.area\r\n                    updateLevel(currentArea)\r\n                }\r\n            }\r\n\r\n\r\n            /** move player to top if on stairs */\r\n            if (isCollision && OFFSET_FROM_PLANES > collision.distance) {\r\n                player.mesh.translateY(OFFSET_FROM_PLANES - collision.distance)\r\n\r\n                return;\r\n            }\r\n\r\n\r\n            /** free down without intercepts */\r\n            if (!isCollision) {\r\n                /** if player not up - rotated to up */\r\n                !player.mesh.up.equals(UP_VECTOR) && rotatePlayerToTop()\r\n                player.mesh.position.y += (speedDown * data.count)\r\n\r\n                return;\r\n            }\r\n\r\n            /** check is player in wall and must down - rotate to top */\r\n            if (\r\n                !collision.object.userData['isWallWalking'] &&\r\n                !player.mesh.up.equals(UP_VECTOR)\r\n            ) {\r\n                rotatePlayerToTop()\r\n                \r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const checkAndMoveFront = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.frontObj, OFFSET_FROM_PLANES)\r\n\r\n            /** update level new area */\r\n            if (isCollision) {\r\n                if (collision.object.userData.area !== currentArea) {\r\n                    currentArea = collision.object.userData.area\r\n                    updateLevel(currentArea)\r\n                }\r\n            }\r\n\r\n            if (!isCollision) {\r\n                player.mesh.translateZ(-speed * data.count)\r\n                emitter.emit('playerMove')('forward')\r\n            } else if (collision.object.userData['isWallWalking']) {\r\n                rotatePlayerToCollisionTarget(collision)\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n        const checkAndMoveBack = data => {\r\n            const [isCollision] = collisionsWalls.checkCollisions(player.mesh, player.backObj, OFFSET_FROM_PLANES)\r\n            if (isCollision) return;\r\n                \r\n            player.mesh.translateZ(speed * data.count)\r\n            emitter.emit('playerMove')('back')\r\n        }\r\n\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && player.mesh.rotateY(speedRot * data.count)\r\n            keys['right'] && player.mesh.rotateY(-speedRot * data.count)\r\n\r\n            if (isBlocked) return;\r\n\r\n            checkBottomAndDropDownPlayer(data)\r\n            keys['up'] && this.isCanMove['forward'] && checkAndMoveFront(data)\r\n            keys['down'] && this.isCanMove['back'] && checkAndMoveBack(data)\r\n            keys['p'] && console.log(`player.mesh.position.fromArray([${player.mesh.position.x}, ${player.mesh.position.y + 25}, ${player.mesh.position.z}])`)\r\n        }\r\n    \r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n    }\r\n} \r\n\r\n\r\n\r\n\r\n\r\nconst helper_rotate = (mesh, quat1, quat2) => {\r\n    return new Promise(resolve => {\r\n        let n = 0\r\n\r\n        const update = () => {\r\n            n += 0.03\r\n            n > 1 && (n = 1)\r\n\r\n            mesh.quaternion.slerpQuaternions(quat1, quat2, n)\r\n\r\n            if (n === 1) {\r\n                return resolve()\r\n            }\r\n\r\n            setTimeout(update, 15)\r\n        }\r\n\r\n        update()\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst changerAreaLevel = (areas, studio, collisionsWalls, emitter) => {\r\n    const changeViewLevel = (ind, action) => {\r\n        if (!areas[ind]) return;\r\n\r\n        for (let i = 0; i < areas[ind].length; ++i) {\r\n            const mesh = areas[ind][i]\r\n            if (action === 'remove') studio.removeFromScene(mesh) \r\n            if (action === 'add') studio.addToScene(mesh) \r\n        } \r\n    } \r\n\r\n    const changeCollisionLevel = (ind, action) => {\r\n        if (!areas[ind]) return;\r\n\r\n        for (let i = 0; i < areas[ind].length; ++i) {\r\n            const mesh = areas[ind][i]\r\n            if (action === 'remove') collisionsWalls.removeItemFromCollision(mesh)\r\n            if (action === 'add') collisionsWalls.setItemToCollision(mesh)\r\n        } \r\n    } \r\n\r\n\r\n    const updateLevel = index => {\r\n        console.log(index)\r\n        emitter.emit('levelChanged')(index)\r\n\r\n\r\n        changeViewLevel(index - 4, 'remove')\r\n        changeViewLevel(index - 3, 'remove')\r\n        changeViewLevel(index - 2, 'add')\r\n        changeViewLevel(index - 1, 'add')\r\n        changeViewLevel(index, 'add')\r\n        changeViewLevel(index + 1, 'add')\r\n        changeViewLevel(index + 2, 'add')\r\n        changeViewLevel(index + 3, 'add')\r\n\r\n\r\n        changeCollisionLevel(index - 3, 'remove')\r\n        changeCollisionLevel(index - 2, 'remove')\r\n        changeCollisionLevel(index - 1, 'add')\r\n        changeCollisionLevel(index, 'add')\r\n        changeCollisionLevel(index + 1, 'add')\r\n        changeCollisionLevel(index + 2, 'add')\r\n    }\r\n\r\n\r\n    return updateLevel\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\nconst ran = Math.random\r\n\r\n\r\nconst MONSTERS_DATA = {\r\n    '0': {\r\n        pos: [0, -55, -10.680000000000003],\r\n        rot: [0, 0, 0],\r\n        walkData: null,\r\n        defaultAnimation: 'dialog',\r\n    },\r\n    '4': {\r\n        pos: [-697.1507105430046, -31, 278.81390042624884],\r\n        rot: [0, Math.PI / 2, 0],\r\n        walkData: '4',\r\n        defaultAnimation: 'walk',\r\n    },\r\n    '13': {\r\n        pos: [-946.6448542936033, 1263, 12.835633240896737],\r\n        rot: [0, Math.PI / 2, 0],\r\n        walkData: '13',\r\n        defaultAnimation: 'walk',\r\n\r\n    },\r\n    '20': {\r\n        pos: [-2145.4767672182593, 2118.171875, 4.885100091204412],\r\n        rot: [0, Math.PI, 0],\r\n        walkData: null,\r\n        defaultAnimation: 'stay',\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class system_Monsters {\r\n    constructor(root) {\r\n        const {\r\n            studio,\r\n            assets,\r\n            materials,\r\n            emitter,\r\n        } = root\r\n\r\n\r\n        this._currentArea = null\r\n\r\n        this._bot = assets.bot.scene.children[0]\r\n        this._bot.traverse(item => {\r\n            item.material = materials['skin']\r\n        })\r\n\r\n\r\n        this._frontObj = new THREE.Object3D()\r\n        this._frontObj.position.set(0, 0, .1)\r\n        this._bot.add(this._frontObj)\r\n        this._bot.scale.set(1.15, 1.15, 1.15)\r\n\r\n\r\n        this._animations = createAnimations(assets.bot)\r\n        this._animations.play('walk')\r\n\r\n\r\n        this._freeWalk = createFreeWalk(this._bot, this._frontObj, 20, emitter)\r\n        this._areas = assets.areas\r\n\r\n\r\n        studio.addToScene(this._bot)\r\n\r\n\r\n        emitter.subscribe('frameUpdate')(data => {\r\n            if (!this._bot.visible) return;\r\n\r\n            this._animations.update(data)\r\n        })\r\n\r\n\r\n        /** if player move to next/previous area do not reset bot */\r\n        const arrWas = []\r\n\r\n        emitter.subscribe('levelChanged')(index => {\r\n            if (index === 12) {\r\n                /** if player move to next/previous area do not reset bot */\r\n                for (let i = 0; i < arrWas.length; ++i) {\r\n                    if (arrWas[i] === 13) return;\r\n                }\r\n                arrWas.push(13)\r\n                this.setBotTo(13)\r\n            }\r\n            if (index === 19) {\r\n                /** if player move to next/previous area do not reset bot */\r\n                for (let i = 0; i < arrWas.length; ++i) {\r\n                    if (arrWas[i] === 20) return;\r\n                }\r\n                arrWas.push(20)\r\n                this.setBotTo(20)\r\n            }\r\n        })\r\n    }\r\n\r\n    setBotTo (val) {\r\n        this._currentArea = val\r\n\r\n        const { pos, rot, walkData, defaultAnimation } = MONSTERS_DATA[val]\r\n\r\n        this._animations.play(defaultAnimation)\r\n\r\n        if (walkData) {\r\n            this._freeWalk.clearCollisions()\r\n            for (let i = 0; i < this._areas[walkData].length; ++i) {\r\n                this._freeWalk.setItemToCollision(this._areas[walkData][i])\r\n            }\r\n            this._freeWalk.start()\r\n        } else {\r\n            this._freeWalk.stop()\r\n        }\r\n\r\n\r\n        this._bot.position.fromArray(pos)\r\n        this._bot.rotation.fromArray(rot)\r\n    }\r\n\r\n    getBot () {\r\n        return this._bot\r\n    }\r\n\r\n    getCurrentArea () {\r\n        return this._currentArea\r\n    }\r\n\r\n    startDialog (playerPos) {\r\n        this._freeWalk.stop()\r\n        this._animations.play('dialog')\r\n        const plPos = new THREE.Vector3(playerPos.x, this._bot.position.y, playerPos.z)\r\n        this._bot.lookAt(plPos)\r\n    }\r\n\r\n    stopDialog () {\r\n        const { walkData, defaultAnimation } = MONSTERS_DATA[this._currentArea]\r\n\r\n        walkData && this._freeWalk.start()\r\n        this._animations.play(defaultAnimation )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/** ANIMATION MANAGER ****************************************/\r\n\r\nconst createAnimations = assetsBot => {\r\n    const animations = assetsBot.animations\r\n    const mixer = new THREE.AnimationMixer(assetsBot.scene.children[0])\r\n\r\n    const dialog = mixer.clipAction(animations[2])\r\n    dialog.timeScale = 1.5\r\n\r\n    const walk = mixer.clipAction(animations[0])\r\n    walk.timeScale = 3\r\n\r\n    const stay = mixer.clipAction(animations[1])\r\n    stay.timeScale = 1\r\n\r\n\r\n    const actions = {\r\n        dialog,\r\n        walk,\r\n        stay,\r\n    }\r\n\r\n    let currentAction = null\r\n\r\n    return {\r\n        update: data => mixer.update(data.delta),\r\n        play: key => {\r\n            if (currentAction === key) return;\r\n\r\n            currentAction = key\r\n\r\n            mixer.stopAllAction()\r\n            actions[key].play()\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/** WALKING ***************************************************/\r\n\r\n\r\nconst startRotate = mesh => {\r\n    const angleRot = (ran() * Math.PI * 1.5 + 1.3) * ran() < 0.5 ? 1 : -1\r\n    const numRotations = 40\r\n    const speed = angleRot / numRotations\r\n\r\n    let countRotation = 0\r\n\r\n    return () => {\r\n        mesh.rotation.y += speed\r\n        return ++countRotation < numRotations\r\n    }\r\n}\r\n\r\n\r\n\r\nconst startGo = (mesh, dist)  => {\r\n    const speed = 0.15\r\n    const numsMove = dist\r\n        ? Math.min(dist / speed, ran() * 800 + 300)\r\n        : null\r\n\r\n    let countMove = 0\r\n\r\n    return () => {\r\n        if (!dist) {\r\n            return false;\r\n        }\r\n        mesh.translateZ(speed)\r\n        return ++countMove < numsMove\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst createFreeWalk = (mesh, meshFrontObj, wallOffset, emitter) => {\r\n    let isUpdate = false\r\n    const collisions = createCollisionWithItems()\r\n\r\n    const actions = {\r\n        'rotate': startRotate,\r\n        'go': startGo,\r\n    }\r\n\r\n    let state = 'rotate' // || 'go'\r\n    let currentAction = null\r\n\r\n\r\n    const toggleAction = key => {\r\n        if (!key) {\r\n            state === 'rotate' && (key = 'go')\r\n            state === 'go' && (key = 'rotate')\r\n        }\r\n\r\n        state = key\r\n        const d = collisions.checkCollisions(mesh, meshFrontObj)\r\n        currentAction = actions[key](mesh, Math.max(d - 20, 0))\r\n    }\r\n\r\n\r\n    toggleAction(state)\r\n\r\n\r\n    emitter.subscribe('frameUpdate')(() => {\r\n        if (!isUpdate) {\r\n            return;\r\n        }\r\n        !currentAction() && toggleAction()\r\n    })\r\n\r\n\r\n    return {\r\n        start: () => {\r\n            toggleAction('rotate')\r\n            isUpdate = true\r\n        },\r\n        stop: () => isUpdate = false,\r\n        setItemToCollision: collisions.setItemToCollision,\r\n        removeItemFromCollision: collisions.removeItemFromCollision,\r\n        clearCollisions: collisions.clearCollisions,\r\n    }\r\n}\r\n\r\n\r\n\r\n/** COLLISIONS *************************************************/\r\n\r\nconst createCollisionWithItems = () => {\r\n        let arrMeshes = []\r\n\r\n        const vecStart = new THREE.Vector3()\r\n        const vecDir = new THREE.Vector3()\r\n        const rayCaster = new THREE.Raycaster(vecStart, vecDir)\r\n\r\n\r\n    return {\r\n        setItemToCollision (mesh) {\r\n            arrMeshes.push(mesh)\r\n        },\r\n        removeItemFromCollision (mesh) {\r\n            arrMeshes = arrMeshes.filter(item => item !== mesh)\r\n        },\r\n        clearCollisions () {\r\n            arrMeshes = []\r\n        },\r\n        checkCollisions (objFrom, objTo) {\r\n            objFrom.getWorldPosition(vecStart)\r\n            objTo.getWorldPosition(vecDir)\r\n\r\n            vecDir.sub(vecStart)\r\n\r\n            const intersects = rayCaster.intersectObjects(arrMeshes, true)\r\n\r\n            if (intersects[0]) {\r\n                return intersects[0].distance\r\n            }\r\n\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/botWalk.4572b94b.gltf\";","export default __webpack_public_path__ + \"static/media/skin.400fd57d.jpg\";","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'What is this place?': \"Что это за место?\",\r\n        \"It's The Great Way to the surface.\": \"Это великий путь наверх.\",\r\n        'Who are you?': \"Кто ты?\",\r\n        'I help The Creator.': \"Я помогаю создателю.\",\r\n        'What are you doing?': \"Что ты делаешь?\",\r\n        \"Don't distract me, I have to dig the tunnel.\": \"Не отвлекай, мне надо копать туннель.\",\r\n        \"Such enormous dungeons...\": \"Такие большие подземелья...\",\r\n        \"The Creator gave the order to dig.\": \"Создатель приказал копать. \",\r\n        \"How long have you been digging?\": \"Как долго вы копали? \",\r\n        \"Time does not matter, the goal is what's important.\": \"Время не имеет значения, важна цель. \",\r\n        \"What do you do here?\": \"Что ты делаешь?\",\r\n        \"Long ago, the Creator fell under the ground. He created us and gave us an assignment to dig.\":\"Давным-давно Творец провалился под землю. Он создал нас и дал задание копать. \",\r\n        \"But you already dug the way out...\": \"Но вы уже прорыли выход ...\",\r\n        \"When we dug a tunnel, The Creator went through it.\": \"Когда мы прорыли путь, творец прошел по нему.\",\r\n        \"And...\": \"И...\",\r\n        'We are made to dig. And we keep on doing it. We believe that he will return to us.': \"Мы созданы для того, чтобы копать. И мы продолжаем это делать. Мы верим, что он вернется к нам. \",\r\n\r\n\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'To be continued': 'Продолжение следует',\r\n        'chapter': 'глава',\r\n        'open': 'пуск',\r\n        'Author: ': 'Автор: ',\r\n        'link': 'ссылка',\r\n    }\r\n}\r\n\r\n","import { connect } from 'react-redux'\r\n//import { toggleDialog } from '../store/actions'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\nimport * as CORE from \"../../../_CORE\";\r\n\r\nconst t = CORE.createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"replicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        props.dispatch({\r\n                            type: 'CLICK_PHRASE',\r\n                            phrase: item,\r\n                        })\r\n                        setTimeout(() => {\r\n                            props.dispatch({\r\n                                type: 'PHRASE_EVENT',\r\n                                phrase: item,\r\n                            })\r\n                \r\n                            //r.levelEvent && emitter && emitter.emit('changeLevelMode')(r.levelEvent)\r\n                        }, 1000)\r\n                        //toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {t(item.q)}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { connect } from 'react-redux'\r\nimport { TRANSLATE_WORLDS} from \"../constants/constants_replicies\";\r\nimport { createTranslater } from \"../../../_CORE\";\r\n\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"messages\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{t(item.q)}</div>\r\n                    <div className=\"a\">{t(item.a)}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import './CustomReactComponent.css'\r\nimport { createTranslater } from '../../../_CORE/helpers/helper_translate'\r\nimport { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst t = createTranslater(TRANSLATE_WORLDS)\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        isButtonDialog: state.ui.isButtonDialog,\r\n        isShowFinalMessage: state.ui.isShowFinalMessage,\r\n        isShowPalleteDialog: state.ui.isShowPalleteDialog\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nfunction CustomReactComponent(props) {\r\n\r\n    return (\r\n        <>\r\n            {(!props.isShowFinalMessage && props.isButtonDialog || props.isShowPalleteDialog) && (\r\n                <div className=\"dialog-wrapper\">\r\n                    <div className=\"dialog-content\">\r\n\r\n                        {props.isShowPalleteDialog && <div className='messages-wrapper'>\r\n                            <BotAnswers />\r\n                            <UserReplicies />\r\n                        </div>}\r\n\r\n                        {props.isButtonDialog && <button\r\n                            className=\"dialog-button-toggle\"\r\n                            onClick={() => props.dispatch({ type: 'TOGGLE_DIALOG', isShowPalleteDialog: !props.isShowPalleteDialog })}>\r\n                            {props.isShowPalleteDialog ? t('close dialog') : t('open dialog') }\r\n                        </button>}\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className='final-mess'>\r\n                        <button\r\n                            onClick={() => {\r\n                                window.location.replace('./../chapter05')\r\n                            }}>\r\n                            {t('Continue')}\r\n                        </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomReactComponent);\r\n","import { START_ENV_CONFIG_4 } from '../constants/constants_elements'\r\n\r\n\r\n/*\r\n'What is this place?': \"Что это за место?\",\r\n\"It's The Great Way to the surface.\": \"Это великий путь наверх.\",\r\n'Who are you?': \"Кто ты?\",\r\n'I help The Creator.': \"Я помогаю создателю.\",\r\n'What are you doing?': \"Что ты делаешь?\",\r\n\"Don't distract me, I have to dig the tunnel.\": \"Не отвлекай, мне надо копать туннель.\",\r\n\"Such enormous dungeons...\": \"Такие большие подземелья...\",\r\n\"The Creator gave the order to dig.\": \"Создатель приказал копать. \",\r\n\"How long have you been digging?\": \"Как долго вы копали? \",\r\n\"Time does not matter, the goal is what's important.\": \"Время не имеет значения, важна цель. \",\r\n\"What do you do here?\": \"Что ты делаешь?\",\r\n\"Long ago, the Creator fell under the ground. He created us and gave us an assignment to dig.\":\"Давным-давно Творец провалился под землю. Он создал нас и дал задание копать. \",\r\n\"But you already dug the way out...\": \"Но вы уже прорыли выход ...\",\r\n\"When we dug a tunnel, The Creator went through it.\": \"Когда мы прорыли путь, творец прошел по нему.\",\r\n\"And...\": \"И...\",\r\n'We are made to dig. And we keep on doing it. We believe that he will return to us.': \"Мы созданы для того, чтобы копать. И мы продолжаем это делать. Мы верим, что он вернется к нам. \",\r\n\r\n\r\n */\r\n\r\nconst DIALOGS_DATA = {\r\n    '4': [\r\n        {\r\n            q: 'What is this place?',\r\n            a: \"It's The Great Way to the surface.\",\r\n            event: 'nextReply',\r\n        }, {\r\n            q: 'Who are you?',\r\n            a: 'I help The Creator.',\r\n            event: 'nextReply',\r\n        }, {\r\n            q: 'What are you doing?',\r\n            a: \"Don't distract me, I have to dig the tunnel.\",\r\n            event: 'close',\r\n        },\r\n    ],\r\n    '13': [\r\n        {\r\n            q: 'Such enormous dungeons...',\r\n            a: 'The Creator gave the order to dig.',\r\n            event: 'nextReply',\r\n        }, {\r\n            q: 'How long have you been digging?',\r\n            a: 'Time does not matter, the goal is what\\'s important.',\r\n            event: 'close',\r\n        },\r\n    ],\r\n    '20': [\r\n        {\r\n            q: 'What do you do here?',\r\n            a: 'Long ago, the Creator fell under the ground. He created us and gave us an assignment to dig.',\r\n            event: 'nextReply',\r\n        },\r\n        {\r\n            q: \"But you already dug the way out...\",\r\n            a: 'When we dug a tunnel, The Creator went through it.',\r\n            event: 'nextReply',\r\n        },\r\n        {\r\n            q: \"And...\",\r\n            a: 'We are made to dig. And we keep on doing it. We believe that he will return to us.',\r\n            event: 'close',\r\n        },\r\n    ],\r\n}\r\n\r\n\r\n\r\nexport const uiState = {\r\n    botAnswers: [],\r\n    userReplicies: [],\r\n    isShowControls: true,\r\n    isButtonDialog: false,\r\n    isShowPalleteDialog: false,\r\n    isShowFinalMessage: false,\r\n\r\n    currentBot: null,\r\n    phraseIndex: 0,\r\n    isDialogComplete: false,\r\n    phrasesData: DIALOGS_DATA,\r\n}\r\n\r\n\r\nexport const createCustomStore = root => {\r\n    const ui = (state = uiState, action) => {\r\n\r\n        if (action.type === 'CLICK_PHRASE') {\r\n            return ({\r\n                ...state,\r\n                botAnswers: [\r\n                    ...state.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            })\r\n        }\r\n\r\n\r\n        if (action.type === 'PHRASE_EVENT') {\r\n            const { event, levelEvent } = action.phrase\r\n\r\n            if (event === 'nextReply') {\r\n                const userReplicies = [state.phrasesData[state.currentBot][state.phraseIndex + 1]]\r\n\r\n                return ({\r\n                    ...state,\r\n                    phraseIndex: state.phraseIndex + 1,\r\n                    userReplicies,\r\n                })\r\n\r\n            }\r\n\r\n            if (event === 'close') {\r\n\r\n                if (state.currentBot === 20) {\r\n                    setTimeout(() => {\r\n                        root.dispatcher.dispatch({ type: 'TOGGLE_BUTTON', isButtonDialog: false })\r\n                        root.dispatcher.dispatch({ type: 'TOGGLE_DIALOG', isShowPalleteDialog: false })\r\n                        root.studio.changeEnvironment(START_ENV_CONFIG_4, { updateAmb: false, time: 1500 }) \r\n                        root.player.toggleBlocked(true)\r\n                        setTimeout(() => {\r\n                            root.dispatcher.dispatch({ type: 'SHOW_FINAL_MESSAGE' })\r\n                        }, 3000)\r\n                    }, 20000)\r\n                    \r\n                }\r\n\r\n                return ({\r\n                    ...state,\r\n                    userReplicies: [],\r\n                    isDialogComplete: true,\r\n                    isButtonDialog: true,\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (action.type === 'TOGGLE_DIALOG') {\r\n            let userReplicies = []\r\n\r\n            root.player.toggleBlocked(action.isShowPalleteDialog)\r\n\r\n            if (action.isShowPalleteDialog) {\r\n                userReplicies = state.isDialogComplete ? [] : [state.phrasesData[state.currentBot][state.phraseIndex]]\r\n            }\r\n\r\n            return ({\r\n                ...state,\r\n                isShowPalleteDialog: action.isShowPalleteDialog,\r\n                userReplicies,\r\n            })\r\n        }\r\n\r\n\r\n        if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n            let botAnswers = state.botAnswers\r\n            let phraseIndex = state.phraseIndex\r\n            let isDialogComplete = state.isDialogComplete\r\n            if (action.currentBot && action.currentBot !== state.currentBot) {\r\n                botAnswers = []\r\n                phraseIndex = 0\r\n                isDialogComplete = false\r\n            }\r\n\r\n            return ({\r\n                ...state,\r\n                phraseIndex,\r\n                currentBot: action.currentBot || state.currentBot,\r\n                isButtonDialog: action.isButtonDialog,\r\n                isDialogComplete,\r\n                botAnswers,\r\n            })\r\n        }\r\n\r\n\r\n        if (action.type === 'SHOW_FINAL_MESSAGE') {\r\n            return ({\r\n                ...state,\r\n                isShowFinalMessage: true,\r\n            })\r\n        }\r\n\r\n\r\n        return state\r\n    }\r\n\r\n    return { ui }\r\n}\r\n\r\n\r\n\r\n","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { UI } from '../../../_CORE/ui/UI'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer_v02'\r\n\r\n\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../../../assets/chapter04/level02.obj'\r\nimport mapFloorOuter from '../../../assets/chapter04/floor_outer_map3.jpg'\r\nimport mapFloorOuter2 from '../../../assets/chapter04/floor_outer_map2.jpg'\r\nimport mapTop from '../../../assets/floor_outer_map.jpg'\r\nimport pxjpg from '../../../assets/sky3/px.jpg'\r\nimport nxjpg from '../../../assets/sky3/nx.jpg'\r\nimport pyjpg from '../../../assets/sky3/py.jpg'\r\nimport nyjpg from '../../../assets/sky3/ny.jpg'\r\nimport pzjpg from '../../../assets/sky3/pz.jpg'\r\nimport nzjpg from '../../../assets/sky3/nz.jpg'\r\n\r\nimport px2jpg from '../../../assets/sky2/px.jpg'\r\nimport nx2jpg from '../../../assets/sky2/nx.jpg'\r\nimport py2jpg from '../../../assets/sky2/py.jpg'\r\nimport ny2jpg from '../../../assets/sky2/ny.jpg'\r\nimport pz2jpg from '../../../assets/sky2/pz.jpg'\r\nimport nz2jpg from '../../../assets/sky2/nz.jpg'\r\n\r\n\r\nimport { system_PlayerMoveOnLevel } from '../systems/system_PlayerMoveOnLevel' \r\n\r\n\r\nimport { system_Monsters } from '../systems/system_Monsters'\r\nimport botSrc from '../../../assets/chapter04/botWalk.gltf'\r\nimport monsterSkinSrc from '../../../assets/chapter04/skin.jpg'\r\n\r\nimport { system_PrepareDialogs } from '../systems/system_PrepareDialogs'\r\nimport { StarterPlay } from '../actions/StarterPlay'\r\nimport { Ui } from \"../ui/Ui\";\r\n\r\nimport { system_Sound } from '../systems/system_Sound'\r\nimport soundAmbientSrc from '../../../assets/sound/ambient.mp3'\r\n\r\n\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    // {\r\n    //     key: 'ui',\r\n    //     constr: UI,\r\n    //     initStateKey: 'pageLoaded',\r\n    // },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: Helper_TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: Helper_MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'cubeTextures', path: [ px2jpg, nx2jpg, py2jpg, ny2jpg, pz2jpg, nz2jpg, ], key: 'skyBox2' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n            { type: 'img', path: mapFloorOuter2, key: 'mapFloorOuter2', wrap: true },\r\n            { type: 'img', path: mapTop, key: 'mapTop', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'system_PlayerMoveOnLevel',\r\n        constr: system_PlayerMoveOnLevel,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'system_Monsters',\r\n        constr: system_Monsters,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'glb', path: botSrc, key: 'bot' },\r\n            { type: 'img', path: monsterSkinSrc, key: 'skin', wrap: true },\r\n        ]\r\n    },\r\n    {\r\n        key: 'system_PrepareDialogs',\r\n        constr: system_PrepareDialogs,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'system_Sound',\r\n        constr: system_Sound,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'soundMp3', path: soundAmbientSrc, key: 'soundAmbient' },\r\n        ]\r\n    },\r\n    {\r\n        key: 'customUi',\r\n        constr: Ui,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'starterPlay',\r\n        constr: StarterPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport class system_PrepareDialogs {\r\n    constructor (root) {\r\n\r\n        const {\r\n            emitter,\r\n            player,\r\n            system_Monsters,\r\n            dispatcher,\r\n        } = root\r\n\r\n        const bot = system_Monsters.getBot()\r\n\r\n        let isBlocked = {\r\n            'forward': false,\r\n            'back': false,\r\n        }\r\n\r\n        const vecFront = new THREE.Vector3()\r\n\r\n\r\n        let isButtonDialog = false\r\n\r\n\r\n        emitter.subscribe('playerMove')(dir => {\r\n            player.frontObj.getWorldPosition(vecFront)\r\n\r\n            if (vecFront.distanceTo(bot.position) > 50) {\r\n                if (isButtonDialog) {\r\n                    isButtonDialog = false\r\n                    dispatcher.dispatch({ type: 'TOGGLE_BUTTON', isButtonDialog: false })\r\n                    system_Monsters.stopDialog()\r\n                }\r\n                return;\r\n            } else {\r\n                if (!isButtonDialog) {\r\n                    isButtonDialog = true\r\n                    dispatcher.dispatch({ type: 'TOGGLE_BUTTON', isButtonDialog: true, currentBot: system_Monsters.getCurrentArea() })\r\n                    system_Monsters.startDialog(player.mesh.position)\r\n                }\r\n            }\r\n\r\n            if (dir === 'forward') {\r\n\r\n                if (vecFront.distanceTo(bot.position) < 20 && !isBlocked[dir]) {\r\n                    isBlocked[dir] = true\r\n                    player.toggleCanMove(dir, false)\r\n                    system_Monsters.startDialog(player.mesh.position)\r\n                }\r\n            }\r\n\r\n            if (isBlocked['forward']) {\r\n                isBlocked['back'] = false\r\n                player.toggleCanMove('back', true)\r\n            }\r\n        })\r\n\r\n        emitter.subscribe('frameUpdate')(() => {\r\n            if (player.mesh.position.distanceTo(bot.position) > 30 && (isBlocked['forward'] || isBlocked['back'])) {\r\n                isBlocked['forward'] = false\r\n                isBlocked['back'] = false\r\n                player.toggleCanMove('forward', true)\r\n                player.toggleCanMove('back', true)\r\n                system_Monsters.stopDialog()\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class system_Sound {\r\n    constructor (root) {\r\n        const listener = new THREE.AudioListener()\r\n        const cam = root.player.getCamera()\r\n        cam.add(listener)\r\n\r\n        this._sound = new THREE.Audio(listener)\r\n        this._sound.setBuffer(root.assets.soundAmbient)\r\n        this._sound.setLoop(true)\r\n        this._sound.setVolume(0.35)\r\n\r\n        root.emitter.subscribe('toggleSound')(isMute => {\r\n            isMute  \r\n                ? this._sound.stop()\r\n                : this._sound.play()\r\n        }) \r\n    }\r\n\r\n    playAmbient () {\r\n        this._sound.play()\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ambient.79ed108c.mp3\";","import { UI } from '../../../_CORE/ui/UI'\r\nimport CustomReactComponent from \"./CustomReactComponent\";\r\nimport { createCustomStore  } from \"./store\";\r\n\r\nexport class Ui {\r\n    constructor(root) {\r\n        root.appWrapper = document.querySelector('.app-wrapper')\r\n        root.CustomReactComponent = CustomReactComponent\r\n        root.customStore = createCustomStore(root)\r\n\r\n        const ui = new UI(root)\r\n        root.ui = ui\r\n    }\r\n}","import { \r\n    START_ENV_CONFIG,\r\n    START_ENV_CONFIG_2,\r\n    START_ENV_CONFIG_3,\r\n} from '../constants/constants_elements';\r\n\r\n\r\nexport class StarterPlay {\r\n    constructor (gameContext) {\r\n        const { \r\n            player, \r\n            ui, \r\n            studio, \r\n            dispatcher,\r\n            system_Monsters,\r\n            system_Sound,\r\n        } = gameContext\r\n        \r\n        dispatcher.dispatch({ \r\n            type: 'CHANGE_INFO_CHAPTER', \r\n            currentChapterIndex: 3,\r\n        })\r\n\r\n        dispatcher.dispatch({ \r\n            type: 'ENABLE_CONTROL_SOUND',\r\n        })\r\n\r\n        system_Monsters.setBotTo(0)\r\n\r\n        const isPROD = true\r\n\r\n        ui.showStartButton(() => {\r\n            system_Sound.playAmbient()\r\n            if (isPROD) {\r\n                studio.changeEnvironment(START_ENV_CONFIG, { updateAmb: false, time: 1500 })\r\n\r\n                setTimeout(() => {\r\n                    studio.changeEnvironment(START_ENV_CONFIG_2, { updateAmb: false, time: 1500 }) \r\n                    \r\n                    setTimeout(() => {\r\n                        system_Monsters.setBotTo(4)\r\n                        studio.changeEnvironment(START_ENV_CONFIG_3, { updateAmb: false, time: 1500 }) \r\n                        player.toggleBlocked(false)\r\n                    }, 1500)\r\n                }, 4000)\r\n            } else {\r\n                system_Monsters.setBotTo(4)\r\n                studio.changeEnvironment(START_ENV_CONFIG_3, { updateAmb: false, time: 1500 }) \r\n                player.toggleBlocked(false)\r\n            }\r\n        })\r\n    }\r\n}","// import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\n// import * as CONSTANTS from './constants/constants_elements'\r\n// import { TRANSLATE_WORLDS } from \"./constants/constants_replicies\";\r\n\r\n// // ********** CHAPTER03 ****************\r\n\r\n// import { GAME_MODULES } from \"./constants/constants_modules\"\r\n// window.addEventListener('load', () => pipeLineForInit(GAME_MODULES, { ...CONSTANTS, TRANSLATE_WORLDS }))\r\n\r\nimport { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\n\r\n\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, CONSTANTS ))\r\n"],"sourceRoot":""}