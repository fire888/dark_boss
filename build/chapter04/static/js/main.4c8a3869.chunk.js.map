{"version":3,"sources":["_CORE/pipeLines/initPipeLine.js","_CORE/helpers/helper_translate.js","chapter04/src/constants/constants_elements.js","_CORE/helpers/helper_LoadAssets.js","_CORE/helpers/helper_Emitter.js","_CORE/ui/containersReact/Info.js","_CORE/constants/default_voc.js","_CORE/ui/containersReact/PlayerControls.js","_CORE/ui/containersReact/App.js","_CORE/ui/store/defaultUiData.js","_CORE/ui/UI.js","_CORE/ui/store/createStore.js","_CORE/shaders/saturate.js","_CORE/entities/createStudio.js","_CORE/helpers/helper_KeyBoard.js","_CORE/entities/createPlayer_v02.js","_CORE/helpers/helper_MaterialsLib.js","chapter04/src/systems/system_level.js","assets/chapter04/level02.obj","assets/chapter04/floor_outer_map3.jpg","assets/chapter04/floor_outer_map2.jpg","assets/floor_outer_map.jpg","assets/sky3/px.jpg","assets/sky3/nx.jpg","assets/sky3/py.jpg","assets/sky3/ny.jpg","assets/sky3/pz.jpg","assets/sky3/nz.jpg","assets/sky2/px.jpg","assets/sky2/nx.jpg","assets/sky2/py.jpg","assets/sky2/ny.jpg","assets/sky2/pz.jpg","assets/sky2/nz.jpg","_CORE/helpers/helper_CollisionsItems_v02.js","chapter04/src/systems/system_PlayerMoveOnLevel.js","chapter04/src/constants/constants_modules.js","_CORE/helpers/helper_DeviceResizer.js","_CORE/helpers/helper_FrameUpater.js","_CORE/helpers/helper_TweenUpdater.js","chapter04/src/systems/system_Monsters.js","assets/chapter04/monster.obj","assets/chapter04/skin.jpg","chapter04/src/actions/StarterPlay.js","chapter04/src/index.js"],"names":["gameModules","CONSTANTS","a","initModulesByState","root","loaderAssets","dataToLoad","getAssetsFromModulesData","loadAssets","assets","vocab","state","modulesData","i","length","key","constr","initStateKey","arr","assetsToLoad","j","push","MATERIALS_CONFIG","mat","props","color","emissive","map","bumpMap","bumpScale","envMap","reflectivity","shininess","specular","skinning","START_ENV_CONFIG","fogNear","fogFar","backgroundImgKey","studioConfig","canId","rendererCon","antialias","amb","strength","sceneEnvironment","composerAddPass","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","backObjPos","lightDataOne","createLoaders","objLoader","textureLoader","gltfLoader","cubeTextureLoader","path","type","Promise","resolve","OBJLoader","GLTFLoader","THREE","getterLoader","load","LoaderAssets","this","resources","_load","data","iterate","index","EventEmitter","_storage","id","getOrCreateArrFromObj","forEach","action","callback","filter","item","s","console","log","obj","lang","t","word","connect","controls","infoPanelData","className","onClick","dispatch","title","topText","chapters","href","target","text","currentChapterIndex","bottomText","afterWords","aText","isInfo","isShowControls","useState","isShowFullScreenButt","changeShowFullScreenButt","useEffect","gameContext","emitter","subscribe","val","onMouseDown","emit","onTouchStart","onMouseUp","onTouchEnd","dispatcher","CustomReactComponent","startDefaultStoreData","loader","document","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","UI","_root","store","customStore","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","prepareStore","ReactDOM","render","getElementById","startButtons","progressWrapper","hideStartScreen","e","l","dataset","display","addEventListener","Saturate","uniforms","value","vertexShader","fragmentShader","Studio","clearColor","canvas","_renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","_scene","background","fog","_lightA","add","_playerCamera","_controlsCamera","position","set","OrbitControls","domElement","update","_composer","EffectComposer","_renderPass","RenderPass","addPass","ShaderPass","vec3","isPlayerView","camera","getWorldPosition","x","y","z","resize","size","width","height","aspect","updateProjectionMatrix","addToScene","bind","removeFromScene","remove","_backgroundImgKey","cam","conf","_changeFog","_changeBackground","startData","endData","TWEEN","to","onUpdate","updateAmb","start","KeyBoard","keys","keysEnabled","keyUpdate","keyCode","isDown","event","is","Player","studio","_camera","_isBlocked","mesh","rotation","fromArray","userData","bottomObj","frontObj","backObj","strenth","light","setCamera","_isCanMove","createMaterials","wrapS","wrapT","mapsKeys","materials","keyMap","createLevelMeshes","allMeshes","areas","traverse","child","name","includes","geometry","groundTop","wall","road","strArr","split","area","helper_CollisionsItems_v02","_arrMeshes","_vecStart","_vecDir","_rayCaster","objFrom","objTo","dist","sub","intersects","intersectObjects","distance","helper_rotate","quat1","quat2","n","quaternion","slerpQuaternions","changerAreaLevel","collisionsWalls","changeViewLevel","ind","changeCollisionLevel","removeItemFromCollision","setItemToCollision","GAME_MODULES","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fontSize","Math","max","min","fullscreenElement","emitFrameUpdate","time","delta","count","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","levelRoomsSrc","pxjpg","nxjpg","pyjpg","nyjpg","pzjpg","nzjpg","px2jpg","nx2jpg","py2jpg","ny2jpg","pz2jpg","nz2jpg","mapFloorOuter","wrap","mapFloorOuter2","mapTop","player","currentArea","updateLevel","isBlocked","toggleBlocked","isButtonsDisabled","quaternionOld","quaternionNew","UP_VECTOR","rotatePlayerToTop","copy","setFromAxisAngle","random","PI","then","up","checkAndMoveFront","checkCollisions","isCollision","collision","object","la","addVectors","face","normal","lookAt","rotateX","setRotationFromQuaternion","rotatePlayerToCollisionTarget","translateZ","rotateY","equals","translateY","checkBottomAndDropDownPlayer","checkAndMoveBack","isOpen","ui","showStartButton","changeEnvironment","pipeLineForInit"],"mappings":"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","file":"static/js/main.4c8a3869.chunk.js","sourcesContent":["export async function pipeLineForInit (gameModules, CONSTANTS) {\r\n    const root = { CONSTANTS }\r\n\r\n    initModulesByState('pageLoaded', gameModules, root)\r\n\r\n    const { loaderAssets } = root\r\n\r\n    const dataToLoad = getAssetsFromModulesData(gameModules)\r\n    root.assets = await loaderAssets.loadAssets(dataToLoad)\r\n\r\n    initModulesByState('beforeStartPlay', gameModules, root)\r\n}\r\n\r\n\r\nconst initModulesByState = (state, modulesData, root) => {\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        const {  key, constr, initStateKey } = modulesData[i]\r\n        initStateKey === state && (root[key] = new constr(root))\r\n    }\r\n}\r\n\r\nconst getAssetsFromModulesData = modulesData => {\r\n    const arr = []\r\n    for (let i = 0; i < modulesData.length; ++i) {\r\n        if (modulesData[i].assetsToLoad && modulesData[i].assetsToLoad.length) {\r\n            for (let j = 0; j < modulesData[i].assetsToLoad.length; ++j) {\r\n                arr.push(modulesData[i].assetsToLoad[j])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}","let lang = 'en'\r\nexport const changeLang = l => lang = l \r\nexport const createTranslater = vocab => word => (vocab[lang] && vocab[lang][word]) || word\r\n","\r\n\r\nexport const MATERIALS_CONFIG = {\r\n\r\n    // 'iron': {\r\n    //     mat: 'MeshPhongMaterial',\r\n    //     props: {\r\n    //         color: 0xffffff,\r\n    //         emissive: 0x003388,\r\n    //         specular: 0xffffff,\r\n    //         shininess: 60,\r\n    //         bumpMap: 'botMap',\r\n    //         bumpScale: 0.1,\r\n    //         envMap: 'ironEnv',\r\n    //         reflectivity: 0.5,\r\n    //         map: 'botMap',\r\n    //         skinning: true,\r\n    //     },\r\n    // },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x338877,\r\n            emissive: 0x9997777,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.3,\r\n            shininess: 60,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'groundTop': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xaa6666,\r\n            emissive: 0xaa6666,\r\n            map: 'mapTop',\r\n            bumpMap: 'mapTop',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox2',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x666666,\r\n            map: 'mapFloorOuter2',\r\n            bumpMap: 'mapFloorOuter2',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.3,\r\n        },\r\n    },\r\n\r\n    'skin': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x2299bb,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'skin',\r\n            bumpScale: 0.1,\r\n            envMap: 'skyBox2',\r\n            reflectivity: 0.5,\r\n            map: 'skin',\r\n            skinning: true,\r\n        },        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const START_ENV_CONFIG = { fogNear: 20, fogFar: 500, color: 0x4a0a45, backgroundImgKey: 'skyBox2' }\r\n// sceneEnvironment: { fogNear: 20, fogFar: 500, color: 0x4a0a45, backgroundImgKey: 'skyBox2' },\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    amb: {\r\n        color: 0xa5ecc5,\r\n        strength: 0.8,\r\n    },\r\n    sceneEnvironment: { fogNear: -20, fogFar: 0, color: 0x4a0a45, backgroundImgKey: 'skyBox2' },\r\n    //sceneEnvironment: { fogNear: 20, fogFar: 500, color: 0x4a0a45, backgroundImgKey: 'skyBox2' },\r\n    composerAddPass: 'Saturate',\r\n}\r\n\r\n\r\n\r\n\r\nexport const playerConfig = {\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [0, 5, 0],\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    backObjPos: [0, 0, 1],\r\n    lightDataOne: {\r\n        color: 0x555555,\r\n        strength: 0,\r\n        pos: [0, 400, 5],\r\n    },\r\n}\r\n","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\n\r\nconst createLoaders = () => {\r\n    let objLoader = null,\r\n        textureLoader = null,\r\n        gltfLoader = null,\r\n        cubeTextureLoader = null\r\n\r\n    const getterLoader = type => {\r\n        if (type === 'obj')\r\n            return objLoader = (objLoader || new OBJLoader())\r\n        if (type === 'glb' || type === 'gltf')\r\n            return gltfLoader = (gltfLoader || new GLTFLoader())\r\n        if (type === 'img')\r\n            return textureLoader = (textureLoader || new THREE.TextureLoader())\r\n        if (type === 'cubeTextures') {\r\n            return cubeTextureLoader = (cubeTextureLoader || new THREE.CubeTextureLoader())\r\n        }\r\n\r\n    }\r\n\r\n    return (path, type) => new Promise(resolve => {\r\n        getterLoader(type).load(path, resolve)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport class LoaderAssets {\r\n\r\n    constructor () {\r\n        this.resources = {}\r\n        this._load = createLoaders()\r\n    }\r\n\r\n    loadAssets (data) {\r\n        return new Promise(resolve => {\r\n\r\n            const load = this._load\r\n            const resources = this.resources\r\n\r\n            async function iterate (index) {\r\n                if (data[index]) {\r\n                    const { key, path, type } = data[index]\r\n                    resources[key] = await load(path, type)\r\n                }\r\n\r\n                ++index\r\n                !data[index]\r\n                    ? resolve(resources)\r\n                    : await iterate(index)\r\n            }\r\n\r\n           void iterate(0)\r\n        })\r\n    }\r\n}\r\n","export class EventEmitter {\r\n    constructor() {\r\n        this._storage = {}\r\n    }\r\n\r\n    emit (id) {\r\n        return data => getOrCreateArrFromObj(this._storage)(id).forEach(action => action(data))\r\n    }\r\n\r\n    subscribe (id) {\r\n        return callback => {\r\n            getOrCreateArrFromObj(this._storage)(id).push(callback)\r\n            return () => this._storage[id] = this._storage[id].filter(item => item !== callback)\r\n        }\r\n    }\r\n\r\n    showAll () {\r\n        const s = {}\r\n        for (let key in this._storage) {\r\n            s[key] = this._storage[key].length\r\n        }\r\n        console.log(s)\r\n    }\r\n}\r\n\r\n\r\n\r\n// const createEmitter = () => {\r\n//     const storage = {}\r\n//     return {\r\n//         emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n//         subscribe: id => callback => {\r\n//             getOrCreateArrFromObj(storage)(id).push(callback)\r\n//             return () => storage[id] = storage[id].filter(item => item !== callback)\r\n//         },\r\n//         showAll () {\r\n//             const s = {}\r\n//             for (let key in storage) {\r\n//                 s[key] = storage[key].length\r\n//             }\r\n//             console.log(s)\r\n//         },\r\n//     }\r\n// }\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { connect } from \"react-redux\";\r\nimport '../stylesheets/Info.css'\r\nimport { createTranslater } from '../../helpers/helper_translate'\r\nimport { INFO_VOC } from '../../constants/default_voc'\r\n\r\n\r\nconst t = createTranslater(INFO_VOC)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.controls.infoPanelData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function(props) {\r\n    return ( \r\n        <div className=\"info\">\r\n            <button\r\n                className=\"control butt-infoClose\"\r\n                onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                x\r\n            </button>\r\n            <div className=\"info-inner\">\r\n                <p>{t(props.title)}</p>\r\n                <p>{t(props.topText)}</p>\r\n                <ul>{props.chapters.map((item, index) => \r\n                    <li key={index}>\r\n                        {index + 1}.&nbsp;\r\n                        {item.href \r\n                            ? <span><a href={item.href} target=\"blank\">{t(item.text)}</a></span>\r\n                            : <span>{t(item.text)}</span>}\r\n                        {index === props.currentChapterIndex && t(' (current)')}\r\n                    </li>)\r\n                }</ul>\r\n                <p>{props.bottomText}</p>\r\n                <ul>{props.afterWords.map((item, index) => \r\n                    <li key={index}>\r\n                        {t(item.text)} \r\n                        <a href={item.href} target=\"blank\">{t(item.aText)}</a>\r\n                    </li>)\r\n                }</ul>\r\n            </div>      \r\n        </div>)\r\n})\r\n\r\n","export const INFO_VOC = {\r\n    'ru': {\r\n        'Discovery of small android': 'Путешествия дроида',\r\n        'Factory': 'Фабрика',\r\n        'Brige': 'Мост',\r\n        'Cube': 'Куб',\r\n        'Endways': 'Напрямик',\r\n        'in production': 'скоро..',\r\n        ' (current)': ' (тут)',\r\n        'Author: ': 'от: ',\r\n        'Github: ': 'Гитхаб: '\r\n    }\r\n} ","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Info from './Info'\r\nimport '../stylesheets/PlayerControls.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n            isInfo: state.controls.isInfo,\r\n            isShowControls: state.controls.isShowControls, \r\n    })\r\n)(\r\n    function(props) {\r\n    const [isShowFullScreenButt, changeShowFullScreenButt] = useState(true)\r\n\r\n    useEffect(() =>\r\n        props.gameContext.emitter.subscribe('screenMode')(val => {\r\n            val === 'exitFullScreen' && changeShowFullScreenButt(true) })\r\n    )\r\n\r\n\r\n    return (\r\n        <div className='ui-controls'>\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-left control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-left')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-left')}\r\n            >\r\n                &#9668;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-right control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-right')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-right')}\r\n            >\r\n                &#9658;\r\n            </button>}\r\n\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-front control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-front')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-front')}\r\n            >\r\n                &#9650;\r\n            </button>}\r\n\r\n            {props.isShowControls && <button\r\n                className=\"butt-back control\"\r\n                onMouseDown={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onTouchStart={() => props.gameContext.emitter.emit('mouseDown')('butt-back')}\r\n                onMouseUp={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n                onTouchEnd={() => props.gameContext.emitter.emit('mouseUp')('butt-back')}\r\n            >\r\n                &#x25BC;\r\n            </button>}\r\n\r\n\r\n\r\n            {props.isShowControls && isShowFullScreenButt && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        props.gameContext.emitter.emit('mouseDown')('butt-fullscreen')\r\n                        changeShowFullScreenButt(false)\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n            {!props.isInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => props.dispatch({ type: 'TOGGLE_INFO' })}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n            {props.isInfo && <Info />}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import { connect } from 'react-redux'\r\nimport PlayerControls from './PlayerControls'\r\n\r\nconst mapStateToProps = state => ({ \r\n    isShowControls: state.controls.isShowControls,\r\n    isInfo: state.controls.isInfo,\r\n})\r\n\r\nfunction App(props) {\r\n    !dispatcher.dispatch && (dispatcher.dispatch = props.dispatch)\r\n    return (\r\n        <div className=\"ui\">\r\n            {!props.isInfo && props.gameContext.CustomReactComponent && <props.gameContext.CustomReactComponent gameContext={props.gameContext}/>}\r\n            {<PlayerControls gameContext={props.gameContext} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const dispatcher = { dispatch: null }\r\nexport default connect(mapStateToProps)(App);\r\n","export const startDefaultStoreData = {\r\n    isShowControls: true,\r\n    isInfo: false,\r\n    infoPanelData: {\r\n        title: 'Discovery of small android',\r\n        topText: '',\r\n        chapters: [\r\n            { text: 'Factory', href: 'http://js.otrisovano.ru/factory/' },\r\n            { text: 'Brige', href: 'http://js.otrisovano.ru/bridge/' },\r\n            { text: 'Cube', href: 'http://js.otrisovano.ru/levels/' },\r\n            { text: 'Endways', href: 'http://js.otrisovano.ru/endways/' },\r\n            { text: 'in production' },\r\n        ],\r\n        currentChapterIndex: null,\r\n        bottomText: '',\r\n        afterWords: [\r\n            { text: 'Author: ',  aText: 'www.otrisovano.ru', href: 'http://otrisovano.ru' },\r\n            { text: 'Github: ',  aText: 'https://github.com/fire888/dark_boss', href: 'https://github.com/fire888/dark_boss' },\r\n        ],\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport App, { dispatcher } from './containersReact/App';\r\nimport { prepareStore } from './store/createStore'\r\nimport { changeLang } from \"../helpers/helper_translate\";\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n    if (!isAnimateLoader) return;\r\n\r\n    setTimeout(() => {\r\n        offsetLoader ++;\r\n        offsetLoader === 0 && (offsetLoader -= 100)\r\n        loader.style.marginLeft = offsetLoader + '%'\r\n        loaderTimeOut()\r\n    }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport class UI {\r\n    constructor(root) {\r\n        root.dispatcher = dispatcher\r\n        this._root = root\r\n        const store = prepareStore(root)\r\n\r\n\r\n        store && ReactDOM.render(\r\n            <Provider store={store}>\r\n                <App gameContext={root}/>\r\n            </Provider>,\r\n            document.getElementById('root')\r\n        )\r\n    }\r\n\r\n    showStartButton(onClick) {\r\n        const startButtons = document.querySelector('.startbuttons-wrapper')\r\n        const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n        const hideStartScreen = e => {\r\n            e.target.dataset && e.target.dataset.lang && changeLang(e.target.dataset.lang)\r\n            document.querySelector('.start-screen').style.display = 'none'\r\n        }\r\n\r\n        isAnimateLoader = false\r\n        startButtons.style.display = 'flex'\r\n        startButtons.addEventListener('click', e => {\r\n            onClick()\r\n            hideStartScreen(e)\r\n        })\r\n        progressWrapper.style.display = 'none'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { startDefaultStoreData } from './defaultUiData'\r\n\r\nexport function prepareStore(root) {\r\n    if (!root.customStore) root.customStore = {}\r\n\r\n    const controls = function(state = startDefaultStoreData, action) {\r\n        if (action.type === 'TOGGLE_INFO') {\r\n            return ({\r\n                ...state,\r\n                isShowControls: !!state.isInfo,\r\n                isInfo: !state.isInfo,\r\n            })\r\n        }\r\n        if (action.type === 'CHANGE_INFO_CHAPTER') {\r\n            return ({\r\n                ...state,\r\n                infoPanelData: {\r\n                    ...state.infoPanelData,\r\n                    currentChapterIndex: action.currentChapterIndex,\r\n                }\r\n            })\r\n        }\r\n        return ({ ...state })\r\n    }\r\n    \r\n    const rootReducer = combineReducers({ controls, ...root.customStore })\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n}  \r\n","export const Saturate = {\r\nuniforms: {\r\n\"tDiffuse\": { value: null },\r\n},\r\n\r\n\r\nvertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n\r\n\r\nfragmentShader: `\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vec4 texel = texture2D( tDiffuse, vUv );\r\n  gl_FragColor = (texel * texel * texel) * vec4(3.);\r\n}`,\r\n}\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\n\r\n\r\nexport class Studio {\r\n    constructor(root) {\r\n        this._root = root\r\n        const { assets, emitter, } = root\r\n        const { canId, rendererCon, clearColor, amb } = root.CONSTANTS.studioConfig\r\n\r\n        rendererCon.canvas = document.getElementById(canId)\r\n\r\n        this._renderer = new THREE.WebGLRenderer(rendererCon)\r\n        this._renderer.setClearColor(clearColor)\r\n        this._renderer.setPixelRatio(window.devicePixelRatio)\r\n        this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n        this._scene = new THREE.Scene()\r\n\r\n        {\r\n            const { color, fogNear, fogFar, backgroundImgKey } = root.CONSTANTS.studioConfig.sceneEnvironment\r\n\r\n\r\n            this._scene.background = assets[backgroundImgKey] || null\r\n            this._scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n        }\r\n\r\n\r\n        this._lightA = null\r\n        {\r\n            const { color, strength } = amb\r\n            this._lightA = new THREE.AmbientLight( color, strength )\r\n            this._scene.add( this._lightA )\r\n        }\r\n\r\n        this._playerCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n\r\n\r\n        this._controlsCamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 5000)\r\n        this._controlsCamera.position.set(0, 0, 20)\r\n        const controls = new OrbitControls(this._controlsCamera, this._renderer.domElement)\r\n        controls.target.set(0, 0, 0)\r\n        controls.update();\r\n\r\n\r\n        this._composer = new EffectComposer(this._renderer)\r\n        this._renderPass = new RenderPass(this._scene, this._controlsCamera)\r\n        this._composer.addPass(this._renderPass)\r\n        if (this._root.CONSTANTS.studioConfig.composerAddPass) {\r\n            if (this._root.CONSTANTS.studioConfig.composerAddPass === 'Saturate') {\r\n                this._composer.addPass(new ShaderPass(Saturate))\r\n            }  \r\n        } \r\n\r\n\r\n\r\n        /** toggle view camera to debug by orbitControls */\r\n        const vec3 = new THREE.Vector3()\r\n        let isPlayerView = true \r\n        emitter.subscribe('keyEvent')(data => {\r\n            if (!data['o']) {\r\n                return;\r\n            }\r\n\r\n            if (isPlayerView) {\r\n                isPlayerView = false\r\n                this._renderPass.camera = this._controlsCamera\r\n                this._playerCamera.getWorldPosition(vec3)\r\n                this._controlsCamera.position.x = vec3.x + 100\r\n                this._controlsCamera.position.y = vec3.y + 100\r\n                this._controlsCamera.position.z = vec3.z\r\n                controls.target.set(vec3.x, vec3.y, vec3.z)\r\n                controls.update()\r\n            } else {\r\n                isPlayerView = true \r\n                this._renderPass.camera = this._playerCamera\r\n            }\r\n        })\r\n    \r\n        \r\n\r\n        const resize = () => {\r\n            const size = { width: window.innerWidth, height: window.innerHeight }\r\n            this._renderer.setSize(size.width, size.height)\r\n            this._composer.setSize(size.width, size.height)\r\n            if (this._controlsCamera) {\r\n                this._controlsCamera.aspect = size.width/size.height\r\n                this._controlsCamera.updateProjectionMatrix()\r\n            }\r\n            if (this._playerCamera) {\r\n                this._playerCamera.aspect = size.width/size.height\r\n                this._playerCamera.updateProjectionMatrix()\r\n            }\r\n        }\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n\r\n\r\n\r\n\r\n        this.addToScene = this._scene.add.bind(this._scene)\r\n        this.removeFromScene = this._scene.remove.bind(this._scene)\r\n\r\n\r\n\r\n        const drawFrame = () => {\r\n            this._composer.render(this._scene, this._controlsCamera)\r\n        }\r\n        emitter.subscribe('frameUpdate')(drawFrame)\r\n\r\n\r\n\r\n        this._backgroundImgKey = root.CONSTANTS.studioConfig.sceneEnvironment.backgroundImgKey\r\n        emitter.subscribe('changeSceneEnvironment')(sceneEnvironment => {\r\n            console.log('deprecated!!', 'studio', 'changeSceneEnvironment', sceneEnvironment)\r\n        })\r\n    }\r\n\r\n\r\n    /** PUBLIC ****************************************/\r\n\r\n    setCamera (cam) {\r\n        this._playerCamera = cam\r\n        this._renderPass.camera = this._playerCamera\r\n    }\r\n\r\n\r\n    changeEnvironment (sceneEnvironment, conf = null) {\r\n        this._changeFog(sceneEnvironment, conf)\r\n        this._changeBackground(sceneEnvironment, conf)\r\n    }\r\n\r\n\r\n    /** INTERNAL ****************************************/\r\n\r\n    _changeFog (sceneEnvironment, conf) {\r\n        const { fogNear, fogFar, color } = sceneEnvironment\r\n        if (\r\n            this._scene.fog.near !== fogNear ||\r\n            this._scene.fog.far !== fogFar ||\r\n            this._scene.fog.color !== fogFar\r\n        ) {\r\n            const startData = {\r\n                color: this._scene.fog.color,\r\n                near: this._scene.fog.near,\r\n                far: this._scene.fog.far,\r\n            }\r\n            const endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, 3000)\r\n                .onUpdate(() => {\r\n                    this._scene.fog.color = startData.color\r\n                    this._scene.fog.near = startData.near\r\n                    this._scene.fog.far = startData.far\r\n                    if (conf) { \r\n                        if (conf.updateAmb) this._lightA.color = startData.color\r\n                    } else {\r\n                        this._lightA.color = startData.color\r\n                    }\r\n                    this._renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _changeBackground (sceneEnvironment) {\r\n        const { backgroundImgKey } = sceneEnvironment\r\n\r\n        if (backgroundImgKey !== this._backgroundImgKey) {\r\n            this._backgroundImgKey = backgroundImgKey\r\n            this._scene.background = this._root.assets[backgroundImgKey] || null\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nexport class KeyBoard {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const keys = {\r\n            'up': false,\r\n            'down': false,\r\n            'left': false,\r\n            'right': false,\r\n            'p': false,\r\n        }\r\n\r\n        const keysEnabled = {\r\n            'up': true,\r\n            'down': true,\r\n            'left': true,\r\n            'right': true,\r\n        }\r\n\r\n        this.keysEnabled = keysEnabled\r\n        this.keys = keys\r\n\r\n\r\n        const keyUpdate = function ( keyCode, isDown ) {\r\n            switch( keyCode ) {\r\n                case 38:\r\n                case 87:\r\n                    keysEnabled['up'] && (keys['up'] = isDown)\r\n                    break;\r\n                case 40:\r\n                case 83:\r\n                    keysEnabled['down'] && (keys['down'] = isDown)\r\n                    break;\r\n                case 37:\r\n                case 65:\r\n                    keys['left'] = isDown\r\n                    break;\r\n                case 39:\r\n                case 68:\r\n                    keys['right'] = isDown\r\n                    break;\r\n                case 79: \r\n                    keys['o'] = isDown\r\n                    break;                \r\n                case 80: \r\n                    keys['p'] = isDown\r\n                default:\r\n                    break;\r\n\r\n            }\r\n            emitter.emit('keyEvent')(keys)\r\n        }\r\n\r\n\r\n\r\n        document.addEventListener('keydown', event => keyUpdate(event.keyCode, true))\r\n        document.addEventListener('keyup', event => keyUpdate(event.keyCode, false))\r\n\r\n\r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, true)\r\n            if (key === 'butt-right') keyUpdate(39, true)\r\n            if (key === 'butt-front') keyUpdate(38, true)\r\n            if (key === 'butt-back') keyUpdate(40, true)\r\n        })\r\n        emitter.subscribe('mouseUp')(key => {\r\n            if (key === 'butt-left') keyUpdate(37, false)\r\n            if (key === 'butt-right') keyUpdate(39, false)\r\n            if (key === 'butt-front') keyUpdate(38, false)\r\n            if (key === 'butt-back') keyUpdate(40, false)\r\n        })\r\n    }\r\n\r\n    toggleEnableKeys (key, is) {\r\n        this.keysEnabled[key] = is\r\n        !is && (this.keys[key] = false)\r\n    }\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\nexport class Player {\r\n    constructor (root) {\r\n        const { studio, CONSTANTS } = root\r\n\r\n        const {\r\n            startPos,\r\n            startRot,\r\n            cameraData,\r\n            frontObjPos,\r\n            backObjPos,\r\n            lightDataOne,\r\n        } = CONSTANTS.playerConfig\r\n\r\n\r\n        this._camera = null\r\n        this._isBlocked = true\r\n\r\n        \r\n        this.mesh = new THREE.Object3D()\r\n        this.mesh.rotation.fromArray([0, 0, 0])\r\n        this.mesh.userData.type = 'player'\r\n\r\n\r\n        this.bottomObj = new THREE.Object3D()\r\n        this.bottomObj.position.fromArray([0, -.02, 0])\r\n        this.mesh.add(this.bottomObj)\r\n\r\n        this.frontObj = new THREE.Object3D()\r\n        this.frontObj.position.fromArray([0, 0, -.02])\r\n        this.mesh.add(this.frontObj)\r\n\r\n        this.backObj = new THREE.Object3D()\r\n        this.backObj.position.fromArray([0, 0, 0.02])\r\n        this.mesh.add(this.backObj)\r\n\r\n\r\n        {\r\n            const { fov, ratio, near, far, pos } = cameraData\r\n            this._camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n            this._camera.position.fromArray([0, 0, -2])\r\n            this.mesh.add(this._camera)\r\n        }\r\n\r\n        {\r\n            const { color, strenth, pos } = lightDataOne\r\n            const light = new THREE.PointLight(color, strenth)\r\n            light.position.fromArray(pos)\r\n            this.mesh.add(light)\r\n        }\r\n\r\n        studio.setCamera(this._camera)\r\n        studio.addToScene(this.mesh)\r\n    }\r\n\r\n    toggleBlocked (val) {\r\n        this._isBlocked = val\r\n    }\r\n\r\n    toggleCanMove(key, val) {\r\n        this._isCanMove[key] = val\r\n    }\r\n\r\n    getObj () {\r\n        return this.mesh\r\n    }\r\n\r\n    getCamera () {\r\n        return this._camera\r\n    }\r\n    \r\n    setToPos (x, y, z) {\r\n        this.mesh.position.set(x, y, z)\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport class Helper_MaterialsLib {\r\n    constructor (gameContext) {\r\n        const { assets, CONSTANTS } = gameContext\r\n\r\n        gameContext.materials = createMaterials(assets, CONSTANTS.MATERIALS_CONFIG)\r\n    }\r\n}\r\n\r\n\r\nconst createMaterials = (assets, MATERIALS_CONFIG) => {\r\n    for (let key in assets)\r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\n\r\nexport class Level {\r\n    constructor(root) {\r\n        const { \r\n            studio, \r\n            assets, \r\n            materials, \r\n        } = root\r\n\r\n        const { allMeshes, areas } = createLevelMeshes(assets, materials)\r\n        root.assets.areas = areas\r\n\r\n\r\n        //this.allMeshes = allMeshes\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst createLevelMeshes = (assets, materials) => {\r\n    const allMeshes = {}\r\n    const areas = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        let mesh = null\r\n        \r\n        if (child.name.includes(\"level\")) {\r\n            if (child.name === 'level_020_001') {\r\n                mesh = new THREE.Mesh(child.geometry, materials.groundTop)\r\n            } else {\r\n                mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            }\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n        if (child.name.includes(\"roadwall\")) {\r\n            mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            mesh.userData['isWallWalking'] = true\r\n            allMeshes[child.name] = mesh\r\n        }\r\n\r\n\r\n        if (child.name.includes(\"level\") || child.name.includes(\"roadwall\")) {\r\n            const strArr = child.name.split('_')\r\n\r\n            if (strArr[1] && mesh) {\r\n                if (!areas[+strArr[1]]) {\r\n                    areas[+strArr[1]] = [] \r\n                }\r\n                mesh.userData.area = +strArr[1]\r\n                areas[+strArr[1]].push(mesh)   \r\n            }\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        allMeshes,\r\n        areas\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/level02.d499eb4b.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map3.558e9646.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map2.2bd99ce1.jpg\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/px.c5995c72.jpg\";","export default __webpack_public_path__ + \"static/media/nx.04390d21.jpg\";","export default __webpack_public_path__ + \"static/media/py.f7a76cc4.jpg\";","export default __webpack_public_path__ + \"static/media/ny.4e15a317.jpg\";","export default __webpack_public_path__ + \"static/media/pz.7c1308f5.jpg\";","export default __webpack_public_path__ + \"static/media/nz.6287fe7d.jpg\";","export default __webpack_public_path__ + \"static/media/px.96d0b65f.jpg\";","export default __webpack_public_path__ + \"static/media/nx.8cbf039d.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.09051a4e.jpg\";","export default __webpack_public_path__ + \"static/media/pz.a1539724.jpg\";","export default __webpack_public_path__ + \"static/media/nz.0bc769f7.jpg\";","import * as THREE from \"three\";\r\n\r\n\r\nexport class helper_CollisionsItems_v02 {\r\n    constructor () {\r\n        this._arrMeshes = []\r\n\r\n\r\n        this._vecStart = new THREE.Vector3()\r\n        this._vecDir = new THREE.Vector3()\r\n        this._rayCaster = new THREE.Raycaster(this._vecStart, this._vecDir)\r\n    }\r\n\r\n    setItemToCollision (mesh) {\r\n        for (let i = 0; i < this._arrMeshes.length; ++i) {\r\n            if (this._arrMeshes[i] === mesh) {\r\n                return;\r\n            }\r\n        }\r\n        this._arrMeshes.push(mesh)\r\n    }\r\n\r\n\r\n    removeItemFromCollision(mesh) {\r\n        this._arrMeshes = this._arrMeshes.filter(item => item !== mesh)\r\n    }\r\n\r\n\r\n    checkCollisions (objFrom, objTo, dist) {\r\n        objFrom.getWorldPosition(this._vecStart)\r\n        objTo.getWorldPosition(this._vecDir)\r\n\r\n        this._vecDir.sub(this._vecStart)\r\n\r\n        const intersects = this._rayCaster.intersectObjects(this._arrMeshes)\r\n\r\n        if (intersects[0] && intersects[0].distance < dist) {\r\n            return [ true, intersects[0] ]\r\n        }\r\n        return [ false, null ]\r\n    }\r\n}","import { helper_CollisionsItems_v02 } from '../../../_CORE/helpers/helper_CollisionsItems_v02'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport class system_PlayerMoveOnLevel {\r\n    constructor (root) {\r\n\r\n\r\n\r\n        const { \r\n            emitter, \r\n            CONSTANTS,\r\n            player,\r\n            level,\r\n            assets,\r\n            studio,\r\n        } = root\r\n\r\n\r\n\r\n        let currentArea = 0\r\n        \r\n        //let currentArea = 2\r\n        //player.mesh.position.fromArray([-391.47230276827037, 96.9911994934082, 126.61507891095785])\r\n\r\n        //let currentArea = 4\r\n        //player.mesh.position.fromArray([-531.9216580366183, 62.97990036010742, 198.1976467682245])\r\n\r\n        //let currentArea = 7\r\n        //player.mesh.position.fromArray([-506.33066941797745, 256.5167414826704, 235.8623405780516])\r\n\r\n        // let currentArea = 9\r\n        // player.mesh.position.fromArray([-193.95366264741457, 428.9707048705274, 103.59071280180837])\r\n\r\n        //let currentArea = 11\r\n        //player.mesh.position.fromArray([-393.33123400867925, 1379.4075343917937, 152.5554868722273])\r\n\r\n        //let currentArea = 14\r\n        //player.mesh.position.fromArray([-1101.0757771933072, 1588.5806076412039, -234.70318375594866])\r\n\r\n        //let currentArea = 15\r\n        //player.mesh.position.fromArray([-1634.3476768016508, 1466.6480712890625, 233.90984799762464])\r\n\r\n        //let currentArea = 17\r\n        //player.mesh.position.fromArray([-1642.4763817147712, 1906.31640625, 195.94152733218263])\r\n\r\n        //let currentArea = 18\r\n        //player.mesh.position.fromArray([-1522.2961716632083, 1906.31640625, 24.29171378679233])\r\n\r\n        //let currentArea = 20\r\n        //player.mesh.position.fromArray([-1855.9946632526953, 2158.171875, -21.24875096163542])\r\n        //player.mesh.position.fromArray([-1855.9946632526953, 2178.171875, -21.24875096163542])\r\n\r\n\r\n        const collisionsWalls = new helper_CollisionsItems_v02()\r\n        const updateLevel = changerAreaLevel(assets.areas, studio, collisionsWalls)\r\n        updateLevel(currentArea)\r\n\r\n\r\n        const {\r\n            speed,\r\n            speedDown,\r\n            speedRot,\r\n        } = CONSTANTS.playerConfig\r\n\r\n        let isBlocked = false\r\n        player.toggleBlocked = val => isBlocked = val\r\n\r\n        let isButtonsDisabled = false\r\n        let keys = {}\r\n    \r\n        const quaternionOld = new THREE.Quaternion()\r\n        const quaternionNew = new THREE.Quaternion()\r\n\r\n        const UP_VECTOR = new THREE.Vector3(0, 1, 0)\r\n        const OFFSET_FROM_PLANES = 17\r\n        const OFFSET_FROM_PLANES_TO_DROP = 17.2\r\n        //const OFFSET_FROM_PLANES_TO_STAIR = 16.5\r\n\r\n\r\n\r\n        const rotatePlayerToTop = () => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            quaternionNew.setFromAxisAngle(UP_VECTOR, Math.random() * Math.PI * 2)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    player.mesh.up.copy(UP_VECTOR)\r\n                    isBlocked = false\r\n                })\r\n        }\r\n\r\n\r\n\r\n        const rotatePlayerToCollisionTarget = collision => {\r\n            quaternionOld.copy(player.mesh.quaternion)\r\n            const la = new THREE.Vector3().addVectors(player.mesh.position, collision.face.normal)\r\n            player.mesh.lookAt(la)\r\n            player.mesh.up.copy(collision.face.normal)\r\n            player.mesh.rotateX(Math.PI / 2)\r\n            quaternionNew.copy(player.mesh.quaternion)\r\n\r\n            player.mesh.setRotationFromQuaternion(quaternionOld)\r\n\r\n            isBlocked = true\r\n            helper_rotate(player.mesh, quaternionOld, quaternionNew)\r\n                .then(() => {\r\n                    isBlocked = false\r\n                })\r\n        } \r\n\r\n\r\n\r\n        const checkBottomAndDropDownPlayer = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.bottomObj, OFFSET_FROM_PLANES_TO_DROP)\r\n\r\n            /** update level new area */\r\n            if (isCollision) {\r\n                if (collision.object.userData.area !== currentArea) {\r\n                    currentArea = collision.object.userData.area\r\n                    updateLevel(currentArea)\r\n                }\r\n            }\r\n\r\n\r\n            /** move player to top if on stairs */\r\n            if (isCollision && OFFSET_FROM_PLANES > collision.distance) {\r\n                player.mesh.translateY(OFFSET_FROM_PLANES - collision.distance)\r\n\r\n                return;\r\n            }\r\n\r\n\r\n            /** free down without intercepts */\r\n            if (!isCollision) {\r\n                /** if player not up - rotated to up */\r\n                !player.mesh.up.equals(UP_VECTOR) && rotatePlayerToTop()\r\n                player.mesh.position.y += (speedDown * data.count)\r\n\r\n                return;\r\n            }\r\n\r\n            /** check is player in wall and must down - rotate to top */\r\n            if (\r\n                !collision.object.userData['isWallWalking'] &&\r\n                !player.mesh.up.equals(UP_VECTOR)\r\n            ) {\r\n                rotatePlayerToTop()\r\n                \r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const checkAndMoveFront = data => {\r\n            const [isCollision, collision] = collisionsWalls.checkCollisions(player.mesh, player.frontObj, OFFSET_FROM_PLANES)\r\n\r\n            /** update level new area */\r\n            if (isCollision) {\r\n                if (collision.object.userData.area !== currentArea) {\r\n                    currentArea = collision.object.userData.area\r\n                    updateLevel(currentArea)\r\n                }\r\n            }\r\n\r\n            if (!isCollision) {\r\n                player.mesh.translateZ(-speed * data.count)\r\n            } else if (collision.object.userData['isWallWalking']) {\r\n                rotatePlayerToCollisionTarget(collision)\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n        const checkAndMoveBack = data => {\r\n            const [isCollision] = collisionsWalls.checkCollisions(player.mesh, player.backObj, OFFSET_FROM_PLANES)\r\n            if (isCollision) return;\r\n                \r\n            player.mesh.translateZ(speed * data.count)\r\n        }\r\n\r\n\r\n\r\n        const update = data => {\r\n            if (isButtonsDisabled) return;\r\n\r\n            keys['left'] && player.mesh.rotateY(speedRot * data.count)\r\n            keys['right'] && player.mesh.rotateY(-speedRot * data.count)\r\n\r\n            if (isBlocked) return;\r\n\r\n            checkBottomAndDropDownPlayer(data)\r\n            keys['up'] && checkAndMoveFront(data)\r\n            keys['down'] && checkAndMoveBack(data)\r\n            keys['p'] && console.log(`player.mesh.position.fromArray([${player.mesh.position.x}, ${player.mesh.position.y + 25}, ${player.mesh.position.z}])`)\r\n        }\r\n    \r\n\r\n\r\n        emitter.subscribe('keyEvent')(data => keys = data)\r\n        emitter.subscribe('frameUpdate')(update)\r\n        emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n    }\r\n} \r\n\r\n\r\n\r\n\r\n\r\nconst helper_rotate = (mesh, quat1, quat2) => {\r\n    return new Promise(resolve => {\r\n        let n = 0\r\n\r\n        const update = () => {\r\n            n += 0.03\r\n            n > 1 && (n = 1)\r\n\r\n            mesh.quaternion.slerpQuaternions(quat1, quat2, n)\r\n\r\n            if (n === 1) {\r\n                return resolve()\r\n            }\r\n\r\n            setTimeout(update, 15)\r\n        }\r\n\r\n        update()\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst changerAreaLevel = (areas, studio, collisionsWalls) => {\r\n\r\n    let isFinalEnv = false\r\n\r\n    const changeViewLevel = (ind, action) => {\r\n        if (!areas[ind]) return;\r\n\r\n        for (let i = 0; i < areas[ind].length; ++i) {\r\n            const mesh = areas[ind][i]\r\n            if (action === 'remove') studio.removeFromScene(mesh) \r\n            if (action === 'add') studio.addToScene(mesh) \r\n        } \r\n    } \r\n\r\n    const changeCollisionLevel = (ind, action) => {\r\n        if (!areas[ind]) return;\r\n\r\n        for (let i = 0; i < areas[ind].length; ++i) {\r\n            const mesh = areas[ind][i]\r\n            if (action === 'remove') collisionsWalls.removeItemFromCollision(mesh)\r\n            if (action === 'add') collisionsWalls.setItemToCollision(mesh)\r\n        } \r\n    } \r\n\r\n\r\n    const updateLevel = index => {\r\n        console.log(index)\r\n\r\n\r\n        changeViewLevel(index - 4, 'remove')\r\n        changeViewLevel(index - 3, 'remove')\r\n        changeViewLevel(index - 2, 'add')\r\n        changeViewLevel(index - 1, 'add')\r\n        changeViewLevel(index, 'add')\r\n        changeViewLevel(index + 1, 'add')\r\n        changeViewLevel(index + 2, 'add')\r\n        changeViewLevel(index + 3, 'add')\r\n\r\n\r\n        changeCollisionLevel(index - 3, 'remove')\r\n        changeCollisionLevel(index - 2, 'remove')\r\n        changeCollisionLevel(index - 1, 'add')\r\n        changeCollisionLevel(index, 'add')\r\n        changeCollisionLevel(index + 1, 'add')\r\n        changeCollisionLevel(index + 2, 'add')\r\n    }\r\n\r\n\r\n    return updateLevel\r\n}\r\n\r\n","import { LoaderAssets } from '../../../_CORE/helpers/helper_LoadAssets'\r\nimport { EventEmitter } from \"../../../_CORE/helpers/helper_Emitter\"\r\nimport { UI } from '../../../_CORE/ui/UI'\r\nimport { DeviceResizer } from \"../../../_CORE/helpers/helper_DeviceResizer\"\r\nimport { FrameUpdater } from \"../../../_CORE/helpers/helper_FrameUpater\"\r\nimport { Helper_TweenUpdater } from \"../../../_CORE/helpers/helper_TweenUpdater\"\r\nimport { Studio } from '../../../_CORE/entities/createStudio'\r\nimport { KeyBoard } from \"../../../_CORE/helpers/helper_KeyBoard\"\r\nimport { Player } from '../../../_CORE/entities/createPlayer_v02'\r\n\r\n\r\nimport { Helper_MaterialsLib } from '../../../_CORE/helpers/helper_MaterialsLib'\r\n\r\n\r\nimport { Level } from '../systems/system_level'\r\nimport levelRoomsSrc from '../../../assets/chapter04/level02.obj'\r\nimport mapFloorOuter from '../../../assets/chapter04/floor_outer_map3.jpg'\r\nimport mapFloorOuter2 from '../../../assets/chapter04/floor_outer_map2.jpg'\r\nimport mapTop from '../../../assets/floor_outer_map.jpg'\r\nimport pxjpg from '../../../assets/sky3/px.jpg'\r\nimport nxjpg from '../../../assets/sky3/nx.jpg'\r\nimport pyjpg from '../../../assets/sky3/py.jpg'\r\nimport nyjpg from '../../../assets/sky3/ny.jpg'\r\nimport pzjpg from '../../../assets/sky3/pz.jpg'\r\nimport nzjpg from '../../../assets/sky3/nz.jpg'\r\n\r\nimport px2jpg from '../../../assets/sky2/px.jpg'\r\nimport nx2jpg from '../../../assets/sky2/nx.jpg'\r\nimport py2jpg from '../../../assets/sky2/py.jpg'\r\nimport ny2jpg from '../../../assets/sky2/ny.jpg'\r\nimport pz2jpg from '../../../assets/sky2/pz.jpg'\r\nimport nz2jpg from '../../../assets/sky2/nz.jpg'\r\n\r\n\r\nimport { system_PlayerMoveOnLevel } from '../systems/system_PlayerMoveOnLevel' \r\n\r\n\r\nimport { system_Monsters } from '../systems/system_Monsters'\r\nimport monsterSrc from '../../../assets/chapter04/monster.obj'\r\nimport monsterSkinSrc from '../../../assets/chapter04/skin.jpg'\r\n\r\n\r\nimport { StarterPlay } from '../actions/StarterPlay'\r\n\r\n\r\n\r\n\r\nexport const GAME_MODULES = [\r\n    {\r\n        key: 'emitter',\r\n        constr: EventEmitter,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'ui',\r\n        constr: UI,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'deviceResizer',\r\n        constr: DeviceResizer,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n    {\r\n        key: 'loaderAssets',\r\n        constr: LoaderAssets,\r\n        initStateKey: 'pageLoaded',\r\n    },\r\n\r\n    /////////////////////////////////////////\r\n\r\n    {\r\n        key: 'frameUpdater',\r\n        constr: FrameUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'tweenUpdater',\r\n        constr: Helper_TweenUpdater,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'studio',\r\n        constr: Studio,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'keyBoard',\r\n        constr: KeyBoard,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'player',\r\n        constr: Player,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'materialsLib',\r\n        constr: Helper_MaterialsLib,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'level',\r\n        constr: Level,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: levelRoomsSrc, key: 'level-rooms' },\r\n            { type: 'cubeTextures', path: [ pxjpg, nxjpg, pyjpg, nyjpg, pzjpg, nzjpg, ], key: 'skyBox' },\r\n            { type: 'cubeTextures', path: [ px2jpg, nx2jpg, py2jpg, ny2jpg, pz2jpg, nz2jpg, ], key: 'skyBox2' },\r\n            { type: 'img', path: mapFloorOuter, key: 'mapFloorOuter', wrap: true },\r\n            { type: 'img', path: mapFloorOuter2, key: 'mapFloorOuter2', wrap: true },\r\n            { type: 'img', path: mapTop, key: 'mapTop', wrap: true },\r\n        ],\r\n    },\r\n    {\r\n        key: 'system_PlayerMoveOnLevel',\r\n        constr: system_PlayerMoveOnLevel,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n    {\r\n        key: 'system_Monsters',\r\n        constr: system_Monsters,\r\n        initStateKey: 'beforeStartPlay',\r\n        assetsToLoad: [\r\n            { type: 'obj', path: monsterSrc, key: 'monster' },\r\n            { type: 'img', path: monsterSkinSrc, key: 'skin', wrap: true },\r\n        ]\r\n    },\r\n    {\r\n        key: 'starterPlay',\r\n        constr: StarterPlay,\r\n        initStateKey: 'beforeStartPlay',\r\n    },\r\n]","\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport class DeviceResizer {\r\n    constructor (gameContext) {\r\n        let { emitter, appWrapper } = gameContext\r\n\r\n        !appWrapper && (appWrapper = document.querySelector('.app-wrapper')) \r\n\r\n        emitter.subscribe('mouseDown')(key => {\r\n            if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n        })\r\n\r\n        /** fullscreen */\r\n        const openAppFullScreenIfMobile = () => {\r\n            if (appWrapper.requestFullscreen) {\r\n                appWrapper.requestFullscreen()\r\n            } else if (appWrapper.mozRequestFullScreen) {\r\n                appWrapper.mozRequestFullScreen()\r\n            } else if (appWrapper.webkitRequestFullscreen) {\r\n                appWrapper.webkitRequestFullscreen()\r\n            } else if (appWrapper.msRequestFullscreen) {\r\n                appWrapper.msRequestFullscreen()\r\n            }\r\n        }\r\n\r\n        /** resize */\r\n        const resize = e => {\r\n            appWrapper.style.width = window.innerWidth + 'px'\r\n            appWrapper.style.height = window.innerHeight + 'px'\r\n            appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n            if (!document.fullscreenElement) {\r\n                emitter.emit('screenMode')('exitFullScreen')\r\n            }\r\n\r\n        }\r\n\r\n        window.addEventListener('resize', resize)\r\n        resize()\r\n    }\r\n}\r\n","import * as R from 'ramda'\r\n\r\n\r\nexport class FrameUpdater {\r\n    constructor (gameContext) {\r\n        const { emitter } = gameContext\r\n\r\n        const emitFrameUpdate = emitter.emit('frameUpdate')\r\n\r\n        let data = {\r\n            time: 0,\r\n            delta: 0,\r\n            count: 0,\r\n            oldTime: 0\r\n        }\r\n\r\n        const getDataFromGlobalVar = () => data\r\n\r\n        const updateTime = data => {\r\n            data.time = Date.now()\r\n            return data\r\n        }\r\n\r\n        const updateDelta = data => {\r\n            data.delta = (data.time - data.oldTime) * 0.001\r\n            if (isNaN(data.delta) || data.delta > 1000 || data.delta === 0 ) {\r\n                data.delta = 1000/60 * 0.001;\r\n            }\r\n            return data\r\n        }\r\n\r\n        const updateCount = data => {\r\n            data.count = data.delta / (1/60)\r\n            return data\r\n        }\r\n\r\n        const emit = data => {\r\n            emitFrameUpdate(data)\r\n            return data\r\n        }\r\n\r\n        const updateOldTime = data => {\r\n            data.oldTime = data.time\r\n            return data\r\n        }\r\n\r\n        const saveDataInGlobalVar = dataFromChine => {\r\n            data = dataFromChine\r\n            return data\r\n        }\r\n\r\n        const update = R.pipe(\r\n            getDataFromGlobalVar,\r\n            updateTime,\r\n            updateDelta,\r\n            updateCount,\r\n            emit,\r\n            updateOldTime,\r\n            saveDataInGlobalVar\r\n        )\r\n\r\n        const animate = () => {\r\n            requestAnimationFrame(animate)\r\n            update(data)\r\n        }\r\n\r\n        animate()\r\n\r\n    }\r\n}","import * as TWEEN from '@tweenjs/tween.js'\r\n\r\n\r\nexport class Helper_TweenUpdater {\r\n    constructor (gameContext) {\r\n        gameContext['emitter'].subscribe('frameUpdate')(() => TWEEN.update())\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\n\r\nexport class system_Monsters {\r\n    constructor(root) {\r\n    //     const { \r\n    //         studio, \r\n    //         assets, \r\n    //         materials, \r\n    //     } = root\r\n\r\n    //     assets.monster.position.fromArray([-1855.9946632526953, 2120.171875, -90.80075096163549])\r\n    //     assets.monster.traverse(item => {\r\n    //         item.material = materials['skin']\r\n    //     })\r\n\r\n    //     console.log(assets.monster)\r\n\r\n    //     studio.addToScene(assets.monster)\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/monster.b2d77bee.obj\";","export default __webpack_public_path__ + \"static/media/skin.74238fbf.jpg\";","import { START_ENV_CONFIG } from '../constants/constants_elements';\r\n\r\n\r\nexport class StarterPlay {\r\n    constructor (gameContext) {\r\n        const { player, ui, studio, dispatcher } = gameContext\r\n        \r\n        dispatcher.dispatch({ \r\n            type: 'CHANGE_INFO_CHAPTER', \r\n            currentChapterIndex: 3,\r\n        })\r\n\r\n        ui.showStartButton(() => {\r\n            player.toggleBlocked(false)\r\n            studio.changeEnvironment(START_ENV_CONFIG, { updateAmb: false })\r\n\r\n        })\r\n    }\r\n}","// import { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\n// import * as CONSTANTS from './constants/constants_elements'\r\n// import { TRANSLATE_WORLDS } from \"./constants/constants_replicies\";\r\n\r\n// // ********** CHAPTER03 ****************\r\n\r\n// import { GAME_MODULES } from \"./constants/constants_modules\"\r\n// window.addEventListener('load', () => pipeLineForInit(GAME_MODULES, { ...CONSTANTS, TRANSLATE_WORLDS }))\r\n\r\nimport { pipeLineForInit } from '../../_CORE/pipeLines/initPipeLine'\r\nimport * as CONSTANTS from './constants/constants_elements'\r\nimport { GAME_MODULES } from \"./constants/constants_modules\"\r\n\r\n\r\nwindow.addEventListener('load', () => pipeLineForInit(GAME_MODULES, CONSTANTS ))\r\n"],"sourceRoot":""}